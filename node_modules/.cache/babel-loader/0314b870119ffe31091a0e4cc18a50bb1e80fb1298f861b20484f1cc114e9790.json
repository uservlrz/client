{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\confi\\\\Downloads\\\\pdf-summarizer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [summaries, setSummaries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('cards'); // 'cards' ou 'text'\n  const textAreaRef = useRef(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type === 'application/pdf') {\n      setFile(selectedFile);\n      setError(null);\n    } else {\n      setFile(null);\n      setError('Por favor, selecione um arquivo PDF válido.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Por favor, selecione um arquivo PDF válido.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('pdf', file);\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao processar o documento');\n      }\n      const data = await response.json();\n      setSummaries(data.summaries);\n    } catch (error) {\n      console.error('Erro ao enviar o arquivo:', error);\n      setError(error.message || 'Erro ao processar o documento. Tente novamente.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Função para copiar texto para a área de transferência\n  const copyToClipboard = () => {\n    if (textAreaRef.current) {\n      textAreaRef.current.select();\n      document.execCommand('copy');\n      // Mostrar uma mensagem de sucesso (opcional)\n      alert('Resultados copiados para a área de transferência!');\n    }\n  };\n\n  // Gerar texto formatado de todos os resultados para cópia\n  const getFormattedTextForCopy = () => {\n    let formattedText = '';\n    summaries.forEach(summary => {\n      const lines = summary.content.split('\\n');\n      let currentSection = '';\n      lines.forEach(line => {\n        // Se for um título de seção\n        if (line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i)) {\n          currentSection = line;\n          formattedText += `\\n${currentSection}\\n${'='.repeat(currentSection.length)}\\n\\n`;\n        } else if (line.trim()) {\n          formattedText += `${line}\\n`;\n        }\n      });\n      formattedText += '\\n';\n    });\n    return formattedText;\n  };\n\n  // Identifica se uma linha é um título de seção (como SÉRIE ERITROCITÁRIA)\n  const isSectionTitle = line => {\n    return line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) !== null;\n  };\n\n  // Função para formatar as linhas de resultados\n  const formatResultLine = line => {\n    // Se for um título de seção, renderize como título\n    if (isSectionTitle(line)) {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"section-title\",\n        children: line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Verifica se a linha tem o formato \"Exame: Resultado | Referência: Valor\"\n    const parts = line.split('|');\n    if (parts.length === 2) {\n      // Separa o resultado do exame e a referência\n      const resultPart = parts[0].trim();\n      const referencePart = parts[1].trim();\n\n      // Extrai o nome do exame e o valor\n      const resultMatch = resultPart.match(/^(.+):\\s*(.+)$/);\n      if (resultMatch) {\n        const examName = resultMatch[1].trim();\n        const examValue = resultMatch[2].trim();\n\n        // Verifica se o valor tem '/' indicando resultado duplo\n        if (examValue.includes('/')) {\n          const [percentValue, absoluteValue] = examValue.split('/').map(v => v.trim());\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exam-result\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-name\",\n              children: [examName, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-value dual-value\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"percent-value\",\n                children: percentValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"divider\",\n                children: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"absolute-value\",\n                children: absoluteValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-reference\",\n              children: [\" | \", referencePart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exam-result\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-name\",\n              children: [examName, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-value\",\n              children: examValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-reference\",\n              children: [\" | \", referencePart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this);\n        }\n      }\n    }\n\n    // Fallback para linhas que não têm o formato esperado\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-result\",\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Extrator de Resultados de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Fa\\xE7a upload de um PDF de exames de sangue para extrair os resultados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploader-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"pdf-upload\",\n              onChange: handleFileChange,\n              accept: \"application/pdf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pdf-upload\",\n              className: \"file-label\",\n              children: file ? file.name : 'Escolher arquivo PDF de exames'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"upload-button\",\n            disabled: !file,\n            children: \"Extrair Resultados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Processando o documento, por favor aguarde...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [\"Erro: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-mode-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-button ${viewMode === 'cards' ? 'active' : ''}`,\n          onClick: () => setViewMode('cards'),\n          children: \"Visualiza\\xE7\\xE3o em Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-button ${viewMode === 'text' ? 'active' : ''}`,\n          onClick: () => setViewMode('text'),\n          children: \"Visualiza\\xE7\\xE3o para C\\xF3pia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: summaries.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-message\",\n          children: \"Os resultados dos exames aparecer\\xE3o aqui.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this) : viewMode === 'cards' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Resultados dos Exames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summaries-list\",\n            children: summaries.map((summary, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"P\\xE1gina \", summary.page]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-content\",\n                children: summary.content.split(\"\\n\").map((line, i) => line.trim() ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `result-line ${isSectionTitle(line) ? 'section-header' : ''}`,\n                  children: formatResultLine(line)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 27\n                }, this) : null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"export-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.print(),\n              className: \"export-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"print-icon\",\n                children: \"\\uD83D\\uDDA8\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), \" Imprimir Resultados\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-view-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Resultados para C\\xF3pia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"copy-instructions\",\n            children: \"Todos os resultados em formato de texto para copiar e colar:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-area-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: textAreaRef,\n              className: \"results-text-area\",\n              value: getFormattedTextForCopy(),\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: copyToClipboard,\n              className: \"copy-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"copy-icon\",\n                children: \"\\uD83D\\uDCCB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), \" Copiar para \\xC1rea de Transfer\\xEAncia\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 - Extrator de Resultados de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"737MdrHxzxwT5Jz/ZjRV2k2ow1c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","summaries","setSummaries","loading","setLoading","error","setError","viewMode","setViewMode","textAreaRef","handleFileChange","e","selectedFile","target","files","type","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","console","message","copyToClipboard","current","select","document","execCommand","alert","getFormattedTextForCopy","formattedText","forEach","summary","lines","content","split","currentSection","line","match","repeat","length","trim","isSectionTitle","formatResultLine","className","children","fileName","_jsxFileName","lineNumber","columnNumber","parts","resultPart","referencePart","resultMatch","examName","examValue","includes","percentValue","absoluteValue","map","v","onSubmit","id","onChange","accept","htmlFor","name","disabled","onClick","index","page","i","window","print","ref","value","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/confi/Downloads/pdf-summarizer/client/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [viewMode, setViewMode] = useState('cards'); // 'cards' ou 'text'\r\n  const textAreaRef = useRef(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile && selectedFile.type === 'application/pdf') {\r\n      setFile(selectedFile);\r\n      setError(null);\r\n    } else {\r\n      setFile(null);\r\n      setError('Por favor, selecione um arquivo PDF válido.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      setError('Por favor, selecione um arquivo PDF válido.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('pdf', file);\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Erro ao processar o documento');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSummaries(data.summaries);\r\n    } catch (error) {\r\n      console.error('Erro ao enviar o arquivo:', error);\r\n      setError(error.message || 'Erro ao processar o documento. Tente novamente.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Função para copiar texto para a área de transferência\r\n  const copyToClipboard = () => {\r\n    if (textAreaRef.current) {\r\n      textAreaRef.current.select();\r\n      document.execCommand('copy');\r\n      // Mostrar uma mensagem de sucesso (opcional)\r\n      alert('Resultados copiados para a área de transferência!');\r\n    }\r\n  };\r\n\r\n  // Gerar texto formatado de todos os resultados para cópia\r\n  const getFormattedTextForCopy = () => {\r\n    let formattedText = '';\r\n    \r\n    summaries.forEach((summary) => {\r\n      const lines = summary.content.split('\\n');\r\n      let currentSection = '';\r\n      \r\n      lines.forEach((line) => {\r\n        // Se for um título de seção\r\n        if (line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i)) {\r\n          currentSection = line;\r\n          formattedText += `\\n${currentSection}\\n${'='.repeat(currentSection.length)}\\n\\n`;\r\n        } else if (line.trim()) {\r\n          formattedText += `${line}\\n`;\r\n        }\r\n      });\r\n      \r\n      formattedText += '\\n';\r\n    });\r\n    \r\n    return formattedText;\r\n  };\r\n\r\n  // Identifica se uma linha é um título de seção (como SÉRIE ERITROCITÁRIA)\r\n  const isSectionTitle = (line) => {\r\n    return line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) !== null;\r\n  };\r\n\r\n  // Função para formatar as linhas de resultados\r\n  const formatResultLine = (line) => {\r\n    // Se for um título de seção, renderize como título\r\n    if (isSectionTitle(line)) {\r\n      return <h4 className=\"section-title\">{line}</h4>;\r\n    }\r\n    \r\n    // Verifica se a linha tem o formato \"Exame: Resultado | Referência: Valor\"\r\n    const parts = line.split('|');\r\n    \r\n    if (parts.length === 2) {\r\n      // Separa o resultado do exame e a referência\r\n      const resultPart = parts[0].trim();\r\n      const referencePart = parts[1].trim();\r\n      \r\n      // Extrai o nome do exame e o valor\r\n      const resultMatch = resultPart.match(/^(.+):\\s*(.+)$/);\r\n      \r\n      if (resultMatch) {\r\n        const examName = resultMatch[1].trim();\r\n        const examValue = resultMatch[2].trim();\r\n        \r\n        // Verifica se o valor tem '/' indicando resultado duplo\r\n        if (examValue.includes('/')) {\r\n          const [percentValue, absoluteValue] = examValue.split('/').map(v => v.trim());\r\n          \r\n          return (\r\n            <div className=\"exam-result\">\r\n              <span className=\"exam-name\">{examName}:</span> \r\n              <span className=\"exam-value dual-value\">\r\n                <span className=\"percent-value\">{percentValue}</span>\r\n                <span className=\"divider\">/</span>\r\n                <span className=\"absolute-value\">{absoluteValue}</span>\r\n              </span>\r\n              <span className=\"exam-reference\"> | {referencePart}</span>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"exam-result\">\r\n              <span className=\"exam-name\">{examName}:</span> \r\n              <span className=\"exam-value\">{examValue}</span>\r\n              <span className=\"exam-reference\"> | {referencePart}</span>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Fallback para linhas que não têm o formato esperado\r\n    return <div className=\"exam-result\">{line}</div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Extrator de Resultados de Exames</h1>\r\n        <p className=\"subtitle\">Faça upload de um PDF de exames de sangue para extrair os resultados</p>\r\n      </header>\r\n      <main>\r\n        <div className=\"uploader-container\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"file-input-container\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"pdf-upload\"\r\n                onChange={handleFileChange}\r\n                accept=\"application/pdf\"\r\n              />\r\n              <label htmlFor=\"pdf-upload\" className=\"file-label\">\r\n                {file ? file.name : 'Escolher arquivo PDF de exames'}\r\n              </label>\r\n            </div>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"upload-button\"\r\n              disabled={!file}\r\n            >\r\n              Extrair Resultados\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {loading && <p className=\"loading\">Processando o documento, por favor aguarde...</p>}\r\n        {error && <p className=\"error\">Erro: {error}</p>}\r\n\r\n        {summaries.length > 0 && (\r\n          <div className=\"view-mode-toggle\">\r\n            <button \r\n              className={`toggle-button ${viewMode === 'cards' ? 'active' : ''}`}\r\n              onClick={() => setViewMode('cards')}\r\n            >\r\n              Visualização em Cards\r\n            </button>\r\n            <button \r\n              className={`toggle-button ${viewMode === 'text' ? 'active' : ''}`}\r\n              onClick={() => setViewMode('text')}\r\n            >\r\n              Visualização para Cópia\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"summary-container\">\r\n          {summaries.length === 0 ? (\r\n            <p className=\"empty-message\">Os resultados dos exames aparecerão aqui.</p>\r\n          ) : viewMode === 'cards' ? (\r\n            <>\r\n              <h2>Resultados dos Exames</h2>\r\n              <div className=\"summaries-list\">\r\n                {summaries.map((summary, index) => (\r\n                  <div key={index} className=\"summary-card\">\r\n                    <div className=\"card-header\">\r\n                      <h3>Página {summary.page}</h3>\r\n                    </div>\r\n                    <div className=\"summary-content\">\r\n                      {summary.content.split(\"\\n\").map((line, i) => (\r\n                        line.trim() ? (\r\n                          <div key={i} className={`result-line ${isSectionTitle(line) ? 'section-header' : ''}`}>\r\n                            {formatResultLine(line)}\r\n                          </div>\r\n                        ) : null\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"export-container\">\r\n                <button onClick={() => window.print()} className=\"export-button\">\r\n                  <i className=\"print-icon\">🖨️</i> Imprimir Resultados\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"text-view-container\">\r\n              <h2>Resultados para Cópia</h2>\r\n              <p className=\"copy-instructions\">Todos os resultados em formato de texto para copiar e colar:</p>\r\n              <div className=\"text-area-container\">\r\n                <textarea\r\n                  ref={textAreaRef}\r\n                  className=\"results-text-area\"\r\n                  value={getFormattedTextForCopy()}\r\n                  readOnly\r\n                />\r\n                <button onClick={copyToClipboard} className=\"copy-button\">\r\n                  <i className=\"copy-icon\">📋</i> Copiar para Área de Transferência\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n      <footer>\r\n        <p>© 2025 - Extrator de Resultados de Exames</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}