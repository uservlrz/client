{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\confi\\\\Downloads\\\\pdf-summarizer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js - Versão com Chunked Upload integrado\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport ErrorHandler from './components/ErrorHandler';\n\n// Função para determinar a URL da API baseada no ambiente\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getApiUrl() {\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:5000';\n  }\n  return 'https://server-theta-murex.vercel.app';\n}\nconst API_URL = getApiUrl();\n\n// Classe para gerenciar uploads chunked\nclass ChunkedUploader {\n  constructor(chunkSize = 3.5 * 1024 * 1024) {\n    // 3.5MB por chunk\n    this.chunkSize = chunkSize;\n  }\n  async uploadFile(file, onProgress) {\n    if (file.size <= 4 * 1024 * 1024) {\n      return this.uploadNormal(file, onProgress);\n    } else {\n      return this.uploadChunked(file, onProgress);\n    }\n  }\n  async uploadNormal(file, onProgress) {\n    const formData = new FormData();\n    formData.append('pdf', file);\n    const response = await fetch(`${API_URL}/api/upload`, {\n      method: 'POST',\n      body: formData\n    });\n    if (onProgress) onProgress(100);\n    if (!response.ok) {\n      let errorMessage = `Erro ${response.status}: ${response.statusText}`;\n      try {\n        const errorData = await response.json();\n        if (errorData.message) errorMessage = errorData.message;\n      } catch (jsonError) {}\n      throw new Error(errorMessage);\n    }\n    return response.json();\n  }\n  async uploadChunked(file, onProgress) {\n    const totalChunks = Math.ceil(file.size / this.chunkSize);\n    const uploadId = Date.now().toString();\n    for (let i = 0; i < totalChunks; i++) {\n      const start = i * this.chunkSize;\n      const end = Math.min(start + this.chunkSize, file.size);\n      const chunk = file.slice(start, end);\n      const formData = new FormData();\n      formData.append('chunk', chunk);\n      formData.append('chunkIndex', i);\n      formData.append('totalChunks', totalChunks);\n      formData.append('uploadId', uploadId);\n      formData.append('fileName', file.name);\n      const response = await fetch(`${API_URL}/api/upload-chunk`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Chunk ${i} failed: ${response.statusText}`);\n      }\n      if (onProgress) {\n        const progress = (i + 1) / totalChunks * 90;\n        onProgress(Math.round(progress));\n      }\n    }\n    const finalResponse = await fetch(`${API_URL}/api/finalize-upload`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        uploadId\n      })\n    });\n    if (!finalResponse.ok) {\n      throw new Error(`Finalization failed: ${finalResponse.statusText}`);\n    }\n    if (onProgress) onProgress(100);\n    return finalResponse.json();\n  }\n}\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n  const [patientName, setPatientName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [apiStatus, setApiStatus] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [processingStage, setProcessingStage] = useState(null);\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\n  const [processedFiles, setProcessedFiles] = useState(0);\n  const [totalFiles, setTotalFiles] = useState(0);\n  const [dragOver, setDragOver] = useState(false);\n\n  // Estados para o divisor de PDF\n  const [activeTab, setActiveTab] = useState('extractor');\n  const [selectedFilesForSplit, setSelectedFilesForSplit] = useState([]);\n  const [isSplitting, setIsSplitting] = useState(false);\n  const [splitError, setSplitError] = useState(null);\n  const [splitSuccess, setSplitSuccess] = useState(null);\n  const [splitFiles, setSplitFiles] = useState([]);\n  const [dragOverSplitter, setDragOverSplitter] = useState(false);\n  const [splittingProgress, setSplittingProgress] = useState({\n    current: 0,\n    total: 0,\n    fileName: ''\n  });\n  const [splitParts, setSplitParts] = useState(2);\n  const textAreaRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const splitFileInputRef = useRef(null);\n  const uploaderRef = useRef(new ChunkedUploader());\n\n  // Função para carregar PDF-lib dinamicamente\n  const loadPDFLib = useCallback(async () => {\n    if (window.PDFLib) return window.PDFLib;\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js';\n    document.head.appendChild(script);\n    return new Promise((resolve, reject) => {\n      script.onload = () => {\n        if (window.PDFLib) {\n          resolve(window.PDFLib);\n        } else {\n          reject(new Error('Falha ao carregar PDF-lib'));\n        }\n      };\n      script.onerror = () => reject(new Error('Erro ao carregar PDF-lib'));\n    });\n  }, []);\n\n  // Verificar status da API ao carregar\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      setApiStatus({\n        status: 'checking',\n        message: 'Verificando conexão...',\n        url: API_URL\n      });\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Servidor indisponível',\n          error: error.message,\n          url: API_URL\n        });\n      }\n    };\n    checkApiStatus();\n  }, []);\n\n  // Função para reconectar com a API\n  const retryApiConnection = useCallback(() => {\n    setApiStatus({\n      status: 'checking',\n      message: 'Reconectando...',\n      url: API_URL\n    });\n    setTimeout(async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n          setError(null);\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Servidor indisponível',\n          url: API_URL\n        });\n      }\n    }, 1000);\n  }, []);\n\n  // Função para resetar o estado do extrator\n  const handleReset = useCallback(() => {\n    setSummaries([]);\n    setPatientName('');\n    setError(null);\n    setFiles([]);\n    setUploadStatus(null);\n    setProcessingStage(null);\n    setCurrentProcessingFile(null);\n    setProcessedFiles(0);\n    setTotalFiles(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Função para resetar o estado do divisor\n  const resetSplitter = useCallback(() => {\n    setSelectedFilesForSplit([]);\n    setSplitFiles([]);\n    setSplitError(null);\n    setSplitSuccess(null);\n    setSplittingProgress({\n      current: 0,\n      total: 0,\n      fileName: ''\n    });\n    setSplitParts(2);\n    if (splitFileInputRef.current) {\n      splitFileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Handlers para drag and drop do extrator\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    setDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    setDragOver(false);\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    setDragOver(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\n      setError('Por favor, solte apenas arquivos PDF válidos.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\n    setError(null);\n    setUploadStatus(null);\n    setProcessingStage(null);\n  }, []);\n\n  // Handlers para drag and drop do divisor\n  const handleSplitterDragOver = useCallback(e => {\n    e.preventDefault();\n    setDragOverSplitter(true);\n  }, []);\n  const handleSplitterDragLeave = useCallback(e => {\n    e.preventDefault();\n    setDragOverSplitter(false);\n  }, []);\n  const handleSplitterDrop = useCallback(e => {\n    e.preventDefault();\n    setDragOverSplitter(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length > 0) {\n      setSelectedFilesForSplit(prevFiles => [...prevFiles, ...pdfFiles]);\n      setSplitError(null);\n      setSplitFiles([]);\n      setSplitSuccess(null);\n    } else if (droppedFiles.length > 0) {\n      setSplitError('Por favor, solte apenas arquivos PDF válidos.');\n      setTimeout(() => setSplitError(null), 3000);\n    }\n  }, []);\n  const handleFileChange = useCallback(e => {\n    const selectedFiles = Array.from(e.target.files);\n    setUploadStatus(null);\n    setProcessingStage(null);\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\n      setError('Por favor, selecione apenas arquivos PDF válidos.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\n    setError(null);\n  }, []);\n  const handleSplitFileChange = useCallback(e => {\n    const selectedFiles = Array.from(e.target.files);\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length > 0) {\n      setSelectedFilesForSplit(prevFiles => [...prevFiles, ...pdfFiles]);\n      setSplitError(null);\n      setSplitFiles([]);\n      setSplitSuccess(null);\n    } else if (selectedFiles.length > 0) {\n      setSplitError('Por favor, selecione apenas arquivos PDF válidos.');\n      setTimeout(() => setSplitError(null), 3000);\n    }\n  }, []);\n\n  // Função para remover arquivo do extrator\n  const removeFile = useCallback(index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  }, []);\n\n  // Função para remover arquivo do divisor\n  const removeSplitFile = useCallback(index => {\n    setSelectedFilesForSplit(prevFiles => prevFiles.filter((_, i) => i !== index));\n  }, []);\n\n  // Função para limpar todos os arquivos do extrator\n  const clearAllFiles = useCallback(() => {\n    setFiles([]);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Função para limpar todos os arquivos do divisor\n  const clearAllSplitFiles = useCallback(() => {\n    setSelectedFilesForSplit([]);\n    if (splitFileInputRef.current) {\n      splitFileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Função para dividir um único PDF\n  const splitSinglePDF = useCallback(async (file, PDFLib, parts) => {\n    const arrayBuffer = await file.arrayBuffer();\n    let pdfDoc = null;\n    let loadMethod = '';\n    try {\n      pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer);\n      loadMethod = 'normal';\n    } catch (firstError) {\n      console.log(`Erro ao carregar ${file.name} normalmente:`, firstError.message);\n      if (firstError.message && firstError.message.includes('encrypted')) {\n        try {\n          console.log(`Tentando ignorar criptografia para ${file.name}...`);\n          pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer, {\n            ignoreEncryption: true,\n            updateMetadata: false,\n            throwOnInvalidObject: false\n          });\n          loadMethod = 'ignoreEncryption';\n        } catch (secondError) {\n          console.log(`Falha ao ignorar criptografia para ${file.name}:`, secondError.message);\n          try {\n            console.log(`Tentando senhas comuns para ${file.name}...`);\n            const commonPasswords = ['', '1234', 'admin', 'password', 'pdf', 'exame', 'laudo', 'laboratorio', '123456'];\n            for (const password of commonPasswords) {\n              try {\n                pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer, {\n                  password,\n                  updateMetadata: false,\n                  throwOnInvalidObject: false\n                });\n                loadMethod = `senha: \"${password || 'vazia'}\"`;\n                break;\n              } catch (passwordError) {\n                continue;\n              }\n            }\n            if (!pdfDoc) {\n              throw new Error('Nenhuma senha comum funcionou');\n            }\n          } catch (thirdError) {\n            console.log(`Falha com senhas comuns para ${file.name}:`, thirdError.message);\n            try {\n              console.log(`Tentando modo de recuperação para ${file.name}...`);\n              pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer, {\n                ignoreEncryption: true,\n                throwOnInvalidObject: false,\n                updateMetadata: false,\n                parseSpeed: 150\n              });\n              loadMethod = 'recuperação';\n            } catch (fourthError) {\n              throw new Error(`PDF \"${file.name}\" está protegido e não pode ser dividido. Erro: ${firstError.message.includes('encrypted') ? 'Documento criptografado/protegido' : firstError.message}`);\n            }\n          }\n        }\n      } else {\n        throw new Error(`Erro ao processar \"${file.name}\": ${firstError.message}`);\n      }\n    }\n    console.log(`PDF ${file.name} carregado com sucesso usando método: ${loadMethod}`);\n    const totalPages = pdfDoc.getPageCount();\n    if (totalPages < parts) {\n      throw new Error(`O PDF \"${file.name}\" deve ter pelo menos ${parts} páginas para ser dividido em ${parts} partes. (Páginas encontradas: ${totalPages})`);\n    }\n    const pagesPerPart = Math.ceil(totalPages / parts);\n    const resultFiles = [];\n    const errors = [];\n    for (let i = 0; i < parts; i++) {\n      try {\n        const newPdf = await PDFLib.PDFDocument.create();\n        const startPage = i * pagesPerPart;\n        const endPage = Math.min(startPage + pagesPerPart, totalPages);\n        if (startPage < totalPages) {\n          const pageIndices = Array.from({\n            length: endPage - startPage\n          }, (_, index) => startPage + index);\n          try {\n            const copiedPages = await newPdf.copyPages(pdfDoc, pageIndices);\n            copiedPages.forEach(page => newPdf.addPage(page));\n          } catch (copyError) {\n            console.warn(`Erro ao copiar páginas ${startPage + 1}-${endPage} de ${file.name}:`, copyError.message);\n            for (let pageIndex of pageIndices) {\n              try {\n                const [copiedPage] = await newPdf.copyPages(pdfDoc, [pageIndex]);\n                newPdf.addPage(copiedPage);\n              } catch (singlePageError) {\n                console.warn(`Erro ao copiar página ${pageIndex + 1} de ${file.name}:`, singlePageError.message);\n                errors.push(`Página ${pageIndex + 1} não pôde ser copiada`);\n                const blankPage = newPdf.addPage();\n                try {\n                  blankPage.drawText(`[Página ${pageIndex + 1} não pôde ser recuperada]`, {\n                    x: 50,\n                    y: blankPage.getHeight() / 2,\n                    size: 12\n                  });\n                } catch (textError) {\n                  // Página em branco como fallback\n                }\n              }\n            }\n          }\n          const pdfBytes = await newPdf.save({\n            useObjectStreams: false\n          });\n          const originalName = file.name.replace('.pdf', '');\n          const fileName = `${originalName}_parte${i + 1}de${parts}.pdf`;\n          resultFiles.push({\n            name: fileName,\n            bytes: pdfBytes,\n            pages: endPage - startPage,\n            blob: new Blob([pdfBytes], {\n              type: 'application/pdf'\n            }),\n            originalFile: file.name,\n            partNumber: i + 1,\n            totalParts: parts,\n            loadMethod: loadMethod,\n            warnings: errors.length > 0 ? errors : undefined\n          });\n        }\n      } catch (partError) {\n        console.error(`Erro ao criar parte ${i + 1} de ${file.name}:`, partError.message);\n        errors.push(`Parte ${i + 1}: ${partError.message}`);\n      }\n    }\n    if (resultFiles.length === 0) {\n      throw new Error(`Não foi possível criar nenhuma parte do PDF \"${file.name}\". ${errors.length > 0 ? 'Erros: ' + errors.join(', ') : ''}`);\n    }\n    if (errors.length > 0) {\n      console.warn(`Divisão de ${file.name} completada com avisos:`, errors);\n    }\n    return resultFiles;\n  }, []);\n\n  // Função principal para dividir PDFs\n  const splitPDFs = useCallback(async () => {\n    if (selectedFilesForSplit.length === 0) {\n      setSplitError('Por favor, selecione pelo menos um arquivo PDF primeiro.');\n      return;\n    }\n    setIsSplitting(true);\n    setSplitError(null);\n    setSplitSuccess(null);\n    setSplitFiles([]);\n    setSplittingProgress({\n      current: 0,\n      total: selectedFilesForSplit.length,\n      fileName: ''\n    });\n    try {\n      const PDFLib = await loadPDFLib();\n      const allSplitFiles = [];\n      const errors = [];\n      const warnings = [];\n      for (let i = 0; i < selectedFilesForSplit.length; i++) {\n        const file = selectedFilesForSplit[i];\n        setSplittingProgress({\n          current: i + 1,\n          total: selectedFilesForSplit.length,\n          fileName: file.name\n        });\n        try {\n          const splitResults = await splitSinglePDF(file, PDFLib, splitParts);\n          const fileWarnings = [];\n          splitResults.forEach(result => {\n            if (result.warnings && result.warnings.length > 0) {\n              fileWarnings.push(...result.warnings);\n            }\n          });\n          if (fileWarnings.length > 0) {\n            warnings.push({\n              fileName: file.name,\n              warnings: fileWarnings\n            });\n          }\n          allSplitFiles.push(...splitResults);\n          console.log(`✅ ${file.name} dividido com sucesso em ${splitResults.length} partes`);\n        } catch (error) {\n          console.error(`❌ Erro ao dividir ${file.name}:`, error);\n          let errorMessage = error.message;\n          if (error.message.includes('criptografado') || error.message.includes('encrypted')) {\n            errorMessage = 'PDF protegido/criptografado - não pode ser dividido';\n          } else if (error.message.includes('páginas')) {\n            errorMessage = 'PDF tem poucas páginas para divisão selecionada';\n          } else if (error.message.includes('corrupted') || error.message.includes('invalid')) {\n            errorMessage = 'PDF corrompido ou formato inválido';\n          }\n          errors.push({\n            fileName: file.name,\n            error: errorMessage,\n            originalError: error.message\n          });\n        }\n      }\n      setSplitFiles(allSplitFiles);\n      const successCount = selectedFilesForSplit.length - errors.length;\n      let successMessage = '';\n      let errorMessage = '';\n      if (errors.length === 0) {\n        successMessage = `🎉 Todos os ${selectedFilesForSplit.length} PDFs foram divididos em ${splitParts} partes com sucesso! Total de ${allSplitFiles.length} arquivos gerados.`;\n        if (warnings.length > 0) {\n          successMessage += ` ⚠️ Alguns arquivos tiveram páginas problemáticas que foram substituídas por páginas em branco.`;\n        }\n      } else if (allSplitFiles.length > 0) {\n        successMessage = `✅ ${successCount} de ${selectedFilesForSplit.length} PDFs foram divididos com sucesso. Total de ${allSplitFiles.length} arquivos gerados.`;\n        errorMessage = `❌ Arquivos que não puderam ser processados:\\n${errors.map(e => `• ${e.fileName}: ${e.error}`).join('\\n')}`;\n        if (warnings.length > 0) {\n          errorMessage += `\\n\\n⚠️ Arquivos com avisos:\\n${warnings.map(w => `• ${w.fileName}: ${w.warnings.join(', ')}`).join('\\n')}`;\n        }\n      } else {\n        errorMessage = `❌ Nenhum arquivo pôde ser processado:\\n${errors.map(e => `• ${e.fileName}: ${e.error}`).join('\\n')}`;\n        const encryptedCount = errors.filter(e => e.error.includes('protegido') || e.error.includes('criptografado')).length;\n        const pageCount = errors.filter(e => e.error.includes('páginas')).length;\n        if (encryptedCount > 0) {\n          errorMessage += `\\n\\n💡 Dica: ${encryptedCount} arquivo(s) estão protegidos. Tente:`;\n          errorMessage += `\\n• Remover a proteção usando outro software`;\n          errorMessage += `\\n• Imprimir para PDF para criar versão não protegida`;\n          errorMessage += `\\n• Usar o extrator de resultados que pode processar PDFs protegidos`;\n        }\n        if (pageCount > 0) {\n          errorMessage += `\\n\\n📄 Dica: ${pageCount} arquivo(s) têm poucas páginas. Tente:`;\n          errorMessage += `\\n• Reduzir o número de partes para divisão`;\n          errorMessage += `\\n• Verificar se o PDF tem o conteúdo esperado`;\n        }\n      }\n      if (successMessage) setSplitSuccess(successMessage);\n      if (errorMessage) setSplitError(errorMessage);\n    } catch (error) {\n      console.error('❌ Erro ao carregar PDF-lib:', error);\n      setSplitError('❌ Erro ao carregar a biblioteca de processamento de PDF. Tente recarregar a página.');\n    } finally {\n      setIsSplitting(false);\n      setSplittingProgress({\n        current: 0,\n        total: 0,\n        fileName: ''\n      });\n    }\n  }, [selectedFilesForSplit, loadPDFLib, splitSinglePDF, splitParts]);\n\n  // Função para download de arquivo\n  const downloadFile = useCallback(fileData => {\n    const url = URL.createObjectURL(fileData.blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = fileData.name;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }, []);\n\n  // Função para download de todos os arquivos\n  const downloadAll = useCallback(() => {\n    splitFiles.forEach((fileData, index) => {\n      setTimeout(() => downloadFile(fileData), index * 100);\n    });\n  }, [splitFiles, downloadFile]);\n\n  // Função principal de upload e processamento com chunked upload\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (files.length === 0) {\n      setError('Por favor, selecione pelo menos um arquivo PDF válido.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setUploadStatus({\n      stage: 'iniciando',\n      message: 'Iniciando processamento...',\n      timestamp: new Date().toLocaleTimeString()\n    });\n    setProcessingStage('upload');\n    setTotalFiles(files.length);\n    setProcessedFiles(0);\n    const allSummaries = [];\n    const fileErrors = [];\n    const patientNames = {};\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const fileNumber = i + 1;\n      setCurrentProcessingFile(file.name);\n      try {\n        const fileSizeMB = file.size / 1024 / 1024;\n        const isLargeFile = fileSizeMB > 4;\n        setUploadStatus({\n          stage: 'enviando',\n          message: `${isLargeFile ? 'Enviando em partes' : 'Enviando'} ${fileNumber}/${files.length}: ${file.name.substring(0, 30)}${file.name.length > 30 ? '...' : ''}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n\n        // Usar chunked uploader\n        const data = await uploaderRef.current.uploadFile(file, progress => {\n          console.log(`Progresso ${file.name}: ${progress}%`);\n        });\n        setProcessingStage('processing');\n        setUploadStatus({\n          stage: 'processando',\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        if (!data.summaries || data.summaries.length === 0) {\n          throw new Error(`Não foi possível extrair informações do documento ${file.name}.`);\n        }\n        if (data.patientName) {\n          patientNames[file.name] = data.patientName;\n        }\n        const fileSummaries = data.summaries.map(summary => ({\n          ...summary,\n          fileName: file.name,\n          patientName: data.patientName,\n          processedAt: new Date().toLocaleTimeString()\n        }));\n        allSummaries.push(...fileSummaries);\n        if (i === 0 && data.patientName) {\n          setPatientName(data.patientName);\n        }\n        setProcessedFiles(i + 1);\n      } catch (error) {\n        console.error(`Erro ao processar ${file.name}:`, error);\n        fileErrors.push({\n          fileName: file.name,\n          error: error.message,\n          timestamp: new Date().toLocaleTimeString()\n        });\n      }\n    }\n    setProcessingStage('complete');\n    if (allSummaries.length > 0) {\n      setSummaries(allSummaries);\n      if (fileErrors.length > 0) {\n        setUploadStatus({\n          stage: 'aviso',\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n        setError(`Alguns arquivos não puderam ser processados:\\n\\n${errorMessage}`);\n      } else {\n        setUploadStatus({\n          stage: 'sucesso',\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        setError(null);\n      }\n    } else {\n      setUploadStatus({\n        stage: 'erro',\n        message: 'Nenhum resultado foi extraído dos arquivos.',\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\n        timestamp: new Date().toLocaleTimeString()\n      });\n      const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n      setError(`Falha ao processar todos os arquivos:\\n\\n${errorMessage}`);\n    }\n    setLoading(false);\n    setCurrentProcessingFile(null);\n  };\n\n  // Gerar texto formatado para cópia\n  const getSimplifiedTextForCopy = useCallback(() => {\n    if (summaries.length === 0) return '';\n    const resultsByFile = {};\n    summaries.forEach(summary => {\n      const fileName = summary.fileName || 'arquivo_desconhecido';\n      if (!resultsByFile[fileName]) {\n        resultsByFile[fileName] = {\n          patientName: summary.patientName || patientName || \"Paciente\",\n          results: [],\n          processedAt: summary.processedAt\n        };\n      }\n      const lines = summary.content.split('\\n');\n      lines.forEach(line => {\n        if (line.trim() && !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && !line.match(/^Paciente:/i)) {\n          resultsByFile[fileName].results.push(line.trim());\n        }\n      });\n    });\n    let formattedText = '';\n    let isFirstFile = true;\n    Object.keys(resultsByFile).forEach(fileName => {\n      if (!isFirstFile) {\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\n      } else {\n        isFirstFile = false;\n      }\n      const fileData = resultsByFile[fileName];\n      if (fileData.patientName) {\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\n        if (fileData.processedAt) {\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\n        }\n        formattedText += '\\n';\n      }\n      const uniqueResults = [...new Set(fileData.results)];\n      uniqueResults.forEach(result => {\n        formattedText += `${result}\\n`;\n      });\n    });\n    return formattedText;\n  }, [summaries, patientName]);\n  const copyToClipboard = useCallback(async () => {\n    if (textAreaRef.current) {\n      try {\n        if (navigator.clipboard && window.isSecureContext) {\n          await navigator.clipboard.writeText(textAreaRef.current.value);\n        } else {\n          textAreaRef.current.select();\n          document.execCommand('copy');\n        }\n        const originalText = textAreaRef.current.value;\n        textAreaRef.current.value = 'Resultados copiados com sucesso!';\n        textAreaRef.current.style.background = '#f0fdf4';\n        textAreaRef.current.style.color = '#166534';\n        setTimeout(() => {\n          textAreaRef.current.value = originalText;\n          textAreaRef.current.style.background = '';\n          textAreaRef.current.style.color = '';\n        }, 2000);\n      } catch (err) {\n        console.error('Erro ao copiar:', err);\n        const originalText = textAreaRef.current.value;\n        textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\n        textAreaRef.current.style.background = '#fef2f2';\n        textAreaRef.current.style.color = '#dc2626';\n        setTimeout(() => {\n          textAreaRef.current.value = originalText;\n          textAreaRef.current.style.background = '';\n          textAreaRef.current.style.color = '';\n        }, 3000);\n      }\n    }\n  }, []);\n\n  // Calcular progresso\n  const calculateProgress = useCallback(() => {\n    if (totalFiles === 0) return 0;\n    return Math.round(processedFiles / totalFiles * 100);\n  }, [processedFiles, totalFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"institute-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Instituto Paulo Godoi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sistema de Processamento de Documentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Extra\\xE7\\xE3o de resultados e ferramentas para PDFs laboratoriais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 9\n      }, this), apiStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `api-status ${apiStatus.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 13\n        }, this), apiStatus.status === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Conectado (\", apiStatus.env, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 15\n        }, this) : apiStatus.status === 'checking' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Verificando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [apiStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: retryApiConnection,\n            children: \"Tentar novamente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [((apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'offline' || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'error') && activeTab === 'extractor' && /*#__PURE__*/_jsxDEV(ErrorHandler, {\n        error: `Não foi possível conectar ao servidor. ${apiStatus.message}`,\n        onRetry: retryApiConnection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'extractor' ? 'active' : ''}`,\n          onClick: () => setActiveTab('extractor'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tab-icon\",\n            children: \"\\uD83D\\uDCCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 13\n          }, this), \"Extrator de Resultados\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'splitter' ? 'active' : ''}`,\n          onClick: () => setActiveTab('splitter'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tab-icon\",\n            children: \"\\u2702\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 13\n          }, this), \"Divisor de PDF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 9\n      }, this), activeTab === 'extractor' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size-warning-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Arquivos grandes (4MB) s\\xE3o automaticamente enviados em partes.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Use a aba \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"tab-link-button\",\n                onClick: () => setActiveTab('splitter'),\n                children: \"\\u2702\\uFE0F Divisor de PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 29\n              }, this), \" se preferir dividir manualmente.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `uploader-container ${dragOver ? 'drag-over' : ''}`,\n          onDragOver: handleDragOver,\n          onDragLeave: handleDragLeave,\n          onDrop: handleDrop,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"pdf-upload\",\n                ref: fileInputRef,\n                onChange: handleFileChange,\n                accept: \"application/pdf\",\n                multiple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pdf-upload\",\n                className: `file-label ${dragOver ? 'drag-active' : ''}`,\n                children: dragOver ? 'Solte os arquivos PDF aqui' : files.length > 0 ? `${files.length} arquivo(s) selecionado(s)` : 'Escolher arquivos PDF ou arrastar aqui'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 17\n            }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Arquivos Selecionados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"files-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"clear-files-button\",\n                  onClick: clearAllFiles,\n                  disabled: loading,\n                  children: \"Remover todos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 975,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"selected-files-list\",\n                children: files.map((file, index) => {\n                  const fileSizeMB = file.size / 1024 / 1024;\n                  const isOverLimit = fileSizeMB > 4;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `file-item ${isOverLimit ? 'file-chunked' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-name\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"pdf-icon\",\n                        children: \"\\uD83D\\uDCC4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 991,\n                        columnNumber: 31\n                      }, this), file.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `file-size ${isOverLimit ? 'size-chunked' : ''}`,\n                        children: [\"(\", fileSizeMB.toFixed(1), \" MB)\", isOverLimit && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"size-alert\",\n                          children: \"\\uD83D\\uDCE6 Envio em partes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 995,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 993,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 990,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"remove-file-button\",\n                      onClick: () => removeFile(index),\n                      disabled: loading,\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 998,\n                      columnNumber: 29\n                    }, this)]\n                  }, `${file.name}-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 989,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 21\n              }, this), files.some(file => file.size / 1024 / 1024 > 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-size-alert chunked-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"alert-icon\",\n                  children: \"\\uD83D\\uDCE6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Arquivos grandes detectados!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1014,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"PDFs maiores que 4MB ser\\xE3o enviados automaticamente em partes menores. O processamento funcionar\\xE1 normalmente.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1015,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1013,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: `upload-button ${loading ? 'loading' : ''}`,\n              disabled: files.length === 0 || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) !== 'online' || loading,\n              children: loading ? 'Processando...' : 'Extrair Resultados'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 15\n          }, this), (processingStage === 'upload' || processingStage === 'processing') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-indicator\",\n                style: {\n                  width: `${calculateProgress()}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-status\",\n              children: currentProcessingFile ? `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${currentProcessingFile.length > 30 ? currentProcessingFile.substring(0, 30) + '...' : currentProcessingFile} (${processedFiles + 1}/${totalFiles})` : processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 17\n          }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `upload-status ${uploadStatus.stage}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-icon\",\n              children: uploadStatus.stage === 'sucesso' ? '✓' : uploadStatus.stage === 'erro' ? '✗' : uploadStatus.stage === 'aviso' ? '!' : '⟳'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-message\",\n                children: uploadStatus.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 21\n              }, this), uploadStatus.details && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-details\",\n                children: uploadStatus.details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 23\n              }, this), uploadStatus.timestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-timestamp\",\n                children: uploadStatus.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 17\n          }, this), uploadStatus && uploadStatus.stage === 'erro' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pdf-tips\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Poss\\xEDveis solu\\xE7\\xF5es:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Verifique se os PDFs n\\xE3o est\\xE3o protegidos por senha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1080,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Tente salvar os PDFs novamente usando \\\"Salvar como\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Se poss\\xEDvel, imprima os documentos para novos PDFs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1082,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Entre em contato com o laborat\\xF3rio para vers\\xF5es alternativas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1083,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 17\n          }, this), uploadStatus && uploadStatus.stage === 'aviso' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processing-notice\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Os documentos foram processados, mas alguns podem conter imprecis\\xF5es.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Verifique os resultados antes de usar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 13\n        }, this), loading && !processingStage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading\",\n          children: \"Processando documentos, aguarde...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 15\n        }, this), error && !uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 15\n        }, this), error && uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-errors\",\n          children: /*#__PURE__*/_jsxDEV(\"details\", {\n            children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n              children: \"Detalhes dos erros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"error-details\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1107,\n          columnNumber: 15\n        }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reset-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-button\",\n            onClick: handleReset,\n            disabled: loading,\n            children: \"Processar novos documentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-container\",\n          children: summaries.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Os resultados dos exames aparecer\\xE3o aqui.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Selecione arquivos PDF para come\\xE7ar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-view-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Resultados Extra\\xEDdos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1136,\n              columnNumber: 19\n            }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-count\",\n                children: [summaries.length, \" resultados extra\\xEDdos\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1139,\n                columnNumber: 23\n              }, this), files.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"multi-file-notice\",\n                children: [\"de \", files.length, \" arquivos\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"extraction-time\",\n                children: [\"\\xE0s \", new Date().toLocaleTimeString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1143,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"copy-instructions\",\n              children: \"Lista de resultados pronta para copiar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-area-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: textAreaRef,\n                className: \"results-text-area\",\n                value: getSimplifiedTextForCopy(),\n                readOnly: true,\n                placeholder: \"Os resultados aparecer\\xE3o aqui...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: copyToClipboard,\n                className: \"copy-button\",\n                disabled: summaries.length === 0,\n                children: \"Copiar para \\xE1rea de transfer\\xEAncia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1155,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeTab === 'splitter' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-splitter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"splitter-intro\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"section-icon\",\n              children: \"\\u2702\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 17\n            }, this), \"Divisor de PDF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Divida m\\xFAltiplos PDFs grandes em partes menores.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1178,\n              columnNumber: 17\n            }, this), \"Esta ferramenta \\xE9 opcional - o extrator j\\xE1 lida automaticamente com arquivos grandes.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"splitter-benefits\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"benefit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"benefit-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Processe v\\xE1rios PDFs de uma s\\xF3 vez\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1184,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"benefit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"benefit-icon\",\n                children: \"\\uD83D\\uDD12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Processamento 100% local e seguro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"benefit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"benefit-icon\",\n                children: \"\\u26A1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Divis\\xE3o r\\xE1pida e autom\\xE1tica\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1192,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-options-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"split-options-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"options-icon\",\n              children: \"\\u2699\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 17\n            }, this), \"Configura\\xE7\\xF5es de Divis\\xE3o\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-parts-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"parts-label\",\n              children: \"Dividir cada PDF em:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parts-buttons-container\",\n              children: [2, 3, 4].map(parts => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `parts-button ${splitParts === parts ? 'active' : ''}`,\n                onClick: () => setSplitParts(parts),\n                disabled: isSplitting,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"parts-number\",\n                  children: parts\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1214,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"parts-text\",\n                  children: \"partes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1215,\n                  columnNumber: 23\n                }, this)]\n              }, parts, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1207,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parts-explanation\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"explanation-icon\",\n                children: \"\\u2139\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"explanation-text\",\n                children: [splitParts === 2 && \"Divide cada PDF pela metade\", splitParts === 3 && \"Divide cada PDF em 3 partes iguais\", splitParts === 4 && \"Divide cada PDF em 4 partes iguais\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `splitter-uploader-container ${dragOverSplitter ? 'drag-over' : ''}`,\n          onDragOver: handleSplitterDragOver,\n          onDragLeave: handleSplitterDragLeave,\n          onDrop: handleSplitterDrop,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"pdf-split-upload\",\n            ref: splitFileInputRef,\n            onChange: handleSplitFileChange,\n            accept: \"application/pdf\",\n            multiple: true,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pdf-split-upload\",\n            className: `splitter-file-label ${dragOverSplitter ? 'drag-active' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"splitter-upload-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"splitter-upload-icon\",\n                children: selectedFilesForSplit.length > 0 ? '✓' : '📎'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1248,\n                columnNumber: 19\n              }, this), selectedFilesForSplit.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-files-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"selected-files-count\",\n                  children: [selectedFilesForSplit.length, \" arquivo\", selectedFilesForSplit.length > 1 ? 's' : '', \" selecionado\", selectedFilesForSplit.length > 1 ? 's' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1253,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"selected-files-size\",\n                  children: [\"Total: \", (selectedFilesForSplit.reduce((acc, file) => acc + file.size, 0) / 1024 / 1024).toFixed(1), \" MB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1256,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 21\n              }, this) : dragOverSplitter ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"drag-message\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Solte os arquivos PDF aqui\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1262,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1261,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-message\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Selecione ou arraste arquivos PDF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1266,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"upload-hint\",\n                  children: \"Clique aqui ou arraste e solte seus PDFs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1267,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1265,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1247,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 15\n          }, this), selectedFilesForSplit.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-split-files-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Arquivos para Dividir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"split-files-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"clear-split-files-button\",\n                onClick: clearAllSplitFiles,\n                disabled: isSplitting,\n                children: \"Remover todos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1278,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1277,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"selected-split-files-list\",\n              children: selectedFilesForSplit.map((file, index) => {\n                const fileSizeMB = file.size / 1024 / 1024;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"split-file-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"split-file-name\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"pdf-icon\",\n                      children: \"\\uD83D\\uDCC4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1293,\n                      columnNumber: 29\n                    }, this), file.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"split-file-size\",\n                      children: [\"(\", fileSizeMB.toFixed(1), \" MB)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1295,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1292,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"remove-split-file-button\",\n                    onClick: () => removeSplitFile(index),\n                    disabled: isSplitting,\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1299,\n                    columnNumber: 27\n                  }, this)]\n                }, `split-${file.name}-${index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1291,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"splitter-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: splitPDFs,\n              disabled: selectedFilesForSplit.length === 0 || isSplitting,\n              className: `split-button ${isSplitting ? 'loading' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-icon\",\n                children: \"\\u2702\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 19\n              }, this), isSplitting ? `Dividindo ${splittingProgress.current}/${splittingProgress.total}...` : `Dividir em ${splitParts} partes (${selectedFilesForSplit.length} PDF${selectedFilesForSplit.length > 1 ? 's' : ''})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 17\n            }, this), selectedFilesForSplit.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetSplitter,\n              className: \"reset-splitter-button\",\n              disabled: isSplitting,\n              children: \"Limpar Sele\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1329,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 13\n        }, this), isSplitting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-processing\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processing-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processing-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"processing-text\",\n              children: [\"Processando: \", splittingProgress.fileName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1345,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"processing-progress\",\n              children: [splittingProgress.current, \" de \", splittingProgress.total, \" arquivos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1342,\n          columnNumber: 15\n        }, this), splitError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-icon\",\n            children: \"\\u2717\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"error-text\",\n            children: splitError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 15\n        }, this), splitSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-icon\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-text\",\n            children: splitSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1367,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 15\n        }, this), splitFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-results-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"results-icon\",\n                children: \"\\uD83D\\uDCC1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1376,\n                columnNumber: 21\n              }, this), \"Arquivos Gerados (\", splitFiles.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1375,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadAll,\n              className: \"download-all-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-icon\",\n                children: \"\\u2B07\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1383,\n                columnNumber: 21\n              }, this), \"Baixar Todos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1379,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-files-grid\",\n            children: splitFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"split-file-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-card-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-card-icon\",\n                  children: \"\\uD83D\\uDCC4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1392,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-card-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"file-card-name\",\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1394,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-card-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-card-pages\",\n                      children: [file.pages, \" p\\xE1ginas\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1396,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-card-part\",\n                      children: [\"Parte \", file.partNumber, \" de \", file.totalParts]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1397,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1395,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-card-original\",\n                    children: [\"De: \", file.originalFile]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1399,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1393,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1391,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => downloadFile(file),\n                className: \"download-file-button\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"button-icon\",\n                  children: \"\\u2B07\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1406,\n                  columnNumber: 25\n                }, this), \"Download\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1402,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1390,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1388,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-actions-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetSplitter,\n              className: \"new-split-button\",\n              children: \"Dividir outros PDFs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1414,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1413,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"splitter-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Como funciona:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Selecione um ou mais arquivos PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Escolha em quantas partes dividir (2, 3 ou 4)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cada PDF ser\\xE1 dividido no n\\xFAmero de partes selecionado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Se o PDF tiver p\\xE1ginas que n\\xE3o dividem igualmente, algumas partes ter\\xE3o uma p\\xE1gina extra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Os arquivos s\\xE3o processados localmente no seu navegador (sem upload para servidor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Seus dados permanecem seguros e privados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Processe m\\xFAltiplos arquivos de uma vez para economizar tempo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"api-info\",\n        children: [\"Ambiente: \", (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.env) || 'Desconectado', \" | API: \", API_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1441,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 867,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Di7gZ5F/LiwpibekxemwBBATIE8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","ErrorHandler","jsxDEV","_jsxDEV","Fragment","_Fragment","getApiUrl","window","location","hostname","API_URL","ChunkedUploader","constructor","chunkSize","uploadFile","file","onProgress","size","uploadNormal","uploadChunked","formData","FormData","append","response","fetch","method","body","ok","errorMessage","status","statusText","errorData","json","message","jsonError","Error","totalChunks","Math","ceil","uploadId","Date","now","toString","i","start","end","min","chunk","slice","name","progress","round","finalResponse","headers","JSON","stringify","App","_s","files","setFiles","summaries","setSummaries","patientName","setPatientName","loading","setLoading","error","setError","apiStatus","setApiStatus","uploadStatus","setUploadStatus","processingStage","setProcessingStage","currentProcessingFile","setCurrentProcessingFile","processedFiles","setProcessedFiles","totalFiles","setTotalFiles","dragOver","setDragOver","activeTab","setActiveTab","selectedFilesForSplit","setSelectedFilesForSplit","isSplitting","setIsSplitting","splitError","setSplitError","splitSuccess","setSplitSuccess","splitFiles","setSplitFiles","dragOverSplitter","setDragOverSplitter","splittingProgress","setSplittingProgress","current","total","fileName","splitParts","setSplitParts","textAreaRef","fileInputRef","splitFileInputRef","uploaderRef","loadPDFLib","PDFLib","script","document","createElement","src","head","appendChild","Promise","resolve","reject","onload","onerror","checkApiStatus","url","data","env","retryApiConnection","setTimeout","handleReset","value","resetSplitter","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","droppedFiles","Array","from","dataTransfer","pdfFiles","filter","type","length","prevFiles","handleSplitterDragOver","handleSplitterDragLeave","handleSplitterDrop","handleFileChange","selectedFiles","target","handleSplitFileChange","removeFile","index","_","removeSplitFile","clearAllFiles","clearAllSplitFiles","splitSinglePDF","parts","arrayBuffer","pdfDoc","loadMethod","PDFDocument","load","firstError","console","log","includes","ignoreEncryption","updateMetadata","throwOnInvalidObject","secondError","commonPasswords","password","passwordError","thirdError","parseSpeed","fourthError","totalPages","getPageCount","pagesPerPart","resultFiles","errors","newPdf","create","startPage","endPage","pageIndices","copiedPages","copyPages","forEach","page","addPage","copyError","warn","pageIndex","copiedPage","singlePageError","push","blankPage","drawText","x","y","getHeight","textError","pdfBytes","save","useObjectStreams","originalName","replace","bytes","pages","blob","Blob","originalFile","partNumber","totalParts","warnings","undefined","partError","join","splitPDFs","allSplitFiles","splitResults","fileWarnings","result","originalError","successCount","successMessage","map","w","encryptedCount","pageCount","downloadFile","fileData","URL","createObjectURL","link","href","download","click","removeChild","revokeObjectURL","downloadAll","handleSubmit","stage","timestamp","toLocaleTimeString","allSummaries","fileErrors","patientNames","fileNumber","fileSizeMB","isLargeFile","substring","fileSummaries","summary","processedAt","details","err","getSimplifiedTextForCopy","resultsByFile","results","lines","content","split","line","trim","match","formattedText","isFirstFile","Object","keys","uniqueResults","Set","copyToClipboard","navigator","clipboard","isSecureContext","writeText","select","execCommand","originalText","style","background","color","calculateProgress","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onRetry","onDragOver","onDragLeave","onDrop","onSubmit","id","ref","onChange","accept","multiple","htmlFor","disabled","isOverLimit","toFixed","some","width","readOnly","placeholder","display","reduce","acc","_c","$RefreshReg$"],"sources":["C:/Users/confi/Downloads/pdf-summarizer/client/src/App.js"],"sourcesContent":["// App.js - Versão com Chunked Upload integrado\r\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport ErrorHandler from './components/ErrorHandler';\r\n\r\n// Função para determinar a URL da API baseada no ambiente\r\nfunction getApiUrl() {\r\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n    return 'http://localhost:5000';\r\n  }\r\n   return 'https://server-theta-murex.vercel.app';\r\n}\r\n\r\nconst API_URL = getApiUrl();\r\n\r\n// Classe para gerenciar uploads chunked\r\nclass ChunkedUploader {\r\n  constructor(chunkSize = 3.5 * 1024 * 1024) { // 3.5MB por chunk\r\n    this.chunkSize = chunkSize;\r\n  }\r\n\r\n  async uploadFile(file, onProgress) {\r\n    if (file.size <= 4 * 1024 * 1024) {\r\n      return this.uploadNormal(file, onProgress);\r\n    } else {\r\n      return this.uploadChunked(file, onProgress);\r\n    }\r\n  }\r\n\r\n  async uploadNormal(file, onProgress) {\r\n    const formData = new FormData();\r\n    formData.append('pdf', file);\r\n    \r\n    const response = await fetch(`${API_URL}/api/upload`, {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n    \r\n    if (onProgress) onProgress(100);\r\n    \r\n    if (!response.ok) {\r\n      let errorMessage = `Erro ${response.status}: ${response.statusText}`;\r\n      try {\r\n        const errorData = await response.json();\r\n        if (errorData.message) errorMessage = errorData.message;\r\n      } catch (jsonError) {}\r\n      throw new Error(errorMessage);\r\n    }\r\n    \r\n    return response.json();\r\n  }\r\n\r\n  async uploadChunked(file, onProgress) {\r\n    const totalChunks = Math.ceil(file.size / this.chunkSize);\r\n    const uploadId = Date.now().toString();\r\n    \r\n    for (let i = 0; i < totalChunks; i++) {\r\n      const start = i * this.chunkSize;\r\n      const end = Math.min(start + this.chunkSize, file.size);\r\n      const chunk = file.slice(start, end);\r\n      \r\n      const formData = new FormData();\r\n      formData.append('chunk', chunk);\r\n      formData.append('chunkIndex', i);\r\n      formData.append('totalChunks', totalChunks);\r\n      formData.append('uploadId', uploadId);\r\n      formData.append('fileName', file.name);\r\n      \r\n      const response = await fetch(`${API_URL}/api/upload-chunk`, {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Chunk ${i} failed: ${response.statusText}`);\r\n      }\r\n      \r\n      if (onProgress) {\r\n        const progress = ((i + 1) / totalChunks) * 90;\r\n        onProgress(Math.round(progress));\r\n      }\r\n    }\r\n    \r\n    const finalResponse = await fetch(`${API_URL}/api/finalize-upload`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ uploadId })\r\n    });\r\n    \r\n    if (!finalResponse.ok) {\r\n      throw new Error(`Finalization failed: ${finalResponse.statusText}`);\r\n    }\r\n    \r\n    if (onProgress) onProgress(100);\r\n    return finalResponse.json();\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [files, setFiles] = useState([]);\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [patientName, setPatientName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [apiStatus, setApiStatus] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [processingStage, setProcessingStage] = useState(null);\r\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\r\n  const [processedFiles, setProcessedFiles] = useState(0);\r\n  const [totalFiles, setTotalFiles] = useState(0);\r\n  const [dragOver, setDragOver] = useState(false);\r\n  \r\n  // Estados para o divisor de PDF\r\n  const [activeTab, setActiveTab] = useState('extractor');\r\n  const [selectedFilesForSplit, setSelectedFilesForSplit] = useState([]);\r\n  const [isSplitting, setIsSplitting] = useState(false);\r\n  const [splitError, setSplitError] = useState(null);\r\n  const [splitSuccess, setSplitSuccess] = useState(null);\r\n  const [splitFiles, setSplitFiles] = useState([]);\r\n  const [dragOverSplitter, setDragOverSplitter] = useState(false);\r\n  const [splittingProgress, setSplittingProgress] = useState({ current: 0, total: 0, fileName: '' });\r\n  const [splitParts, setSplitParts] = useState(2);\r\n  \r\n  const textAreaRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const splitFileInputRef = useRef(null);\r\n  const uploaderRef = useRef(new ChunkedUploader());\r\n\r\n  // Função para carregar PDF-lib dinamicamente\r\n  const loadPDFLib = useCallback(async () => {\r\n    if (window.PDFLib) return window.PDFLib;\r\n    \r\n    const script = document.createElement('script');\r\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js';\r\n    document.head.appendChild(script);\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      script.onload = () => {\r\n        if (window.PDFLib) {\r\n          resolve(window.PDFLib);\r\n        } else {\r\n          reject(new Error('Falha ao carregar PDF-lib'));\r\n        }\r\n      };\r\n      script.onerror = () => reject(new Error('Erro ao carregar PDF-lib'));\r\n    });\r\n  }, []);\r\n\r\n  // Verificar status da API ao carregar\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      setApiStatus({ status: 'checking', message: 'Verificando conexão...', url: API_URL });\r\n      \r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({\r\n            status: 'online',\r\n            env: data.env,\r\n            url: API_URL\r\n          });\r\n        } else {\r\n          setApiStatus({\r\n            status: 'error',\r\n            message: `Erro ${response.status}`,\r\n            url: API_URL\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({\r\n          status: 'offline',\r\n          message: 'Servidor indisponível',\r\n          error: error.message,\r\n          url: API_URL\r\n        });\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  // Função para reconectar com a API\r\n  const retryApiConnection = useCallback(() => {\r\n    setApiStatus({ status: 'checking', message: 'Reconectando...', url: API_URL });\r\n    setTimeout(async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({ status: 'online', env: data.env, url: API_URL });\r\n          setError(null);\r\n        } else {\r\n          setApiStatus({ status: 'error', message: `Erro ${response.status}`, url: API_URL });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({ status: 'offline', message: 'Servidor indisponível', url: API_URL });\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  // Função para resetar o estado do extrator\r\n  const handleReset = useCallback(() => {\r\n    setSummaries([]);\r\n    setPatientName('');\r\n    setError(null);\r\n    setFiles([]);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n    setCurrentProcessingFile(null);\r\n    setProcessedFiles(0);\r\n    setTotalFiles(0);\r\n    \r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Função para resetar o estado do divisor\r\n  const resetSplitter = useCallback(() => {\r\n    setSelectedFilesForSplit([]);\r\n    setSplitFiles([]);\r\n    setSplitError(null);\r\n    setSplitSuccess(null);\r\n    setSplittingProgress({ current: 0, total: 0, fileName: '' });\r\n    setSplitParts(2);\r\n    if (splitFileInputRef.current) {\r\n      splitFileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Handlers para drag and drop do extrator\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\r\n      setError('Por favor, solte apenas arquivos PDF válidos.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\r\n    setError(null);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n  }, []);\r\n\r\n  // Handlers para drag and drop do divisor\r\n  const handleSplitterDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOverSplitter(true);\r\n  }, []);\r\n\r\n  const handleSplitterDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOverSplitter(false);\r\n  }, []);\r\n\r\n  const handleSplitterDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOverSplitter(false);\r\n    \r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length > 0) {\r\n      setSelectedFilesForSplit(prevFiles => [...prevFiles, ...pdfFiles]);\r\n      setSplitError(null);\r\n      setSplitFiles([]);\r\n      setSplitSuccess(null);\r\n    } else if (droppedFiles.length > 0) {\r\n      setSplitError('Por favor, solte apenas arquivos PDF válidos.');\r\n      setTimeout(() => setSplitError(null), 3000);\r\n    }\r\n  }, []);\r\n\r\n  const handleFileChange = useCallback((e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n    \r\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\r\n      setError('Por favor, selecione apenas arquivos PDF válidos.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\r\n    setError(null);\r\n  }, []);\r\n\r\n  const handleSplitFileChange = useCallback((e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length > 0) {\r\n      setSelectedFilesForSplit(prevFiles => [...prevFiles, ...pdfFiles]);\r\n      setSplitError(null);\r\n      setSplitFiles([]);\r\n      setSplitSuccess(null);\r\n    } else if (selectedFiles.length > 0) {\r\n      setSplitError('Por favor, selecione apenas arquivos PDF válidos.');\r\n      setTimeout(() => setSplitError(null), 3000);\r\n    }\r\n  }, []);\r\n\r\n  // Função para remover arquivo do extrator\r\n  const removeFile = useCallback((index) => {\r\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  // Função para remover arquivo do divisor\r\n  const removeSplitFile = useCallback((index) => {\r\n    setSelectedFilesForSplit(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  // Função para limpar todos os arquivos do extrator\r\n  const clearAllFiles = useCallback(() => {\r\n    setFiles([]);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Função para limpar todos os arquivos do divisor\r\n  const clearAllSplitFiles = useCallback(() => {\r\n    setSelectedFilesForSplit([]);\r\n    if (splitFileInputRef.current) {\r\n      splitFileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Função para dividir um único PDF\r\n  const splitSinglePDF = useCallback(async (file, PDFLib, parts) => {\r\n    const arrayBuffer = await file.arrayBuffer();\r\n    \r\n    let pdfDoc = null;\r\n    let loadMethod = '';\r\n    \r\n    try {\r\n      pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer);\r\n      loadMethod = 'normal';\r\n    } catch (firstError) {\r\n      console.log(`Erro ao carregar ${file.name} normalmente:`, firstError.message);\r\n      \r\n      if (firstError.message && firstError.message.includes('encrypted')) {\r\n        try {\r\n          console.log(`Tentando ignorar criptografia para ${file.name}...`);\r\n          pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer, { \r\n            ignoreEncryption: true,\r\n            updateMetadata: false,\r\n            throwOnInvalidObject: false\r\n          });\r\n          loadMethod = 'ignoreEncryption';\r\n        } catch (secondError) {\r\n          console.log(`Falha ao ignorar criptografia para ${file.name}:`, secondError.message);\r\n          \r\n          try {\r\n            console.log(`Tentando senhas comuns para ${file.name}...`);\r\n            const commonPasswords = ['', '1234', 'admin', 'password', 'pdf', 'exame', 'laudo', 'laboratorio', '123456'];\r\n            \r\n            for (const password of commonPasswords) {\r\n              try {\r\n                pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer, { \r\n                  password,\r\n                  updateMetadata: false,\r\n                  throwOnInvalidObject: false\r\n                });\r\n                loadMethod = `senha: \"${password || 'vazia'}\"`;\r\n                break;\r\n              } catch (passwordError) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            if (!pdfDoc) {\r\n              throw new Error('Nenhuma senha comum funcionou');\r\n            }\r\n          } catch (thirdError) {\r\n            console.log(`Falha com senhas comuns para ${file.name}:`, thirdError.message);\r\n            \r\n            try {\r\n              console.log(`Tentando modo de recuperação para ${file.name}...`);\r\n              pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer, { \r\n                ignoreEncryption: true,\r\n                throwOnInvalidObject: false,\r\n                updateMetadata: false,\r\n                parseSpeed: 150\r\n              });\r\n              loadMethod = 'recuperação';\r\n            } catch (fourthError) {\r\n              throw new Error(`PDF \"${file.name}\" está protegido e não pode ser dividido. Erro: ${firstError.message.includes('encrypted') ? 'Documento criptografado/protegido' : firstError.message}`);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        throw new Error(`Erro ao processar \"${file.name}\": ${firstError.message}`);\r\n      }\r\n    }\r\n    \r\n    console.log(`PDF ${file.name} carregado com sucesso usando método: ${loadMethod}`);\r\n    \r\n    const totalPages = pdfDoc.getPageCount();\r\n    \r\n    if (totalPages < parts) {\r\n      throw new Error(`O PDF \"${file.name}\" deve ter pelo menos ${parts} páginas para ser dividido em ${parts} partes. (Páginas encontradas: ${totalPages})`);\r\n    }\r\n\r\n    const pagesPerPart = Math.ceil(totalPages / parts);\r\n    const resultFiles = [];\r\n    const errors = [];\r\n\r\n    for (let i = 0; i < parts; i++) {\r\n      try {\r\n        const newPdf = await PDFLib.PDFDocument.create();\r\n        const startPage = i * pagesPerPart;\r\n        const endPage = Math.min(startPage + pagesPerPart, totalPages);\r\n        \r\n        if (startPage < totalPages) {\r\n          const pageIndices = Array.from({ length: endPage - startPage }, (_, index) => startPage + index);\r\n          \r\n          try {\r\n            const copiedPages = await newPdf.copyPages(pdfDoc, pageIndices);\r\n            copiedPages.forEach(page => newPdf.addPage(page));\r\n          } catch (copyError) {\r\n            console.warn(`Erro ao copiar páginas ${startPage + 1}-${endPage} de ${file.name}:`, copyError.message);\r\n            \r\n            for (let pageIndex of pageIndices) {\r\n              try {\r\n                const [copiedPage] = await newPdf.copyPages(pdfDoc, [pageIndex]);\r\n                newPdf.addPage(copiedPage);\r\n              } catch (singlePageError) {\r\n                console.warn(`Erro ao copiar página ${pageIndex + 1} de ${file.name}:`, singlePageError.message);\r\n                errors.push(`Página ${pageIndex + 1} não pôde ser copiada`);\r\n                \r\n                const blankPage = newPdf.addPage();\r\n                try {\r\n                  blankPage.drawText(`[Página ${pageIndex + 1} não pôde ser recuperada]`, {\r\n                    x: 50,\r\n                    y: blankPage.getHeight() / 2,\r\n                    size: 12\r\n                  });\r\n                } catch (textError) {\r\n                  // Página em branco como fallback\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          const pdfBytes = await newPdf.save({\r\n            useObjectStreams: false\r\n          });\r\n          \r\n          const originalName = file.name.replace('.pdf', '');\r\n          const fileName = `${originalName}_parte${i + 1}de${parts}.pdf`;\r\n\r\n          resultFiles.push({\r\n            name: fileName,\r\n            bytes: pdfBytes,\r\n            pages: endPage - startPage,\r\n            blob: new Blob([pdfBytes], { type: 'application/pdf' }),\r\n            originalFile: file.name,\r\n            partNumber: i + 1,\r\n            totalParts: parts,\r\n            loadMethod: loadMethod,\r\n            warnings: errors.length > 0 ? errors : undefined\r\n          });\r\n        }\r\n      } catch (partError) {\r\n        console.error(`Erro ao criar parte ${i + 1} de ${file.name}:`, partError.message);\r\n        errors.push(`Parte ${i + 1}: ${partError.message}`);\r\n      }\r\n    }\r\n\r\n    if (resultFiles.length === 0) {\r\n      throw new Error(`Não foi possível criar nenhuma parte do PDF \"${file.name}\". ${errors.length > 0 ? 'Erros: ' + errors.join(', ') : ''}`);\r\n    }\r\n\r\n    if (errors.length > 0) {\r\n      console.warn(`Divisão de ${file.name} completada com avisos:`, errors);\r\n    }\r\n\r\n    return resultFiles;\r\n  }, []);\r\n\r\n  // Função principal para dividir PDFs\r\n  const splitPDFs = useCallback(async () => {\r\n    if (selectedFilesForSplit.length === 0) {\r\n      setSplitError('Por favor, selecione pelo menos um arquivo PDF primeiro.');\r\n      return;\r\n    }\r\n\r\n    setIsSplitting(true);\r\n    setSplitError(null);\r\n    setSplitSuccess(null);\r\n    setSplitFiles([]);\r\n    setSplittingProgress({ current: 0, total: selectedFilesForSplit.length, fileName: '' });\r\n\r\n    try {\r\n      const PDFLib = await loadPDFLib();\r\n      const allSplitFiles = [];\r\n      const errors = [];\r\n      const warnings = [];\r\n\r\n      for (let i = 0; i < selectedFilesForSplit.length; i++) {\r\n        const file = selectedFilesForSplit[i];\r\n        setSplittingProgress({ \r\n          current: i + 1, \r\n          total: selectedFilesForSplit.length, \r\n          fileName: file.name \r\n        });\r\n\r\n        try {\r\n          const splitResults = await splitSinglePDF(file, PDFLib, splitParts);\r\n          \r\n          const fileWarnings = [];\r\n          splitResults.forEach(result => {\r\n            if (result.warnings && result.warnings.length > 0) {\r\n              fileWarnings.push(...result.warnings);\r\n            }\r\n          });\r\n          \r\n          if (fileWarnings.length > 0) {\r\n            warnings.push({\r\n              fileName: file.name,\r\n              warnings: fileWarnings\r\n            });\r\n          }\r\n          \r\n          allSplitFiles.push(...splitResults);\r\n          console.log(`✅ ${file.name} dividido com sucesso em ${splitResults.length} partes`);\r\n          \r\n        } catch (error) {\r\n          console.error(`❌ Erro ao dividir ${file.name}:`, error);\r\n          \r\n          let errorMessage = error.message;\r\n          if (error.message.includes('criptografado') || error.message.includes('encrypted')) {\r\n            errorMessage = 'PDF protegido/criptografado - não pode ser dividido';\r\n          } else if (error.message.includes('páginas')) {\r\n            errorMessage = 'PDF tem poucas páginas para divisão selecionada';\r\n          } else if (error.message.includes('corrupted') || error.message.includes('invalid')) {\r\n            errorMessage = 'PDF corrompido ou formato inválido';\r\n          }\r\n          \r\n          errors.push({ \r\n            fileName: file.name, \r\n            error: errorMessage,\r\n            originalError: error.message\r\n          });\r\n        }\r\n      }\r\n\r\n      setSplitFiles(allSplitFiles);\r\n\r\n      const successCount = selectedFilesForSplit.length - errors.length;\r\n      let successMessage = '';\r\n      let errorMessage = '';\r\n\r\n      if (errors.length === 0) {\r\n        successMessage = `🎉 Todos os ${selectedFilesForSplit.length} PDFs foram divididos em ${splitParts} partes com sucesso! Total de ${allSplitFiles.length} arquivos gerados.`;\r\n        \r\n        if (warnings.length > 0) {\r\n          successMessage += ` ⚠️ Alguns arquivos tiveram páginas problemáticas que foram substituídas por páginas em branco.`;\r\n        }\r\n      } else if (allSplitFiles.length > 0) {\r\n        successMessage = `✅ ${successCount} de ${selectedFilesForSplit.length} PDFs foram divididos com sucesso. Total de ${allSplitFiles.length} arquivos gerados.`;\r\n        \r\n        errorMessage = `❌ Arquivos que não puderam ser processados:\\n${errors.map(e => `• ${e.fileName}: ${e.error}`).join('\\n')}`;\r\n        \r\n        if (warnings.length > 0) {\r\n          errorMessage += `\\n\\n⚠️ Arquivos com avisos:\\n${warnings.map(w => `• ${w.fileName}: ${w.warnings.join(', ')}`).join('\\n')}`;\r\n        }\r\n      } else {\r\n        errorMessage = `❌ Nenhum arquivo pôde ser processado:\\n${errors.map(e => `• ${e.fileName}: ${e.error}`).join('\\n')}`;\r\n        \r\n        const encryptedCount = errors.filter(e => e.error.includes('protegido') || e.error.includes('criptografado')).length;\r\n        const pageCount = errors.filter(e => e.error.includes('páginas')).length;\r\n        \r\n        if (encryptedCount > 0) {\r\n          errorMessage += `\\n\\n💡 Dica: ${encryptedCount} arquivo(s) estão protegidos. Tente:`;\r\n          errorMessage += `\\n• Remover a proteção usando outro software`;\r\n          errorMessage += `\\n• Imprimir para PDF para criar versão não protegida`;\r\n          errorMessage += `\\n• Usar o extrator de resultados que pode processar PDFs protegidos`;\r\n        }\r\n        \r\n        if (pageCount > 0) {\r\n          errorMessage += `\\n\\n📄 Dica: ${pageCount} arquivo(s) têm poucas páginas. Tente:`;\r\n          errorMessage += `\\n• Reduzir o número de partes para divisão`;\r\n          errorMessage += `\\n• Verificar se o PDF tem o conteúdo esperado`;\r\n        }\r\n      }\r\n\r\n      if (successMessage) setSplitSuccess(successMessage);\r\n      if (errorMessage) setSplitError(errorMessage);\r\n\r\n    } catch (error) {\r\n      console.error('❌ Erro ao carregar PDF-lib:', error);\r\n      setSplitError('❌ Erro ao carregar a biblioteca de processamento de PDF. Tente recarregar a página.');\r\n    } finally {\r\n      setIsSplitting(false);\r\n      setSplittingProgress({ current: 0, total: 0, fileName: '' });\r\n    }\r\n  }, [selectedFilesForSplit, loadPDFLib, splitSinglePDF, splitParts]);\r\n\r\n  // Função para download de arquivo\r\n  const downloadFile = useCallback((fileData) => {\r\n    const url = URL.createObjectURL(fileData.blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = fileData.name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  }, []);\r\n\r\n  // Função para download de todos os arquivos\r\n  const downloadAll = useCallback(() => {\r\n    splitFiles.forEach((fileData, index) => {\r\n      setTimeout(() => downloadFile(fileData), index * 100);\r\n    });\r\n  }, [splitFiles, downloadFile]);\r\n\r\n  // Função principal de upload e processamento com chunked upload\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (files.length === 0) {\r\n      setError('Por favor, selecione pelo menos um arquivo PDF válido.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setUploadStatus({ \r\n      stage: 'iniciando', \r\n      message: 'Iniciando processamento...',\r\n      timestamp: new Date().toLocaleTimeString()\r\n    });\r\n    setProcessingStage('upload');\r\n    setTotalFiles(files.length);\r\n    setProcessedFiles(0);\r\n\r\n    const allSummaries = [];\r\n    const fileErrors = [];\r\n    const patientNames = {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      const fileNumber = i + 1;\r\n      setCurrentProcessingFile(file.name);\r\n      \r\n      try {\r\n        const fileSizeMB = file.size / 1024 / 1024;\r\n        const isLargeFile = fileSizeMB > 4;\r\n        \r\n        setUploadStatus({ \r\n          stage: 'enviando', \r\n          message: `${isLargeFile ? 'Enviando em partes' : 'Enviando'} ${fileNumber}/${files.length}: ${file.name.substring(0, 30)}${file.name.length > 30 ? '...' : ''}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        // Usar chunked uploader\r\n        const data = await uploaderRef.current.uploadFile(file, (progress) => {\r\n          console.log(`Progresso ${file.name}: ${progress}%`);\r\n        });\r\n        \r\n        setProcessingStage('processing');\r\n        setUploadStatus({ \r\n          stage: 'processando', \r\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        if (!data.summaries || data.summaries.length === 0) {\r\n          throw new Error(`Não foi possível extrair informações do documento ${file.name}.`);\r\n        }\r\n        \r\n        if (data.patientName) {\r\n          patientNames[file.name] = data.patientName;\r\n        }\r\n        \r\n        const fileSummaries = data.summaries.map(summary => ({\r\n          ...summary,\r\n          fileName: file.name,\r\n          patientName: data.patientName,\r\n          processedAt: new Date().toLocaleTimeString()\r\n        }));\r\n        \r\n        allSummaries.push(...fileSummaries);\r\n        \r\n        if (i === 0 && data.patientName) {\r\n          setPatientName(data.patientName);\r\n        }\r\n        \r\n        setProcessedFiles(i + 1);\r\n        \r\n      } catch (error) {\r\n        console.error(`Erro ao processar ${file.name}:`, error);\r\n        fileErrors.push({ \r\n          fileName: file.name, \r\n          error: error.message,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n      }\r\n    }\r\n    \r\n    setProcessingStage('complete');\r\n    \r\n    if (allSummaries.length > 0) {\r\n      setSummaries(allSummaries);\r\n      \r\n      if (fileErrors.length > 0) {\r\n        setUploadStatus({ \r\n          stage: 'aviso', \r\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\r\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        const errorMessage = fileErrors.map(err => \r\n          `${err.fileName}: ${err.error}`\r\n        ).join('\\n');\r\n        setError(`Alguns arquivos não puderam ser processados:\\n\\n${errorMessage}`);\r\n      } else {\r\n        setUploadStatus({ \r\n          stage: 'sucesso', \r\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\r\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        setError(null);\r\n      }\r\n    } else {\r\n      setUploadStatus({ \r\n        stage: 'erro', \r\n        message: 'Nenhum resultado foi extraído dos arquivos.',\r\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\r\n        timestamp: new Date().toLocaleTimeString()\r\n      });\r\n      \r\n      const errorMessage = fileErrors.map(err => \r\n        `${err.fileName}: ${err.error}`\r\n      ).join('\\n');\r\n      setError(`Falha ao processar todos os arquivos:\\n\\n${errorMessage}`);\r\n    }\r\n    \r\n    setLoading(false);\r\n    setCurrentProcessingFile(null);\r\n  };\r\n\r\n  // Gerar texto formatado para cópia\r\n  const getSimplifiedTextForCopy = useCallback(() => {\r\n    if (summaries.length === 0) return '';\r\n    \r\n    const resultsByFile = {};\r\n    \r\n    summaries.forEach((summary) => {\r\n      const fileName = summary.fileName || 'arquivo_desconhecido';\r\n      \r\n      if (!resultsByFile[fileName]) {\r\n        resultsByFile[fileName] = {\r\n          patientName: summary.patientName || patientName || \"Paciente\",\r\n          results: [],\r\n          processedAt: summary.processedAt\r\n        };\r\n      }\r\n      \r\n      const lines = summary.content.split('\\n');\r\n      lines.forEach((line) => {\r\n        if (line.trim() && \r\n            !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && \r\n            !line.match(/^Paciente:/i)) {\r\n          resultsByFile[fileName].results.push(line.trim());\r\n        }\r\n      });\r\n    });\r\n    \r\n    let formattedText = '';\r\n    let isFirstFile = true;\r\n    \r\n    Object.keys(resultsByFile).forEach((fileName) => {\r\n      if (!isFirstFile) {\r\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\r\n      } else {\r\n        isFirstFile = false;\r\n      }\r\n      \r\n      const fileData = resultsByFile[fileName];\r\n      if (fileData.patientName) {\r\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\r\n        if (fileData.processedAt) {\r\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\r\n        }\r\n        formattedText += '\\n';\r\n      }\r\n      \r\n      const uniqueResults = [...new Set(fileData.results)];\r\n      uniqueResults.forEach(result => {\r\n        formattedText += `${result}\\n`;\r\n      });\r\n    });\r\n    \r\n    return formattedText;\r\n  }, [summaries, patientName]);\r\n\r\n  const copyToClipboard = useCallback(async () => {\r\n    if (textAreaRef.current) {\r\n      try {\r\n        if (navigator.clipboard && window.isSecureContext) {\r\n          await navigator.clipboard.writeText(textAreaRef.current.value);\r\n        } else {\r\n          textAreaRef.current.select();\r\n          document.execCommand('copy');\r\n        }\r\n        \r\n        const originalText = textAreaRef.current.value;\r\n        textAreaRef.current.value = 'Resultados copiados com sucesso!';\r\n        textAreaRef.current.style.background = '#f0fdf4';\r\n        textAreaRef.current.style.color = '#166534';\r\n        \r\n        setTimeout(() => {\r\n          textAreaRef.current.value = originalText;\r\n          textAreaRef.current.style.background = '';\r\n          textAreaRef.current.style.color = '';\r\n        }, 2000);\r\n        \r\n      } catch (err) {\r\n        console.error('Erro ao copiar:', err);\r\n        const originalText = textAreaRef.current.value;\r\n        textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\r\n        textAreaRef.current.style.background = '#fef2f2';\r\n        textAreaRef.current.style.color = '#dc2626';\r\n        \r\n        setTimeout(() => {\r\n          textAreaRef.current.value = originalText;\r\n          textAreaRef.current.style.background = '';\r\n          textAreaRef.current.style.color = '';\r\n        }, 3000);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Calcular progresso\r\n  const calculateProgress = useCallback(() => {\r\n    if (totalFiles === 0) return 0;\r\n    return Math.round((processedFiles / totalFiles) * 100);\r\n  }, [processedFiles, totalFiles]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"institute-logo\">\r\n          <span className=\"logo-text\">Instituto Paulo Godoi</span>\r\n        </div>\r\n        <h1>Sistema de Processamento de Documentos</h1>\r\n        <p className=\"subtitle\">Extração de resultados e ferramentas para PDFs laboratoriais</p>\r\n        \r\n        {apiStatus && (\r\n          <div className={`api-status ${apiStatus.status}`}>\r\n            <span className=\"status-indicator\"></span>\r\n            {apiStatus.status === 'online' ? (\r\n              <span>Conectado ({apiStatus.env})</span>\r\n            ) : apiStatus.status === 'checking' ? (\r\n              <span>Verificando...</span>\r\n            ) : (\r\n              <span>{apiStatus.message}\r\n                <button className=\"retry-button\" onClick={retryApiConnection}>\r\n                  Tentar novamente\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </header>\r\n      \r\n      <main>\r\n        {/* Error Handler para problemas de API */}\r\n        {(apiStatus?.status === 'offline' || apiStatus?.status === 'error') && activeTab === 'extractor' && (\r\n          <ErrorHandler \r\n            error={`Não foi possível conectar ao servidor. ${apiStatus.message}`}\r\n            onRetry={retryApiConnection}\r\n          />\r\n        )}\r\n\r\n        {/* Navegação por Abas */}\r\n        <div className=\"tab-navigation\">\r\n          <button \r\n            className={`tab-button ${activeTab === 'extractor' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('extractor')}\r\n          >\r\n            <span className=\"tab-icon\">📋</span>\r\n            Extrator de Resultados\r\n          </button>\r\n          <button \r\n            className={`tab-button ${activeTab === 'splitter' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('splitter')}\r\n          >\r\n            <span className=\"tab-icon\">✂️</span>\r\n            Divisor de PDF\r\n          </button>\r\n        </div>\r\n\r\n        {/* Conteúdo da aba Extrator */}\r\n        {activeTab === 'extractor' && (\r\n          <>\r\n            {/* Aviso sobre chunked upload */}\r\n            <div className=\"size-warning-card\">\r\n              <div className=\"warning-header\">\r\n              \r\n              </div>\r\n              <div className=\"warning-content\">\r\n                <p>\r\n                  <strong>Arquivos grandes (4MB) são automaticamente enviados em partes.</strong>\r\n                </p>\r\n                <p>\r\n                  Use a aba <button \r\n                    className=\"tab-link-button\" \r\n                    onClick={() => setActiveTab('splitter')}\r\n                  >\r\n                    ✂️ Divisor de PDF\r\n                  </button> se preferir dividir manualmente.\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div \r\n              className={`uploader-container ${dragOver ? 'drag-over' : ''}`}\r\n              onDragOver={handleDragOver}\r\n              onDragLeave={handleDragLeave}\r\n              onDrop={handleDrop}\r\n            >\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"file-input-container\">\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"pdf-upload\"\r\n                    ref={fileInputRef}\r\n                    onChange={handleFileChange}\r\n                    accept=\"application/pdf\"\r\n                    multiple\r\n                  />\r\n                  <label htmlFor=\"pdf-upload\" className={`file-label ${dragOver ? 'drag-active' : ''}`}>\r\n                    {dragOver ? (\r\n                      'Solte os arquivos PDF aqui'\r\n                    ) : files.length > 0 ? (\r\n                      `${files.length} arquivo(s) selecionado(s)`\r\n                    ) : (\r\n                      'Escolher arquivos PDF ou arrastar aqui'\r\n                    )}\r\n                  </label>\r\n                </div>\r\n                \r\n                {/* Lista de arquivos selecionados */}\r\n                {files.length > 0 && (\r\n                  <div className=\"selected-files-container\">\r\n                    <h3>Arquivos Selecionados</h3>\r\n                    <div className=\"files-actions\">\r\n                      <button \r\n                        type=\"button\" \r\n                        className=\"clear-files-button\" \r\n                        onClick={clearAllFiles}\r\n                        disabled={loading}\r\n                      >\r\n                        Remover todos\r\n                      </button>\r\n                    </div>\r\n                    <ul className=\"selected-files-list\">\r\n                      {files.map((file, index) => {\r\n                        const fileSizeMB = file.size / 1024 / 1024;\r\n                        const isOverLimit = fileSizeMB > 4;\r\n                        return (\r\n                          <li key={`${file.name}-${index}`} className={`file-item ${isOverLimit ? 'file-chunked' : ''}`}>\r\n                            <span className=\"file-name\">\r\n                              <span className=\"pdf-icon\">📄</span>\r\n                              {file.name}\r\n                              <span className={`file-size ${isOverLimit ? 'size-chunked' : ''}`}>\r\n                                ({fileSizeMB.toFixed(1)} MB)\r\n                                {isOverLimit && <span className=\"size-alert\">📦 Envio em partes</span>}\r\n                              </span>\r\n                            </span>\r\n                            <button \r\n                              type=\"button\" \r\n                              className=\"remove-file-button\" \r\n                              onClick={() => removeFile(index)}\r\n                              disabled={loading}\r\n                            >\r\n                              ×\r\n                            </button>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                    {files.some(file => file.size / 1024 / 1024 > 4) && (\r\n                      <div className=\"file-size-alert chunked-info\">\r\n                        <span className=\"alert-icon\">📦</span>\r\n                        <div className=\"alert-content\">\r\n                          <strong>Arquivos grandes detectados!</strong>\r\n                          <p>PDFs maiores que 4MB serão enviados automaticamente em partes menores. \r\n                             O processamento funcionará normalmente.</p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                \r\n                <button \r\n                  type=\"submit\" \r\n                  className={`upload-button ${loading ? 'loading' : ''}`}\r\n                  disabled={files.length === 0 || apiStatus?.status !== 'online' || loading}\r\n                >\r\n                  {loading ? 'Processando...' : 'Extrair Resultados'}\r\n                </button>\r\n              </form>\r\n              \r\n              {/* Barra de progresso */}\r\n              {(processingStage === 'upload' || processingStage === 'processing') && (\r\n                <div className=\"progress-bar-container\">\r\n                  <div className=\"progress-bar\">\r\n                    <div \r\n                      className=\"progress-indicator\" \r\n                      style={{ width: `${calculateProgress()}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"progress-status\">\r\n                    {currentProcessingFile ? (\r\n                      `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${\r\n                        currentProcessingFile.length > 30 ? \r\n                        currentProcessingFile.substring(0, 30) + '...' : \r\n                        currentProcessingFile\r\n                      } (${processedFiles + 1}/${totalFiles})`\r\n                    ) : (\r\n                      processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Status de upload */}\r\n              {uploadStatus && (\r\n                <div className={`upload-status ${uploadStatus.stage}`}>\r\n                  <span className=\"status-icon\">\r\n                    {uploadStatus.stage === 'sucesso' ? '✓' : \r\n                    uploadStatus.stage === 'erro' ? '✗' : \r\n                    uploadStatus.stage === 'aviso' ? '!' : '⟳'}\r\n                  </span>\r\n                  <div className=\"status-content\">\r\n                    <div className=\"status-message\">{uploadStatus.message}</div>\r\n                    {uploadStatus.details && (\r\n                      <div className=\"status-details\">{uploadStatus.details}</div>\r\n                    )}\r\n                    {uploadStatus.timestamp && (\r\n                      <div className=\"status-timestamp\">{uploadStatus.timestamp}</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Dicas para PDFs problemáticos */}\r\n              {uploadStatus && uploadStatus.stage === 'erro' && (\r\n                <div className=\"pdf-tips\">\r\n                  <h4>Possíveis soluções:</h4>\r\n                  <ul>\r\n                    <li>Verifique se os PDFs não estão protegidos por senha</li>\r\n                    <li>Tente salvar os PDFs novamente usando \"Salvar como\"</li>\r\n                    <li>Se possível, imprima os documentos para novos PDFs</li>\r\n                    <li>Entre em contato com o laboratório para versões alternativas</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Aviso para processamento parcial */}\r\n              {uploadStatus && uploadStatus.stage === 'aviso' && (\r\n                <div className=\"processing-notice\">\r\n                  <p>Os documentos foram processados, mas alguns podem conter imprecisões.</p>\r\n                  <p>Verifique os resultados antes de usar.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {loading && !processingStage && (\r\n              <p className=\"loading\">Processando documentos, aguarde...</p>\r\n            )}\r\n            \r\n            {error && !uploadStatus && (\r\n              <p className=\"error\">{error}</p>\r\n            )}\r\n            \r\n            {/* Detalhes de erros */}\r\n            {error && uploadStatus && (\r\n              <div className=\"file-errors\">\r\n                <details>\r\n                  <summary>Detalhes dos erros</summary>\r\n                  <pre className=\"error-details\">{error}</pre>\r\n                </details>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Botão de reset */}\r\n            {summaries.length > 0 && (\r\n              <div className=\"reset-button-container\">\r\n                <button \r\n                  className=\"reset-button\"\r\n                  onClick={handleReset}\r\n                  disabled={loading}\r\n                >\r\n                  Processar novos documentos\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"summary-container\">\r\n              {summaries.length === 0 ? (\r\n                <div className=\"empty-message\">\r\n                  <p>Os resultados dos exames aparecerão aqui.</p>\r\n                  <p>Selecione arquivos PDF para começar.</p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-view-container\">\r\n                  <h2>Resultados Extraídos</h2>\r\n                  {summaries.length > 0 && (\r\n                    <div className=\"summary-info\">\r\n                      <span className=\"file-count\">{summaries.length} resultados extraídos</span>\r\n                      {files.length > 1 && (\r\n                        <span className=\"multi-file-notice\">de {files.length} arquivos</span>\r\n                      )}\r\n                      <span className=\"extraction-time\">às {new Date().toLocaleTimeString()}</span>\r\n                    </div>\r\n                  )}\r\n                  <p className=\"copy-instructions\">Lista de resultados pronta para copiar:</p>\r\n                  <div className=\"text-area-container\">\r\n                    <textarea\r\n                      ref={textAreaRef}\r\n                      className=\"results-text-area\"\r\n                      value={getSimplifiedTextForCopy()}\r\n                      readOnly\r\n                      placeholder=\"Os resultados aparecerão aqui...\"\r\n                    />\r\n                    <button \r\n                      onClick={copyToClipboard} \r\n                      className=\"copy-button\"\r\n                      disabled={summaries.length === 0}\r\n                    >\r\n                      Copiar para área de transferência\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Conteúdo da aba Divisor de PDF */}\r\n        {activeTab === 'splitter' && (\r\n          <div className=\"pdf-splitter-section\">\r\n            <div className=\"splitter-intro\">\r\n              <h2>\r\n                <span className=\"section-icon\">✂️</span>\r\n                Divisor de PDF\r\n              </h2>\r\n              <p className=\"section-description\">\r\n                <strong>Divida múltiplos PDFs grandes em partes menores.</strong> \r\n                Esta ferramenta é opcional - o extrator já lida automaticamente com arquivos grandes.\r\n              </p>\r\n              <div className=\"splitter-benefits\">\r\n                <div className=\"benefit-item\">\r\n                  <span className=\"benefit-icon\">🎯</span>\r\n                  <span>Processe vários PDFs de uma só vez</span>\r\n                </div>\r\n                <div className=\"benefit-item\">\r\n                  <span className=\"benefit-icon\">🔒</span>\r\n                  <span>Processamento 100% local e seguro</span>\r\n                </div>\r\n                <div className=\"benefit-item\">\r\n                  <span className=\"benefit-icon\">⚡</span>\r\n                  <span>Divisão rápida e automática</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Seletor de número de partes */}\r\n            <div className=\"split-options-container\">\r\n              <h3 className=\"split-options-title\">\r\n                <span className=\"options-icon\">⚙️</span>\r\n                Configurações de Divisão\r\n              </h3>\r\n              <div className=\"split-parts-selector\">\r\n                <label className=\"parts-label\">Dividir cada PDF em:</label>\r\n                <div className=\"parts-buttons-container\">\r\n                  {[2, 3, 4].map((parts) => (\r\n                    <button\r\n                      key={parts}\r\n                      type=\"button\"\r\n                      className={`parts-button ${splitParts === parts ? 'active' : ''}`}\r\n                      onClick={() => setSplitParts(parts)}\r\n                      disabled={isSplitting}\r\n                    >\r\n                      <span className=\"parts-number\">{parts}</span>\r\n                      <span className=\"parts-text\">partes</span>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                <div className=\"parts-explanation\">\r\n                  <span className=\"explanation-icon\">ℹ️</span>\r\n                  <span className=\"explanation-text\">\r\n                    {splitParts === 2 && \"Divide cada PDF pela metade\"}\r\n                    {splitParts === 3 && \"Divide cada PDF em 3 partes iguais\"}\r\n                    {splitParts === 4 && \"Divide cada PDF em 4 partes iguais\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div \r\n              className={`splitter-uploader-container ${dragOverSplitter ? 'drag-over' : ''}`}\r\n              onDragOver={handleSplitterDragOver}\r\n              onDragLeave={handleSplitterDragLeave}\r\n              onDrop={handleSplitterDrop}\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                id=\"pdf-split-upload\"\r\n                ref={splitFileInputRef}\r\n                onChange={handleSplitFileChange}\r\n                accept=\"application/pdf\"\r\n                multiple\r\n                style={{ display: 'none' }}\r\n              />\r\n              \r\n              <label htmlFor=\"pdf-split-upload\" className={`splitter-file-label ${dragOverSplitter ? 'drag-active' : ''}`}>\r\n                <div className=\"splitter-upload-content\">\r\n                  <span className=\"splitter-upload-icon\">\r\n                    {selectedFilesForSplit.length > 0 ? '✓' : '📎'}\r\n                  </span>\r\n                  {selectedFilesForSplit.length > 0 ? (\r\n                    <div className=\"selected-files-info\">\r\n                      <p className=\"selected-files-count\">\r\n                        {selectedFilesForSplit.length} arquivo{selectedFilesForSplit.length > 1 ? 's' : ''} selecionado{selectedFilesForSplit.length > 1 ? 's' : ''}\r\n                      </p>\r\n                      <p className=\"selected-files-size\">\r\n                        Total: {(selectedFilesForSplit.reduce((acc, file) => acc + file.size, 0) / 1024 / 1024).toFixed(1)} MB\r\n                      </p>\r\n                    </div>\r\n                  ) : dragOverSplitter ? (\r\n                    <div className=\"drag-message\">\r\n                      <p>Solte os arquivos PDF aqui</p>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"upload-message\">\r\n                      <p>Selecione ou arraste arquivos PDF</p>\r\n                      <span className=\"upload-hint\">Clique aqui ou arraste e solte seus PDFs</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </label>\r\n\r\n              {/* Lista de arquivos selecionados para dividir */}\r\n              {selectedFilesForSplit.length > 0 && (\r\n                <div className=\"selected-split-files-container\">\r\n                  <h3>Arquivos para Dividir</h3>\r\n                  <div className=\"split-files-actions\">\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"clear-split-files-button\" \r\n                      onClick={clearAllSplitFiles}\r\n                      disabled={isSplitting}\r\n                    >\r\n                      Remover todos\r\n                    </button>\r\n                  </div>\r\n                  <ul className=\"selected-split-files-list\">\r\n                    {selectedFilesForSplit.map((file, index) => {\r\n                      const fileSizeMB = file.size / 1024 / 1024;\r\n                      return (\r\n                        <li key={`split-${file.name}-${index}`} className=\"split-file-item\">\r\n                          <span className=\"split-file-name\">\r\n                            <span className=\"pdf-icon\">📄</span>\r\n                            {file.name}\r\n                            <span className=\"split-file-size\">\r\n                              ({fileSizeMB.toFixed(1)} MB)\r\n                            </span>\r\n                          </span>\r\n                          <button \r\n                            type=\"button\" \r\n                            className=\"remove-split-file-button\" \r\n                            onClick={() => removeSplitFile(index)}\r\n                            disabled={isSplitting}\r\n                          >\r\n                            ×\r\n                          </button>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"splitter-actions\">\r\n                <button\r\n                  onClick={splitPDFs}\r\n                  disabled={selectedFilesForSplit.length === 0 || isSplitting}\r\n                  className={`split-button ${isSplitting ? 'loading' : ''}`}\r\n                >\r\n                  <span className=\"button-icon\">✂️</span>\r\n                  {isSplitting ? (\r\n                    `Dividindo ${splittingProgress.current}/${splittingProgress.total}...`\r\n                  ) : (\r\n                    `Dividir em ${splitParts} partes (${selectedFilesForSplit.length} PDF${selectedFilesForSplit.length > 1 ? 's' : ''})`\r\n                  )}\r\n                </button>\r\n\r\n                {selectedFilesForSplit.length > 0 && (\r\n                  <button\r\n                    onClick={resetSplitter}\r\n                    className=\"reset-splitter-button\"\r\n                    disabled={isSplitting}\r\n                  >\r\n                    Limpar Seleção\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Indicador de processamento com progresso */}\r\n            {isSplitting && (\r\n              <div className=\"split-processing\">\r\n                <div className=\"processing-spinner\"></div>\r\n                <div className=\"processing-info\">\r\n                  <span className=\"processing-text\">\r\n                    Processando: {splittingProgress.fileName}\r\n                  </span>\r\n                  <div className=\"processing-progress\">\r\n                    {splittingProgress.current} de {splittingProgress.total} arquivos\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Mensagens de erro para divisor */}\r\n            {splitError && (\r\n              <div className=\"split-error\">\r\n                <span className=\"error-icon\">✗</span>\r\n                <pre className=\"error-text\">{splitError}</pre>\r\n              </div>\r\n            )}\r\n\r\n            {/* Mensagem de sucesso para divisor */}\r\n            {splitSuccess && (\r\n              <div className=\"split-success\">\r\n                <span className=\"success-icon\">✓</span>\r\n                <span className=\"success-text\">{splitSuccess}</span>\r\n              </div>\r\n            )}\r\n\r\n            {/* Resultados da divisão */}\r\n            {splitFiles.length > 0 && (\r\n              <div className=\"split-results\">\r\n                <div className=\"split-results-header\">\r\n                  <h3>\r\n                    <span className=\"results-icon\">📁</span>\r\n                    Arquivos Gerados ({splitFiles.length})\r\n                  </h3>\r\n                  <button\r\n                    onClick={downloadAll}\r\n                    className=\"download-all-button\"\r\n                  >\r\n                    <span className=\"button-icon\">⬇</span>\r\n                    Baixar Todos\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"split-files-grid\">\r\n                  {splitFiles.map((file, index) => (\r\n                    <div key={index} className=\"split-file-card\">\r\n                      <div className=\"file-card-header\">\r\n                        <span className=\"file-card-icon\">📄</span>\r\n                        <div className=\"file-card-info\">\r\n                          <h4 className=\"file-card-name\">{file.name}</h4>\r\n                          <div className=\"file-card-details\">\r\n                            <span className=\"file-card-pages\">{file.pages} páginas</span>\r\n                            <span className=\"file-card-part\">Parte {file.partNumber} de {file.totalParts}</span>\r\n                          </div>\r\n                          <span className=\"file-card-original\">De: {file.originalFile}</span>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => downloadFile(file)}\r\n                        className=\"download-file-button\"\r\n                      >\r\n                        <span className=\"button-icon\">⬇</span>\r\n                        Download\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"split-actions-footer\">\r\n                  <button\r\n                    onClick={resetSplitter}\r\n                    className=\"new-split-button\"\r\n                  >\r\n                    Dividir outros PDFs\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Informações sobre a ferramenta */}\r\n            <div className=\"splitter-info\">\r\n              <h4>Como funciona:</h4>\r\n              <ul>\r\n                <li>Selecione um ou mais arquivos PDF</li>\r\n                <li>Escolha em quantas partes dividir (2, 3 ou 4)</li>\r\n                <li>Cada PDF será dividido no número de partes selecionado</li>\r\n                <li>Se o PDF tiver páginas que não dividem igualmente, algumas partes terão uma página extra</li>\r\n                <li>Os arquivos são processados localmente no seu navegador (sem upload para servidor)</li>\r\n                <li>Seus dados permanecem seguros e privados</li>\r\n                <li>Processe múltiplos arquivos de uma vez para economizar tempo</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n      \r\n      <footer>\r\n        <p>© 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames</p>\r\n        <p className=\"api-info\">\r\n          Ambiente: {apiStatus?.env || 'Desconectado'} | API: {API_URL}\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}