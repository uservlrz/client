{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\confi\\\\Downloads\\\\pdf-summarizer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js - Com suporte para múltiplos PDFs e resultados individuais\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport ErrorHandler from './components/ErrorHandler';\n\n// Função para determinar a URL da API baseada no ambiente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getApiUrl() {\n  // Em desenvolvimento (local), usa localhost\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:5000';\n  }\n\n  // Em produção, usa o domínio do Vercel para o backend\n  return 'https://server-theta-murex.vercel.app';\n}\n\n// URL da API - detecta automaticamente ambiente local ou produção\nconst API_URL = getApiUrl();\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [processedFiles, setProcessedFiles] = useState([]); // Array para armazenar arquivos processados\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [apiStatus, setApiStatus] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null); // Novo: para mostrar estágios do upload\n  const [processingStage, setProcessingStage] = useState(null); // Novo: para acompanhar o estágio de processamento\n  const textAreaRef = useRef(null);\n\n  // Verificar status da API ao carregar\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n          console.log(`API conectada: ${API_URL} (${data.env})`);\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ao conectar com a API: ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Não foi possível conectar ao servidor',\n          error: error.message,\n          url: API_URL\n        });\n        console.error('Erro ao verificar status da API:', error);\n      }\n    };\n    checkApiStatus();\n  }, []);\n\n  // Função para tentar reconectar com a API\n  const retryApiConnection = () => {\n    setApiStatus({\n      status: 'checking',\n      message: 'Verificando conexão...',\n      url: API_URL\n    });\n    setTimeout(() => {\n      checkApiStatus();\n    }, 1000);\n  };\n\n  // Função para verificar status da API\n  const checkApiStatus = async () => {\n    try {\n      const response = await fetch(`${API_URL}/api/health`);\n      if (response.ok) {\n        const data = await response.json();\n        setApiStatus({\n          status: 'online',\n          env: data.env,\n          url: API_URL\n        });\n        setError(null);\n      } else {\n        setApiStatus({\n          status: 'error',\n          message: `Erro ao conectar com a API: ${response.status}`,\n          url: API_URL\n        });\n        setError(`Erro ao conectar com o servidor: ${response.status} ${response.statusText}`);\n      }\n    } catch (error) {\n      setApiStatus({\n        status: 'offline',\n        message: 'Não foi possível conectar ao servidor',\n        error: error.message,\n        url: API_URL\n      });\n      setError(`Falha de conexão com o servidor: ${error.message}`);\n    }\n  };\n\n  // Função para remover um arquivo processado da lista\n  const handleRemoveFile = index => {\n    setProcessedFiles(prev => {\n      const newFiles = [...prev];\n      newFiles.splice(index, 1);\n      return newFiles;\n    });\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setUploadStatus(null); // Limpar status anterior\n    setProcessingStage(null);\n    if (selectedFile && selectedFile.type === 'application/pdf') {\n      setFile(selectedFile);\n      setError(null);\n    } else {\n      setFile(null);\n      setError('Por favor, selecione um arquivo PDF válido.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Por favor, selecione um arquivo PDF válido.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('pdf', file);\n    setLoading(true);\n    setError(null);\n    setUploadStatus({\n      stage: 'iniciando',\n      message: 'Iniciando processamento...'\n    });\n    setProcessingStage('upload');\n    try {\n      // Informar progresso\n      setUploadStatus({\n        stage: 'enviando',\n        message: 'Enviando arquivo para o servidor...'\n      });\n      console.log(`Enviando arquivo para ${API_URL}/api/upload`);\n      const response = await fetch(`${API_URL}/api/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      setProcessingStage('processing');\n      setUploadStatus({\n        stage: 'processando',\n        message: 'Processando documento PDF...'\n      });\n      if (!response.ok) {\n        let errorMessage = `Erro ${response.status}: ${response.statusText}`;\n        try {\n          const errorData = await response.json();\n          if (errorData.message) {\n            errorMessage = errorData.message;\n          }\n        } catch (jsonError) {\n          // Continuar com a mensagem de erro padrão se não puder ler JSON\n        }\n        throw new Error(errorMessage);\n      }\n      const data = await response.json();\n\n      // Verificar se temos resultados válidos\n      if (!data.summaries || data.summaries.length === 0) {\n        throw new Error('Não foi possível extrair informações deste documento.');\n      }\n\n      // Verificar qual método de extração foi usado para decidir a mensagem de status\n      setProcessingStage('complete');\n      let statusMessage = '';\n      let statusStage = 'sucesso';\n      if (data.extractionMethod === 'falha') {\n        statusStage = 'erro';\n        statusMessage = 'Não foi possível processar este PDF. Tente outro formato.';\n      } else if (['reparado', 'gs_reparado', 'desprotegido', 'partes'].includes(data.extractionMethod)) {\n        statusStage = 'aviso';\n        statusMessage = `Documento processado com ajustes (${getMethodDescription(data.extractionMethod)}).`;\n      } else {\n        statusStage = 'sucesso';\n        statusMessage = 'Documento processado com sucesso!';\n      }\n      setUploadStatus({\n        stage: statusStage,\n        message: statusMessage\n      });\n\n      // Extrair exames do conteúdo\n      const exams = extractExamsFromSummaries(data.summaries);\n\n      // Adicionar arquivo processado ao array de arquivos\n      setProcessedFiles(prev => [...prev, {\n        fileName: file.name,\n        patientName: data.patientName || 'Paciente não identificado',\n        summaries: data.summaries,\n        exams: exams,\n        uploadTime: new Date().toLocaleString(),\n        extractionMethod: data.extractionMethod,\n        status: statusStage\n      }]);\n\n      // Limpar o arquivo atual para permitir enviar mais\n      setFile(null);\n\n      // Limpar o input de arquivo\n      const fileInput = document.getElementById('pdf-upload');\n      if (fileInput) fileInput.value = '';\n    } catch (error) {\n      console.error('Erro ao enviar o arquivo:', error);\n      setProcessingStage('error');\n      setUploadStatus({\n        stage: 'erro',\n        message: 'Falha no processamento do documento.'\n      });\n      setError(error.message || 'Erro ao processar o documento. Tente novamente.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Função para obter descrição amigável do método de extração\n  const getMethodDescription = method => {\n    const descriptions = {\n      'direto': 'processamento direto',\n      'desprotegido': 'remoção de proteção',\n      'reparado': 'reparo de estrutura',\n      'gs_reparado': 'reparo avançado',\n      'partes': 'processamento em partes',\n      'falha': 'falha no processamento'\n    };\n    return descriptions[method] || method;\n  };\n\n  // Função para extrair exames dos resumos\n  const extractExamsFromSummaries = summaries => {\n    const allExams = [];\n    summaries.forEach(summary => {\n      const lines = summary.content.split('\\n');\n      lines.forEach(line => {\n        if (line.trim() && !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES|^Paciente:/i)) {\n          // Para cada linha de exame, tentamos separar o nome do resultado\n          const examLine = line.trim();\n\n          // Verificar se há valores anormais (identificados por asteriscos)\n          const hasAbnormalValue = examLine.includes('***');\n\n          // Adicionar o exame com informação se está alterado\n          allExams.push({\n            text: examLine,\n            isAbnormal: hasAbnormalValue\n          });\n        }\n      });\n    });\n\n    // Remover duplicatas preservando a informação de valor anormal\n    const uniqueExams = [];\n    const seenTexts = new Set();\n    allExams.forEach(exam => {\n      // Remover asteriscos para comparação de texto\n      const cleanText = exam.text.replace(/\\*\\*\\*/g, '');\n      if (!seenTexts.has(cleanText)) {\n        seenTexts.add(cleanText);\n        uniqueExams.push(exam);\n      }\n    });\n    return uniqueExams;\n  };\n\n  // Função para copiar texto específico para a área de transferência\n  const copyToClipboard = (text, message = \"Texto copiado para a área de transferência!\") => {\n    const tempTextArea = document.createElement('textarea');\n    tempTextArea.value = text;\n    document.body.appendChild(tempTextArea);\n    tempTextArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempTextArea);\n    alert(message);\n  };\n\n  // Função para copiar todos os exames de um arquivo\n  const copyAllExams = index => {\n    const processedFile = processedFiles[index];\n    if (!processedFile) return;\n    let textToCopy = `PACIENTE: ${processedFile.patientName}\\nARQUIVO: ${processedFile.fileName}\\n\\n`;\n    processedFile.exams.forEach(exam => {\n      // Remover os asteriscos para uma cópia limpa\n      const cleanText = exam.text.replace(/\\*\\*\\*/g, '');\n      textToCopy += `${cleanText}\\n`;\n    });\n    copyToClipboard(textToCopy, `Todos os exames de ${processedFile.fileName} copiados!`);\n  };\n\n  // Função para copiar um exame específico\n  const copyExam = (fileIndex, examText) => {\n    const processedFile = processedFiles[fileIndex];\n    if (!processedFile) return;\n\n    // Remover os asteriscos para uma cópia limpa\n    const cleanText = examText.replace(/\\*\\*\\*/g, '');\n    const textToCopy = `PACIENTE: ${processedFile.patientName}\\n${cleanText}`;\n    copyToClipboard(textToCopy, `Exame copiado!`);\n  };\n  const printResults = index => {\n    const processedFile = processedFiles[index];\n    if (!processedFile) return;\n\n    // Criar um elemento temporário para impressão\n    const printWindow = window.open('', '_blank');\n    if (printWindow) {\n      // Criar o conteúdo HTML para impressão\n      printWindow.document.write(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Resultados - ${processedFile.patientName}</title>\n          <style>\n            body {\n              font-family: Arial, sans-serif;\n              margin: 40px;\n              color: #333;\n              line-height: 1.5;\n            }\n            .header {\n              text-align: center;\n              margin-bottom: 30px;\n              padding-bottom: 20px;\n              border-bottom: 2px solid #1a73e8;\n            }\n            .header h1 {\n              color: #1a73e8;\n              margin-bottom: 5px;\n              font-size: 24px;\n            }\n            .patient-info {\n              margin-bottom: 30px;\n            }\n            .patient-info p {\n              margin: 5px 0;\n              font-size: 16px;\n            }\n            .patient-info .name {\n              font-weight: bold;\n              font-size: 18px;\n            }\n            .exam-list {\n              margin-bottom: 30px;\n            }\n            .exam-item {\n              padding: 10px;\n              margin-bottom: 5px;\n              background-color: #f9f9fa;\n              border-left: 3px solid #1a73e8;\n            }\n            .exam-item.abnormal {\n              background-color: #fff8f7;\n              border-left: 3px solid #ea4335;\n            }\n            .highlighted {\n              font-weight: bold;\n              color: #ea4335;\n            }\n            .footer {\n              margin-top: 50px;\n              font-size: 12px;\n              text-align: center;\n              color: #666;\n              border-top: 1px solid #eee;\n              padding-top: 20px;\n            }\n            @media print {\n              body {\n                margin: 0;\n                padding: 20px;\n              }\n              .page-break {\n                page-break-before: always;\n              }\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h1>Resultados de Exames</h1>\n            <p>Instituto Paulo Godoi</p>\n          </div>\n          \n          <div class=\"patient-info\">\n            <p class=\"name\">Paciente: ${processedFile.patientName}</p>\n            <p>Arquivo: ${processedFile.fileName}</p>\n            <p>Data de processamento: ${processedFile.uploadTime}</p>\n          </div>\n          \n          <div class=\"exam-list\">\n            <h2>Exames Identificados</h2>\n            ${processedFile.exams.map(exam => `<div class=\"exam-item ${exam.isAbnormal ? 'abnormal' : ''}\">\n                ${exam.isAbnormal ? exam.text.replace(/\\*\\*\\*/g, '<span class=\"highlighted\">***</span>') : exam.text}\n              </div>`).join('')}\n          </div>\n          \n          <div class=\"footer\">\n            <p>© 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames</p>\n            <p>Documento gerado em ${new Date().toLocaleString()}</p>\n          </div>\n        </body>\n        </html>\n      `);\n      printWindow.document.close();\n\n      // Dar um tempo para os estilos carregarem antes de imprimir\n      setTimeout(() => {\n        printWindow.print();\n        printWindow.close();\n      }, 500);\n    } else {\n      alert('Não foi possível abrir a janela de impressão. Verifique se o bloqueador de pop-ups está ativado.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"institute-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Instituto Paulo Godoi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Extrator de Resultados de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Sistema interno para processamento de laudos laboratoriais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), apiStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `api-status ${apiStatus.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), apiStatus.status === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"API conectada (\", apiStatus.env, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 15\n        }, this) : apiStatus.status === 'checking' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Verificando conex\\xE3o...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Erro de conex\\xE3o: \", apiStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: retryApiConnection,\n            children: \"Reconectar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [((apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'offline' || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'error') && /*#__PURE__*/_jsxDEV(ErrorHandler, {\n        error: `Não foi possível conectar ao servidor. ${apiStatus.message}`,\n        onRetry: retryApiConnection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploader-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"pdf-upload\",\n              onChange: handleFileChange,\n              accept: \"application/pdf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pdf-upload\",\n              className: \"file-label\",\n              children: file ? file.name : 'Escolher arquivo PDF de exames'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"upload-button\",\n            disabled: !file || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) !== 'online' || processingStage === 'upload' || processingStage === 'processing',\n            children: processingStage === 'upload' || processingStage === 'processing' ? 'Processando...' : 'Extrair Resultados'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), (processingStage === 'upload' || processingStage === 'processing') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-bar ${processingStage}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-status\",\n            children: processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `upload-status ${uploadStatus.stage}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-icon\",\n            children: uploadStatus.stage === 'sucesso' ? '✓' : uploadStatus.stage === 'erro' ? '✗' : uploadStatus.stage === 'aviso' ? '⚠️' : '⟳'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-message\",\n            children: uploadStatus.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this), uploadStatus && uploadStatus.stage === 'erro' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdf-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Poss\\xEDveis solu\\xE7\\xF5es:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Verifique se o PDF n\\xE3o est\\xE1 protegido por senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Tente salvar o PDF novamente usando \\\"Salvar como\\\" no Adobe Reader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Se poss\\xEDvel, tente imprimir o documento para um novo PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Entre em contato com o laborat\\xF3rio para obter uma vers\\xE3o digital alternativa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Se o problema persistir, use uma ferramenta online para converter o PDF para outro formato\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this), uploadStatus && uploadStatus.stage === 'aviso' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-notice\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"O documento foi processado com sucesso, mas pode conter algumas imprecis\\xF5es devido ao formato do arquivo original.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Verifique cuidadosamente os resultados extra\\xEDdos antes de us\\xE1-los.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), loading && !processingStage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Processando o documento, por favor aguarde...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 41\n      }, this), error && !uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [\"Erro: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 36\n      }, this), processedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processed-files-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Arquivos Processados (\", processedFiles.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this), processedFiles.map((processedFile, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `file-result-box ${processedFile.status}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-result-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: processedFile.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"patient-name\",\n                children: [\"Paciente: \", processedFile.patientName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"file-meta\",\n                children: [\"Processado em \", processedFile.uploadTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"print-button\",\n                onClick: () => printResults(fileIndex),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"print-icon\",\n                  children: \"\\uD83D\\uDDA8\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 23\n                }, this), \" Imprimir\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"copy-button\",\n                onClick: () => copyAllExams(fileIndex),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"copy-icon\",\n                  children: \"\\uD83D\\uDCCB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 23\n                }, this), \" Copiar Tudo\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => handleRemoveFile(fileIndex),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"delete-icon\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 23\n                }, this), \" Excluir\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-result-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"exams-count-badge\",\n              children: [processedFile.exams.length, \" exames encontrados\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"exams-list\",\n              children: processedFile.exams.map((exam, examIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `exam-row ${exam.isAbnormal ? 'abnormal' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"exam-text\",\n                  children: exam.isAbnormal ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    dangerouslySetInnerHTML: {\n                      __html: exam.text.replace(/\\*\\*\\*/g, '<span class=\"highlighted\">***</span>')\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 29\n                  }, this) : exam.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"copy-exam-button\",\n                  onClick: () => copyExam(fileIndex, exam.text),\n                  title: \"Copiar este exame\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"copy-icon-small\",\n                    children: \"\\uD83D\\uDCCB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 25\n                }, this)]\n              }, examIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, this)]\n        }, fileIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this), processedFiles.length === 0 && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-message\",\n          children: \"Os resultados dos exames aparecer\\xE3o aqui.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"api-info\",\n        children: [\"Ambiente: \", (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.env) || 'Desconectado', \" | API: \", API_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7Kj15zfj9CkEQOCPXQGl36XV/c0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ErrorHandler","jsxDEV","_jsxDEV","getApiUrl","window","location","hostname","API_URL","App","_s","file","setFile","processedFiles","setProcessedFiles","loading","setLoading","error","setError","apiStatus","setApiStatus","uploadStatus","setUploadStatus","processingStage","setProcessingStage","textAreaRef","checkApiStatus","response","fetch","ok","data","json","status","env","url","console","log","message","retryApiConnection","setTimeout","statusText","handleRemoveFile","index","prev","newFiles","splice","handleFileChange","e","selectedFile","target","files","type","handleSubmit","preventDefault","formData","FormData","append","stage","method","body","errorMessage","errorData","jsonError","Error","summaries","length","statusMessage","statusStage","extractionMethod","includes","getMethodDescription","exams","extractExamsFromSummaries","fileName","name","patientName","uploadTime","Date","toLocaleString","fileInput","document","getElementById","value","descriptions","allExams","forEach","summary","lines","content","split","line","trim","match","examLine","hasAbnormalValue","push","text","isAbnormal","uniqueExams","seenTexts","Set","exam","cleanText","replace","has","add","copyToClipboard","tempTextArea","createElement","appendChild","select","execCommand","removeChild","alert","copyAllExams","processedFile","textToCopy","copyExam","fileIndex","examText","printResults","printWindow","open","write","map","join","close","print","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onRetry","onSubmit","id","onChange","accept","htmlFor","disabled","examIndex","dangerouslySetInnerHTML","__html","title","_c","$RefreshReg$"],"sources":["C:/Users/confi/Downloads/pdf-summarizer/client/src/App.js"],"sourcesContent":["// App.js - Com suporte para múltiplos PDFs e resultados individuais\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport './App.css';\r\nimport ErrorHandler from './components/ErrorHandler';\r\n\r\n// Função para determinar a URL da API baseada no ambiente\r\nfunction getApiUrl() {\r\n  // Em desenvolvimento (local), usa localhost\r\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n    return 'http://localhost:5000';\r\n  }\r\n  \r\n  // Em produção, usa o domínio do Vercel para o backend\r\n  return 'https://server-theta-murex.vercel.app';\r\n}\r\n\r\n// URL da API - detecta automaticamente ambiente local ou produção\r\nconst API_URL = getApiUrl();\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [processedFiles, setProcessedFiles] = useState([]); // Array para armazenar arquivos processados\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [apiStatus, setApiStatus] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null); // Novo: para mostrar estágios do upload\r\n  const [processingStage, setProcessingStage] = useState(null); // Novo: para acompanhar o estágio de processamento\r\n  const textAreaRef = useRef(null);\r\n\r\n  // Verificar status da API ao carregar\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({\r\n            status: 'online',\r\n            env: data.env,\r\n            url: API_URL\r\n          });\r\n          console.log(`API conectada: ${API_URL} (${data.env})`);\r\n        } else {\r\n          setApiStatus({\r\n            status: 'error',\r\n            message: `Erro ao conectar com a API: ${response.status}`,\r\n            url: API_URL\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({\r\n          status: 'offline',\r\n          message: 'Não foi possível conectar ao servidor',\r\n          error: error.message,\r\n          url: API_URL\r\n        });\r\n        console.error('Erro ao verificar status da API:', error);\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  // Função para tentar reconectar com a API\r\n  const retryApiConnection = () => {\r\n    setApiStatus({\r\n      status: 'checking',\r\n      message: 'Verificando conexão...',\r\n      url: API_URL\r\n    });\r\n    \r\n    setTimeout(() => {\r\n      checkApiStatus();\r\n    }, 1000);\r\n  };\r\n  \r\n  // Função para verificar status da API\r\n  const checkApiStatus = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/health`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setApiStatus({\r\n          status: 'online',\r\n          env: data.env,\r\n          url: API_URL\r\n        });\r\n        setError(null);\r\n      } else {\r\n        setApiStatus({\r\n          status: 'error',\r\n          message: `Erro ao conectar com a API: ${response.status}`,\r\n          url: API_URL\r\n        });\r\n        setError(`Erro ao conectar com o servidor: ${response.status} ${response.statusText}`);\r\n      }\r\n    } catch (error) {\r\n      setApiStatus({\r\n        status: 'offline',\r\n        message: 'Não foi possível conectar ao servidor',\r\n        error: error.message,\r\n        url: API_URL\r\n      });\r\n      setError(`Falha de conexão com o servidor: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Função para remover um arquivo processado da lista\r\n  const handleRemoveFile = (index) => {\r\n    setProcessedFiles(prev => {\r\n      const newFiles = [...prev];\r\n      newFiles.splice(index, 1);\r\n      return newFiles;\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setUploadStatus(null); // Limpar status anterior\r\n    setProcessingStage(null);\r\n    \r\n    if (selectedFile && selectedFile.type === 'application/pdf') {\r\n      setFile(selectedFile);\r\n      setError(null);\r\n    } else {\r\n      setFile(null);\r\n      setError('Por favor, selecione um arquivo PDF válido.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      setError('Por favor, selecione um arquivo PDF válido.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('pdf', file);\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setUploadStatus({ stage: 'iniciando', message: 'Iniciando processamento...' });\r\n    setProcessingStage('upload');\r\n\r\n    try {\r\n      // Informar progresso\r\n      setUploadStatus({ stage: 'enviando', message: 'Enviando arquivo para o servidor...' });\r\n      \r\n      console.log(`Enviando arquivo para ${API_URL}/api/upload`);\r\n      const response = await fetch(`${API_URL}/api/upload`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      setProcessingStage('processing');\r\n      setUploadStatus({ stage: 'processando', message: 'Processando documento PDF...' });\r\n      \r\n      if (!response.ok) {\r\n        let errorMessage = `Erro ${response.status}: ${response.statusText}`;\r\n        \r\n        try {\r\n          const errorData = await response.json();\r\n          if (errorData.message) {\r\n            errorMessage = errorData.message;\r\n          }\r\n        } catch (jsonError) {\r\n          // Continuar com a mensagem de erro padrão se não puder ler JSON\r\n        }\r\n        \r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      // Verificar se temos resultados válidos\r\n      if (!data.summaries || data.summaries.length === 0) {\r\n        throw new Error('Não foi possível extrair informações deste documento.');\r\n      }\r\n      \r\n      // Verificar qual método de extração foi usado para decidir a mensagem de status\r\n      setProcessingStage('complete');\r\n      \r\n      let statusMessage = '';\r\n      let statusStage = 'sucesso';\r\n      \r\n      if (data.extractionMethod === 'falha') {\r\n        statusStage = 'erro';\r\n        statusMessage = 'Não foi possível processar este PDF. Tente outro formato.';\r\n      } else if (['reparado', 'gs_reparado', 'desprotegido', 'partes'].includes(data.extractionMethod)) {\r\n        statusStage = 'aviso';\r\n        statusMessage = `Documento processado com ajustes (${getMethodDescription(data.extractionMethod)}).`;\r\n      } else {\r\n        statusStage = 'sucesso';\r\n        statusMessage = 'Documento processado com sucesso!';\r\n      }\r\n      \r\n      setUploadStatus({ \r\n        stage: statusStage, \r\n        message: statusMessage\r\n      });\r\n      \r\n      // Extrair exames do conteúdo\r\n      const exams = extractExamsFromSummaries(data.summaries);\r\n      \r\n      // Adicionar arquivo processado ao array de arquivos\r\n      setProcessedFiles(prev => [...prev, {\r\n        fileName: file.name,\r\n        patientName: data.patientName || 'Paciente não identificado',\r\n        summaries: data.summaries,\r\n        exams: exams,\r\n        uploadTime: new Date().toLocaleString(),\r\n        extractionMethod: data.extractionMethod,\r\n        status: statusStage\r\n      }]);\r\n      \r\n      // Limpar o arquivo atual para permitir enviar mais\r\n      setFile(null);\r\n      \r\n      // Limpar o input de arquivo\r\n      const fileInput = document.getElementById('pdf-upload');\r\n      if (fileInput) fileInput.value = '';\r\n      \r\n    } catch (error) {\r\n      console.error('Erro ao enviar o arquivo:', error);\r\n      setProcessingStage('error');\r\n      setUploadStatus({ \r\n        stage: 'erro', \r\n        message: 'Falha no processamento do documento.'\r\n      });\r\n      \r\n      setError(error.message || 'Erro ao processar o documento. Tente novamente.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Função para obter descrição amigável do método de extração\r\n  const getMethodDescription = (method) => {\r\n    const descriptions = {\r\n      'direto': 'processamento direto',\r\n      'desprotegido': 'remoção de proteção',\r\n      'reparado': 'reparo de estrutura',\r\n      'gs_reparado': 'reparo avançado',\r\n      'partes': 'processamento em partes',\r\n      'falha': 'falha no processamento'\r\n    };\r\n    \r\n    return descriptions[method] || method;\r\n  };\r\n\r\n  // Função para extrair exames dos resumos\r\n  const extractExamsFromSummaries = (summaries) => {\r\n    const allExams = [];\r\n    \r\n    summaries.forEach(summary => {\r\n      const lines = summary.content.split('\\n');\r\n      \r\n      lines.forEach(line => {\r\n        if (line.trim() && !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES|^Paciente:/i)) {\r\n          // Para cada linha de exame, tentamos separar o nome do resultado\r\n          const examLine = line.trim();\r\n          \r\n          // Verificar se há valores anormais (identificados por asteriscos)\r\n          const hasAbnormalValue = examLine.includes('***');\r\n          \r\n          // Adicionar o exame com informação se está alterado\r\n          allExams.push({\r\n            text: examLine,\r\n            isAbnormal: hasAbnormalValue\r\n          });\r\n        }\r\n      });\r\n    });\r\n    \r\n    // Remover duplicatas preservando a informação de valor anormal\r\n    const uniqueExams = [];\r\n    const seenTexts = new Set();\r\n    \r\n    allExams.forEach(exam => {\r\n      // Remover asteriscos para comparação de texto\r\n      const cleanText = exam.text.replace(/\\*\\*\\*/g, '');\r\n      \r\n      if (!seenTexts.has(cleanText)) {\r\n        seenTexts.add(cleanText);\r\n        uniqueExams.push(exam);\r\n      }\r\n    });\r\n    \r\n    return uniqueExams;\r\n  };\r\n\r\n  // Função para copiar texto específico para a área de transferência\r\n  const copyToClipboard = (text, message = \"Texto copiado para a área de transferência!\") => {\r\n    const tempTextArea = document.createElement('textarea');\r\n    tempTextArea.value = text;\r\n    document.body.appendChild(tempTextArea);\r\n    tempTextArea.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(tempTextArea);\r\n    alert(message);\r\n  };\r\n\r\n  // Função para copiar todos os exames de um arquivo\r\n  const copyAllExams = (index) => {\r\n    const processedFile = processedFiles[index];\r\n    if (!processedFile) return;\r\n    \r\n    let textToCopy = `PACIENTE: ${processedFile.patientName}\\nARQUIVO: ${processedFile.fileName}\\n\\n`;\r\n    \r\n    processedFile.exams.forEach(exam => {\r\n      // Remover os asteriscos para uma cópia limpa\r\n      const cleanText = exam.text.replace(/\\*\\*\\*/g, '');\r\n      textToCopy += `${cleanText}\\n`;\r\n    });\r\n    \r\n    copyToClipboard(textToCopy, `Todos os exames de ${processedFile.fileName} copiados!`);\r\n  };\r\n\r\n  // Função para copiar um exame específico\r\n  const copyExam = (fileIndex, examText) => {\r\n    const processedFile = processedFiles[fileIndex];\r\n    if (!processedFile) return;\r\n    \r\n    // Remover os asteriscos para uma cópia limpa\r\n    const cleanText = examText.replace(/\\*\\*\\*/g, '');\r\n    const textToCopy = `PACIENTE: ${processedFile.patientName}\\n${cleanText}`;\r\n    copyToClipboard(textToCopy, `Exame copiado!`);\r\n  };\r\n\r\n  const printResults = (index) => {\r\n    const processedFile = processedFiles[index];\r\n    if (!processedFile) return;\r\n    \r\n    // Criar um elemento temporário para impressão\r\n    const printWindow = window.open('', '_blank');\r\n    \r\n    if (printWindow) {\r\n      // Criar o conteúdo HTML para impressão\r\n      printWindow.document.write(`\r\n        <!DOCTYPE html>\r\n        <html>\r\n        <head>\r\n          <title>Resultados - ${processedFile.patientName}</title>\r\n          <style>\r\n            body {\r\n              font-family: Arial, sans-serif;\r\n              margin: 40px;\r\n              color: #333;\r\n              line-height: 1.5;\r\n            }\r\n            .header {\r\n              text-align: center;\r\n              margin-bottom: 30px;\r\n              padding-bottom: 20px;\r\n              border-bottom: 2px solid #1a73e8;\r\n            }\r\n            .header h1 {\r\n              color: #1a73e8;\r\n              margin-bottom: 5px;\r\n              font-size: 24px;\r\n            }\r\n            .patient-info {\r\n              margin-bottom: 30px;\r\n            }\r\n            .patient-info p {\r\n              margin: 5px 0;\r\n              font-size: 16px;\r\n            }\r\n            .patient-info .name {\r\n              font-weight: bold;\r\n              font-size: 18px;\r\n            }\r\n            .exam-list {\r\n              margin-bottom: 30px;\r\n            }\r\n            .exam-item {\r\n              padding: 10px;\r\n              margin-bottom: 5px;\r\n              background-color: #f9f9fa;\r\n              border-left: 3px solid #1a73e8;\r\n            }\r\n            .exam-item.abnormal {\r\n              background-color: #fff8f7;\r\n              border-left: 3px solid #ea4335;\r\n            }\r\n            .highlighted {\r\n              font-weight: bold;\r\n              color: #ea4335;\r\n            }\r\n            .footer {\r\n              margin-top: 50px;\r\n              font-size: 12px;\r\n              text-align: center;\r\n              color: #666;\r\n              border-top: 1px solid #eee;\r\n              padding-top: 20px;\r\n            }\r\n            @media print {\r\n              body {\r\n                margin: 0;\r\n                padding: 20px;\r\n              }\r\n              .page-break {\r\n                page-break-before: always;\r\n              }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"header\">\r\n            <h1>Resultados de Exames</h1>\r\n            <p>Instituto Paulo Godoi</p>\r\n          </div>\r\n          \r\n          <div class=\"patient-info\">\r\n            <p class=\"name\">Paciente: ${processedFile.patientName}</p>\r\n            <p>Arquivo: ${processedFile.fileName}</p>\r\n            <p>Data de processamento: ${processedFile.uploadTime}</p>\r\n          </div>\r\n          \r\n          <div class=\"exam-list\">\r\n            <h2>Exames Identificados</h2>\r\n            ${processedFile.exams.map(exam => \r\n              `<div class=\"exam-item ${exam.isAbnormal ? 'abnormal' : ''}\">\r\n                ${exam.isAbnormal \r\n                  ? exam.text.replace(/\\*\\*\\*/g, '<span class=\"highlighted\">***</span>') \r\n                  : exam.text}\r\n              </div>`\r\n            ).join('')}\r\n          </div>\r\n          \r\n          <div class=\"footer\">\r\n            <p>© 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames</p>\r\n            <p>Documento gerado em ${new Date().toLocaleString()}</p>\r\n          </div>\r\n        </body>\r\n        </html>\r\n      `);\r\n      \r\n      printWindow.document.close();\r\n      \r\n      // Dar um tempo para os estilos carregarem antes de imprimir\r\n      setTimeout(() => {\r\n        printWindow.print();\r\n        printWindow.close();\r\n      }, 500);\r\n    } else {\r\n      alert('Não foi possível abrir a janela de impressão. Verifique se o bloqueador de pop-ups está ativado.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"institute-logo\">\r\n          <span className=\"logo-text\">Instituto Paulo Godoi</span>\r\n        </div>\r\n        <h1>Extrator de Resultados de Exames</h1>\r\n        <p className=\"subtitle\">Sistema interno para processamento de laudos laboratoriais</p>\r\n        \r\n        {/* Indicador de status da API */}\r\n        {apiStatus && (\r\n          <div className={`api-status ${apiStatus.status}`}>\r\n            <span className=\"status-indicator\"></span>\r\n            {apiStatus.status === 'online' ? (\r\n              <span>API conectada ({apiStatus.env})</span>\r\n            ) : apiStatus.status === 'checking' ? (\r\n              <span>Verificando conexão...</span>\r\n            ) : (\r\n              <span>Erro de conexão: {apiStatus.message} \r\n                <button className=\"retry-button\" onClick={retryApiConnection}>\r\n                  Reconectar\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </header>\r\n      <main>\r\n        {/* Mostrar o manipulador de erros para erros de API */}\r\n        {(apiStatus?.status === 'offline' || apiStatus?.status === 'error') && (\r\n          <ErrorHandler \r\n            error={`Não foi possível conectar ao servidor. ${apiStatus.message}`}\r\n            onRetry={retryApiConnection}\r\n          />\r\n        )}\r\n        \r\n        <div className=\"uploader-container\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"file-input-container\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"pdf-upload\"\r\n                onChange={handleFileChange}\r\n                accept=\"application/pdf\"\r\n              />\r\n              <label htmlFor=\"pdf-upload\" className=\"file-label\">\r\n                {file ? file.name : 'Escolher arquivo PDF de exames'}\r\n              </label>\r\n            </div>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"upload-button\"\r\n              disabled={!file || apiStatus?.status !== 'online' || processingStage === 'upload' || processingStage === 'processing'}\r\n            >\r\n              {processingStage === 'upload' || processingStage === 'processing' ? \r\n                'Processando...' : 'Extrair Resultados'}\r\n            </button>\r\n          </form>\r\n          \r\n          {/* Indicador de progresso */}\r\n          {(processingStage === 'upload' || processingStage === 'processing') && (\r\n            <div className=\"progress-bar-container\">\r\n              <div className={`progress-bar ${processingStage}`}>\r\n                <div className=\"progress-indicator\"></div>\r\n              </div>\r\n              <div className=\"progress-status\">\r\n                {processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Status de upload */}\r\n          {uploadStatus && (\r\n            <div className={`upload-status ${uploadStatus.stage}`}>\r\n              <span className=\"status-icon\">\r\n                {uploadStatus.stage === 'sucesso' ? '✓' : \r\n                uploadStatus.stage === 'erro' ? '✗' : \r\n                uploadStatus.stage === 'aviso' ? '⚠️' : '⟳'}\r\n              </span>\r\n              <span className=\"status-message\">{uploadStatus.message}</span>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Dicas para PDFs problemáticos */}\r\n          {uploadStatus && uploadStatus.stage === 'erro' && (\r\n            <div className=\"pdf-tips\">\r\n              <h4>Possíveis soluções:</h4>\r\n              <ul>\r\n                <li>Verifique se o PDF não está protegido por senha</li>\r\n                <li>Tente salvar o PDF novamente usando \"Salvar como\" no Adobe Reader</li>\r\n                <li>Se possível, tente imprimir o documento para um novo PDF</li>\r\n                <li>Entre em contato com o laboratório para obter uma versão digital alternativa</li>\r\n                <li>Se o problema persistir, use uma ferramenta online para converter o PDF para outro formato</li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Aviso quando o documento foi processado com ajustes */}\r\n          {uploadStatus && uploadStatus.stage === 'aviso' && (\r\n            <div className=\"processing-notice\">\r\n              <p>O documento foi processado com sucesso, mas pode conter algumas imprecisões devido ao formato do arquivo original.</p>\r\n              <p>Verifique cuidadosamente os resultados extraídos antes de usá-los.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {loading && !processingStage && <p className=\"loading\">Processando o documento, por favor aguarde...</p>}\r\n        {error && !uploadStatus && <p className=\"error\">Erro: {error}</p>}\r\n        \r\n        {/* Lista de Arquivos Processados */}\r\n        {processedFiles.length > 0 && (\r\n          <div className=\"processed-files-container\">\r\n            <h2>Arquivos Processados ({processedFiles.length})</h2>\r\n            \r\n            {processedFiles.map((processedFile, fileIndex) => (\r\n              <div key={fileIndex} className={`file-result-box ${processedFile.status}`}>\r\n                <div className=\"file-result-header\">\r\n                  <div className=\"file-info\">\r\n                    <h3>{processedFile.fileName}</h3>\r\n                    <p className=\"patient-name\">Paciente: {processedFile.patientName}</p>\r\n                    <p className=\"file-meta\">Processado em {processedFile.uploadTime}</p>\r\n                  </div>\r\n                  <div className=\"file-actions\">\r\n                    <button \r\n                      className=\"print-button\"\r\n                      onClick={() => printResults(fileIndex)}\r\n                    >\r\n                      <i className=\"print-icon\">🖨️</i> Imprimir\r\n                    </button>\r\n                    <button \r\n                      className=\"copy-button\"\r\n                      onClick={() => copyAllExams(fileIndex)}\r\n                    >\r\n                      <i className=\"copy-icon\">📋</i> Copiar Tudo\r\n                    </button>\r\n                    <button \r\n                      className=\"delete-button\"\r\n                      onClick={() => handleRemoveFile(fileIndex)}\r\n                    >\r\n                      <i className=\"delete-icon\">🗑️</i> Excluir\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"file-result-content\">\r\n                  <div className=\"exams-count-badge\">\r\n                    {processedFile.exams.length} exames encontrados\r\n                  </div>\r\n                  \r\n                  <div className=\"exams-list\">\r\n                    {processedFile.exams.map((exam, examIndex) => (\r\n                      <div key={examIndex} className={`exam-row ${exam.isAbnormal ? 'abnormal' : ''}`}>\r\n                        <div className=\"exam-text\">\r\n                          {exam.isAbnormal ? (\r\n                            <span \r\n                              dangerouslySetInnerHTML={{ \r\n                                __html: exam.text.replace(/\\*\\*\\*/g, '<span class=\"highlighted\">***</span>') \r\n                              }} \r\n                            />\r\n                          ) : (\r\n                            exam.text\r\n                          )}\r\n                        </div>\r\n                        <button \r\n                          className=\"copy-exam-button\"\r\n                          onClick={() => copyExam(fileIndex, exam.text)}\r\n                          title=\"Copiar este exame\"\r\n                        >\r\n                          <i className=\"copy-icon-small\">📋</i>\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {processedFiles.length === 0 && !loading && !error && (\r\n          <div className=\"summary-container\">\r\n            <p className=\"empty-message\">Os resultados dos exames aparecerão aqui.</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n      <footer>\r\n        <p>© 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames</p>\r\n        <p className=\"api-info\">Ambiente: {apiStatus?.env || 'Desconectado'} | API: {API_URL}</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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AMM,WAAW,GAAGpH,MAAM,CAACqH,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC;IAE7C,IAAID,WAAW,EAAE;MACf;MACAA,WAAW,CAACzC,QAAQ,CAAC2C,KAAK,CAAC;AACjC;AACA;AACA;AACA,gCAAgCR,aAAa,CAACxC,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwCwC,aAAa,CAACxC,WAAW;AACjE,0BAA0BwC,aAAa,CAAC1C,QAAQ;AAChD,wCAAwC0C,aAAa,CAACvC,UAAU;AAChE;AACA;AACA;AACA;AACA,cAAcuC,aAAa,CAAC5C,KAAK,CAACqD,GAAG,CAACvB,IAAI,IAC5B,yBAAyBA,IAAI,CAACJ,UAAU,GAAG,UAAU,GAAG,EAAE;AACxE,kBAAkBI,IAAI,CAACJ,UAAU,GACbI,IAAI,CAACL,IAAI,CAACO,OAAO,CAAC,SAAS,EAAE,sCAAsC,CAAC,GACpEF,IAAI,CAACL,IAAI;AAC7B,qBACY,CAAC,CAAC6B,IAAI,CAAC,EAAE,CAAC;AACtB;AACA;AACA;AACA;AACA,qCAAqC,IAAIhD,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;AAChE;AACA;AACA;AACA,OAAO,CAAC;MAEF2C,WAAW,CAACzC,QAAQ,CAAC8C,KAAK,CAAC,CAAC;;MAE5B;MACAvF,UAAU,CAAC,MAAM;QACfkF,WAAW,CAACM,KAAK,CAAC,CAAC;QACnBN,WAAW,CAACK,KAAK,CAAC,CAAC;MACrB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACLb,KAAK,CAAC,kGAAkG,CAAC;IAC3G;EACF,CAAC;EAED,oBACE9G,OAAA;IAAK6H,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9H,OAAA;MAAQ6H,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B9H,OAAA;QAAK6H,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7B9H,OAAA;UAAM6H,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAqB;UAAAxD,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAA3D,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACNjI,OAAA;QAAA8H,QAAA,EAAI;MAAgC;QAAAxD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCjI,OAAA;QAAG6H,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAA0D;QAAAxD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAGrFjH,SAAS,iBACRhB,OAAA;QAAK6H,SAAS,EAAE,cAAc7G,SAAS,CAACa,MAAM,EAAG;QAAAiG,QAAA,gBAC/C9H,OAAA;UAAM6H,SAAS,EAAC;QAAkB;UAAAvD,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACzCjH,SAAS,CAACa,MAAM,KAAK,QAAQ,gBAC5B7B,OAAA;UAAA8H,QAAA,GAAM,iBAAe,EAAC9G,SAAS,CAACc,GAAG,EAAC,GAAC;QAAA;UAAAwC,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAC1CjH,SAAS,CAACa,MAAM,KAAK,UAAU,gBACjC7B,OAAA;UAAA8H,QAAA,EAAM;QAAsB;UAAAxD,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAEnCjI,OAAA;UAAA8H,QAAA,GAAM,sBAAiB,EAAC9G,SAAS,CAACkB,OAAO,eACvClC,OAAA;YAAQ6H,SAAS,EAAC,cAAc;YAACK,OAAO,EAAE/F,kBAAmB;YAAA2F,QAAA,EAAC;UAE9D;YAAAxD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACP;MAAA;QAAA3D,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAA3D,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACTjI,OAAA;MAAA8H,QAAA,GAEG,CAAC,CAAA9G,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa,MAAM,MAAK,SAAS,IAAI,CAAAb,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa,MAAM,MAAK,OAAO,kBAChE7B,OAAA,CAACF,YAAY;QACXgB,KAAK,EAAE,0CAA0CE,SAAS,CAACkB,OAAO,EAAG;QACrEiG,OAAO,EAAEhG;MAAmB;QAAAmC,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CACF,eAEDjI,OAAA;QAAK6H,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjC9H,OAAA;UAAMoI,QAAQ,EAAEnF,YAAa;UAAA6E,QAAA,gBAC3B9H,OAAA;YAAK6H,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC9H,OAAA;cACEgD,IAAI,EAAC,MAAM;cACXqF,EAAE,EAAC,YAAY;cACfC,QAAQ,EAAE3F,gBAAiB;cAC3B4F,MAAM,EAAC;YAAiB;cAAAjE,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACFjI,OAAA;cAAOwI,OAAO,EAAC,YAAY;cAACX,SAAS,EAAC,YAAY;cAAAC,QAAA,EAC/CtH,IAAI,GAAGA,IAAI,CAAC+D,IAAI,GAAG;YAAgC;cAAAD,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC;UAAA;YAAA3D,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNjI,OAAA;YACEgD,IAAI,EAAC,QAAQ;YACb6E,SAAS,EAAC,eAAe;YACzBY,QAAQ,EAAE,CAACjI,IAAI,IAAI,CAAAQ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa,MAAM,MAAK,QAAQ,IAAIT,eAAe,KAAK,QAAQ,IAAIA,eAAe,KAAK,YAAa;YAAA0G,QAAA,EAErH1G,eAAe,KAAK,QAAQ,IAAIA,eAAe,KAAK,YAAY,GAC/D,gBAAgB,GAAG;UAAoB;YAAAkD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EAGN,CAAC7G,eAAe,KAAK,QAAQ,IAAIA,eAAe,KAAK,YAAY,kBAChEpB,OAAA;UAAK6H,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrC9H,OAAA;YAAK6H,SAAS,EAAE,gBAAgBzG,eAAe,EAAG;YAAA0G,QAAA,eAChD9H,OAAA;cAAK6H,SAAS,EAAC;YAAoB;cAAAvD,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAA3D,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACNjI,OAAA;YAAK6H,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC7B1G,eAAe,KAAK,QAAQ,GAAG,qBAAqB,GAAG;UAA0B;YAAAkD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E,CAAC;QAAA;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGA/G,YAAY,iBACXlB,OAAA;UAAK6H,SAAS,EAAE,iBAAiB3G,YAAY,CAACoC,KAAK,EAAG;UAAAwE,QAAA,gBACpD9H,OAAA;YAAM6H,SAAS,EAAC,aAAa;YAAAC,QAAA,EAC1B5G,YAAY,CAACoC,KAAK,KAAK,SAAS,GAAG,GAAG,GACvCpC,YAAY,CAACoC,KAAK,KAAK,MAAM,GAAG,GAAG,GACnCpC,YAAY,CAACoC,KAAK,KAAK,OAAO,GAAG,IAAI,GAAG;UAAG;YAAAgB,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACPjI,OAAA;YAAM6H,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAE5G,YAAY,CAACgB;UAAO;YAAAoC,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CACN,EAGA/G,YAAY,IAAIA,YAAY,CAACoC,KAAK,KAAK,MAAM,iBAC5CtD,OAAA;UAAK6H,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvB9H,OAAA;YAAA8H,QAAA,EAAI;UAAmB;YAAAxD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BjI,OAAA;YAAA8H,QAAA,gBACE9H,OAAA;cAAA8H,QAAA,EAAI;YAA+C;cAAAxD,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxDjI,OAAA;cAAA8H,QAAA,EAAI;YAAiE;cAAAxD,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1EjI,OAAA;cAAA8H,QAAA,EAAI;YAAwD;cAAAxD,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjEjI,OAAA;cAAA8H,QAAA,EAAI;YAA4E;cAAAxD,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrFjI,OAAA;cAAA8H,QAAA,EAAI;YAA0F;cAAAxD,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAA3D,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjG,CAAC;QAAA;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACN,EAGA/G,YAAY,IAAIA,YAAY,CAACoC,KAAK,KAAK,OAAO,iBAC7CtD,OAAA;UAAK6H,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC9H,OAAA;YAAA8H,QAAA,EAAG;UAAkH;YAAAxD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACzHjI,OAAA;YAAA8H,QAAA,EAAG;UAAkE;YAAAxD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CACN;MAAA;QAAA3D,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAELrH,OAAO,IAAI,CAACQ,eAAe,iBAAIpB,OAAA;QAAG6H,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAA6C;QAAAxD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACvGnH,KAAK,IAAI,CAACI,YAAY,iBAAIlB,OAAA;QAAG6H,SAAS,EAAC,OAAO;QAAAC,QAAA,GAAC,QAAM,EAAChH,KAAK;MAAA;QAAAwD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAGhEvH,cAAc,CAACoD,MAAM,GAAG,CAAC,iBACxB9D,OAAA;QAAK6H,SAAS,EAAC,2BAA2B;QAAAC,QAAA,gBACxC9H,OAAA;UAAA8H,QAAA,GAAI,wBAAsB,EAACpH,cAAc,CAACoD,MAAM,EAAC,GAAC;QAAA;UAAAQ,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAEtDvH,cAAc,CAAC+G,GAAG,CAAC,CAACT,aAAa,EAAEG,SAAS,kBAC3CnH,OAAA;UAAqB6H,SAAS,EAAE,mBAAmBb,aAAa,CAACnF,MAAM,EAAG;UAAAiG,QAAA,gBACxE9H,OAAA;YAAK6H,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjC9H,OAAA;cAAK6H,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxB9H,OAAA;gBAAA8H,QAAA,EAAKd,aAAa,CAAC1C;cAAQ;gBAAAA,QAAA,EAAAyD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjCjI,OAAA;gBAAG6H,SAAS,EAAC,cAAc;gBAAAC,QAAA,GAAC,YAAU,EAACd,aAAa,CAACxC,WAAW;cAAA;gBAAAF,QAAA,EAAAyD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrEjI,OAAA;gBAAG6H,SAAS,EAAC,WAAW;gBAAAC,QAAA,GAAC,gBAAc,EAACd,aAAa,CAACvC,UAAU;cAAA;gBAAAH,QAAA,EAAAyD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAA3D,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE,CAAC,eACNjI,OAAA;cAAK6H,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9H,OAAA;gBACE6H,SAAS,EAAC,cAAc;gBACxBK,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACF,SAAS,CAAE;gBAAAW,QAAA,gBAEvC9H,OAAA;kBAAG6H,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAG;kBAAAxD,QAAA,EAAAyD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,aACnC;cAAA;gBAAA3D,QAAA,EAAAyD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTjI,OAAA;gBACE6H,SAAS,EAAC,aAAa;gBACvBK,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAACI,SAAS,CAAE;gBAAAW,QAAA,gBAEvC9H,OAAA;kBAAG6H,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAAC;gBAAE;kBAAAxD,QAAA,EAAAyD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,gBACjC;cAAA;gBAAA3D,QAAA,EAAAyD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTjI,OAAA;gBACE6H,SAAS,EAAC,eAAe;gBACzBK,OAAO,EAAEA,CAAA,KAAM5F,gBAAgB,CAAC6E,SAAS,CAAE;gBAAAW,QAAA,gBAE3C9H,OAAA;kBAAG6H,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAAG;kBAAAxD,QAAA,EAAAyD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,YACpC;cAAA;gBAAA3D,QAAA,EAAAyD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAA3D,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAA3D,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENjI,OAAA;YAAK6H,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClC9H,OAAA;cAAK6H,SAAS,EAAC,mBAAmB;cAAAC,QAAA,GAC/Bd,aAAa,CAAC5C,KAAK,CAACN,MAAM,EAAC,qBAC9B;YAAA;cAAAQ,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAENjI,OAAA;cAAK6H,SAAS,EAAC,YAAY;cAAAC,QAAA,EACxBd,aAAa,CAAC5C,KAAK,CAACqD,GAAG,CAAC,CAACvB,IAAI,EAAEwC,SAAS,kBACvC1I,OAAA;gBAAqB6H,SAAS,EAAE,YAAY3B,IAAI,CAACJ,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;gBAAAgC,QAAA,gBAC9E9H,OAAA;kBAAK6H,SAAS,EAAC,WAAW;kBAAAC,QAAA,EACvB5B,IAAI,CAACJ,UAAU,gBACd9F,OAAA;oBACE2I,uBAAuB,EAAE;sBACvBC,MAAM,EAAE1C,IAAI,CAACL,IAAI,CAACO,OAAO,CAAC,SAAS,EAAE,sCAAsC;oBAC7E;kBAAE;oBAAA9B,QAAA,EAAAyD,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,GAEF/B,IAAI,CAACL;gBACN;kBAAAvB,QAAA,EAAAyD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eACNjI,OAAA;kBACE6H,SAAS,EAAC,kBAAkB;kBAC5BK,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACC,SAAS,EAAEjB,IAAI,CAACL,IAAI,CAAE;kBAC9CgD,KAAK,EAAC,mBAAmB;kBAAAf,QAAA,eAEzB9H,OAAA;oBAAG6H,SAAS,EAAC,iBAAiB;oBAAAC,QAAA,EAAC;kBAAE;oBAAAxD,QAAA,EAAAyD,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAA3D,QAAA,EAAAyD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B,CAAC;cAAA,GAlBDS,SAAS;gBAAApE,QAAA,EAAAyD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAmBd,CACN;YAAC;cAAA3D,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAA3D,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GA1DEd,SAAS;UAAA7C,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2Dd,CACN,CAAC;MAAA;QAAA3D,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,EAEAvH,cAAc,CAACoD,MAAM,KAAK,CAAC,IAAI,CAAClD,OAAO,IAAI,CAACE,KAAK,iBAChDd,OAAA;QAAK6H,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChC9H,OAAA;UAAG6H,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAyC;UAAAxD,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAA3D,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CACN;IAAA;MAAA3D,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACPjI,OAAA;MAAA8H,QAAA,gBACE9H,OAAA;QAAA8H,QAAA,EAAG;MAAmE;QAAAxD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1EjI,OAAA;QAAG6H,SAAS,EAAC,UAAU;QAAAC,QAAA,GAAC,YAAU,EAAC,CAAA9G,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEc,GAAG,KAAI,cAAc,EAAC,UAAQ,EAACzB,OAAO;MAAA;QAAAiE,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAA3D,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC;EAAA;IAAA3D,QAAA,EAAAyD,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1H,EAAA,CAhnBQD,GAAG;AAAAwI,EAAA,GAAHxI,GAAG;AAknBZ,eAAeA,GAAG;AAAC,IAAAwI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}