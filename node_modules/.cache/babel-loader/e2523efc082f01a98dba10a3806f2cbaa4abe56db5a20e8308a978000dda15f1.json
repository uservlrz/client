{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\confi\\\\Downloads\\\\pdf-summarizer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js - Versão com Divisor de PDF Configurável (1, 2, 3 ou 4 partes)\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport ErrorHandler from './components/ErrorHandler';\n\n// Função para determinar a URL da API baseada no ambiente\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getApiUrl() {\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:5000';\n  }\n  return 'https://server-theta-murex.vercel.app';\n}\nconst API_URL = getApiUrl();\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n  const [patientName, setPatientName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [apiStatus, setApiStatus] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [processingStage, setProcessingStage] = useState(null);\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\n  const [processedFiles, setProcessedFiles] = useState(0);\n  const [totalFiles, setTotalFiles] = useState(0);\n  const [dragOver, setDragOver] = useState(false);\n\n  // Estados para o divisor de PDF (modificados para múltiplos arquivos)\n  const [activeTab, setActiveTab] = useState('extractor'); // 'extractor' ou 'splitter'\n  const [selectedFilesForSplit, setSelectedFilesForSplit] = useState([]);\n  const [isSplitting, setIsSplitting] = useState(false);\n  const [splitError, setSplitError] = useState(null);\n  const [splitSuccess, setSplitSuccess] = useState(null);\n  const [splitFiles, setSplitFiles] = useState([]);\n  const [dragOverSplitter, setDragOverSplitter] = useState(false);\n  const [splittingProgress, setSplittingProgress] = useState({\n    current: 0,\n    total: 0,\n    fileName: ''\n  });\n\n  // NOVO: Estado para número de partes\n  const [splitParts, setSplitParts] = useState(2); // Padrão: 2 partes\n\n  const textAreaRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const splitFileInputRef = useRef(null);\n\n  // Função para carregar PDF-lib dinamicamente\n  const loadPDFLib = useCallback(async () => {\n    if (window.PDFLib) return window.PDFLib;\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js';\n    document.head.appendChild(script);\n    return new Promise((resolve, reject) => {\n      script.onload = () => {\n        if (window.PDFLib) {\n          resolve(window.PDFLib);\n        } else {\n          reject(new Error('Falha ao carregar PDF-lib'));\n        }\n      };\n      script.onerror = () => reject(new Error('Erro ao carregar PDF-lib'));\n    });\n  }, []);\n\n  // Verificar status da API ao carregar\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      setApiStatus({\n        status: 'checking',\n        message: 'Verificando conexão...',\n        url: API_URL\n      });\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Servidor indisponível',\n          error: error.message,\n          url: API_URL\n        });\n      }\n    };\n    checkApiStatus();\n  }, []);\n\n  // Função para reconectar com a API\n  const retryApiConnection = useCallback(() => {\n    setApiStatus({\n      status: 'checking',\n      message: 'Reconectando...',\n      url: API_URL\n    });\n    setTimeout(async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n          setError(null);\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Servidor indisponível',\n          url: API_URL\n        });\n      }\n    }, 1000);\n  }, []);\n\n  // Função para resetar o estado do extrator\n  const handleReset = useCallback(() => {\n    setSummaries([]);\n    setPatientName('');\n    setError(null);\n    setFiles([]);\n    setUploadStatus(null);\n    setProcessingStage(null);\n    setCurrentProcessingFile(null);\n    setProcessedFiles(0);\n    setTotalFiles(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Função para resetar o estado do divisor\n  const resetSplitter = useCallback(() => {\n    setSelectedFilesForSplit([]);\n    setSplitFiles([]);\n    setSplitError(null);\n    setSplitSuccess(null);\n    setSplittingProgress({\n      current: 0,\n      total: 0,\n      fileName: ''\n    });\n    setSplitParts(2); // Reset para valor padrão\n    if (splitFileInputRef.current) {\n      splitFileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Handlers para drag and drop do extrator\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    setDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    setDragOver(false);\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    setDragOver(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\n      setError('Por favor, solte apenas arquivos PDF válidos.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\n    setError(null);\n    setUploadStatus(null);\n    setProcessingStage(null);\n  }, []);\n\n  // Handlers para drag and drop do divisor (modificados para múltiplos arquivos)\n  const handleSplitterDragOver = useCallback(e => {\n    e.preventDefault();\n    setDragOverSplitter(true);\n  }, []);\n  const handleSplitterDragLeave = useCallback(e => {\n    e.preventDefault();\n    setDragOverSplitter(false);\n  }, []);\n  const handleSplitterDrop = useCallback(e => {\n    e.preventDefault();\n    setDragOverSplitter(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length > 0) {\n      setSelectedFilesForSplit(prevFiles => [...prevFiles, ...pdfFiles]);\n      setSplitError(null);\n      setSplitFiles([]);\n      setSplitSuccess(null);\n    } else if (droppedFiles.length > 0) {\n      setSplitError('Por favor, solte apenas arquivos PDF válidos.');\n      setTimeout(() => setSplitError(null), 3000);\n    }\n  }, []);\n  const handleFileChange = useCallback(e => {\n    const selectedFiles = Array.from(e.target.files);\n    setUploadStatus(null);\n    setProcessingStage(null);\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\n      setError('Por favor, selecione apenas arquivos PDF válidos.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\n    setError(null);\n  }, []);\n\n  // Modificado para múltiplos arquivos\n  const handleSplitFileChange = useCallback(e => {\n    const selectedFiles = Array.from(e.target.files);\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length > 0) {\n      setSelectedFilesForSplit(prevFiles => [...prevFiles, ...pdfFiles]);\n      setSplitError(null);\n      setSplitFiles([]);\n      setSplitSuccess(null);\n    } else if (selectedFiles.length > 0) {\n      setSplitError('Por favor, selecione apenas arquivos PDF válidos.');\n      setTimeout(() => setSplitError(null), 3000);\n    }\n  }, []);\n\n  // Função para remover arquivo do extrator\n  const removeFile = useCallback(index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  }, []);\n\n  // Função para remover arquivo do divisor\n  const removeSplitFile = useCallback(index => {\n    setSelectedFilesForSplit(prevFiles => prevFiles.filter((_, i) => i !== index));\n  }, []);\n\n  // Função para limpar todos os arquivos do extrator\n  const clearAllFiles = useCallback(() => {\n    setFiles([]);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Função para limpar todos os arquivos do divisor\n  const clearAllSplitFiles = useCallback(() => {\n    setSelectedFilesForSplit([]);\n    if (splitFileInputRef.current) {\n      splitFileInputRef.current.value = '';\n    }\n  }, []);\n\n  // MODIFICADO: Função para dividir um único PDF com número configurável de partes\n  const splitSinglePDF = useCallback(async (file, PDFLib, parts) => {\n    const arrayBuffer = await file.arrayBuffer();\n    const pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer);\n    const totalPages = pdfDoc.getPageCount();\n    if (totalPages < parts) {\n      throw new Error(`O PDF \"${file.name}\" deve ter pelo menos ${parts} páginas para ser dividido em ${parts} partes.`);\n    }\n    const pagesPerPart = Math.ceil(totalPages / parts);\n    const resultFiles = [];\n    for (let i = 0; i < parts; i++) {\n      const newPdf = await PDFLib.PDFDocument.create();\n      const startPage = i * pagesPerPart;\n      const endPage = Math.min(startPage + pagesPerPart, totalPages);\n      if (startPage < totalPages) {\n        const pageIndices = Array.from({\n          length: endPage - startPage\n        }, (_, index) => startPage + index);\n        const copiedPages = await newPdf.copyPages(pdfDoc, pageIndices);\n        copiedPages.forEach(page => newPdf.addPage(page));\n        const pdfBytes = await newPdf.save();\n        const originalName = file.name.replace('.pdf', '');\n        const fileName = `${originalName}_parte${i + 1}de${parts}.pdf`;\n        resultFiles.push({\n          name: fileName,\n          bytes: pdfBytes,\n          pages: endPage - startPage,\n          blob: new Blob([pdfBytes], {\n            type: 'application/pdf'\n          }),\n          originalFile: file.name,\n          partNumber: i + 1,\n          totalParts: parts\n        });\n      }\n    }\n    return resultFiles;\n  }, []);\n\n  // MODIFICADO: Função principal para dividir PDFs (agora usa splitParts)\n  const splitPDFs = useCallback(async () => {\n    if (selectedFilesForSplit.length === 0) {\n      setSplitError('Por favor, selecione pelo menos um arquivo PDF primeiro.');\n      return;\n    }\n    setIsSplitting(true);\n    setSplitError(null);\n    setSplitSuccess(null);\n    setSplitFiles([]);\n    setSplittingProgress({\n      current: 0,\n      total: selectedFilesForSplit.length,\n      fileName: ''\n    });\n    try {\n      const PDFLib = await loadPDFLib();\n      const allSplitFiles = [];\n      const errors = [];\n      for (let i = 0; i < selectedFilesForSplit.length; i++) {\n        const file = selectedFilesForSplit[i];\n        setSplittingProgress({\n          current: i + 1,\n          total: selectedFilesForSplit.length,\n          fileName: file.name\n        });\n        try {\n          const splitResults = await splitSinglePDF(file, PDFLib, splitParts);\n          allSplitFiles.push(...splitResults);\n        } catch (error) {\n          console.error(`Erro ao dividir ${file.name}:`, error);\n          errors.push({\n            fileName: file.name,\n            error: error.message\n          });\n        }\n      }\n      setSplitFiles(allSplitFiles);\n      if (errors.length === 0) {\n        setSplitSuccess(`Todos os ${selectedFilesForSplit.length} PDFs foram divididos em ${splitParts} partes com sucesso! ` + `Total de ${allSplitFiles.length} arquivos gerados.`);\n      } else if (allSplitFiles.length > 0) {\n        setSplitSuccess(`${selectedFilesForSplit.length - errors.length} de ${selectedFilesForSplit.length} PDFs foram divididos com sucesso. ` + `Total de ${allSplitFiles.length} arquivos gerados.`);\n        setSplitError(`Alguns arquivos não puderam ser processados:\\n${errors.map(e => `• ${e.fileName}: ${e.error}`).join('\\n')}`);\n      } else {\n        setSplitError(`Nenhum arquivo pôde ser processado:\\n${errors.map(e => `• ${e.fileName}: ${e.error}`).join('\\n')}`);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar PDF-lib:', error);\n      setSplitError('Erro ao carregar a biblioteca de processamento de PDF. Tente recarregar a página.');\n    } finally {\n      setIsSplitting(false);\n      setSplittingProgress({\n        current: 0,\n        total: 0,\n        fileName: ''\n      });\n    }\n  }, [selectedFilesForSplit, loadPDFLib, splitSinglePDF, splitParts]);\n\n  // Função para download de arquivo\n  const downloadFile = useCallback(fileData => {\n    const url = URL.createObjectURL(fileData.blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = fileData.name;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }, []);\n\n  // Função para download de todos os arquivos\n  const downloadAll = useCallback(() => {\n    splitFiles.forEach((fileData, index) => {\n      setTimeout(() => downloadFile(fileData), index * 100);\n    });\n  }, [splitFiles, downloadFile]);\n\n  // Função principal de upload e processamento (existente)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (files.length === 0) {\n      setError('Por favor, selecione pelo menos um arquivo PDF válido.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setUploadStatus({\n      stage: 'iniciando',\n      message: 'Iniciando processamento...',\n      timestamp: new Date().toLocaleTimeString()\n    });\n    setProcessingStage('upload');\n    setTotalFiles(files.length);\n    setProcessedFiles(0);\n    const allSummaries = [];\n    const fileErrors = [];\n    const patientNames = {};\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const fileNumber = i + 1;\n      setCurrentProcessingFile(file.name);\n      try {\n        const formData = new FormData();\n        formData.append('pdf', file);\n        setUploadStatus({\n          stage: 'enviando',\n          message: `Enviando ${fileNumber}/${files.length}: ${file.name.substring(0, 30)}${file.name.length > 30 ? '...' : ''}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        const response = await fetch(`${API_URL}/api/upload`, {\n          method: 'POST',\n          body: formData\n        });\n        setProcessingStage('processing');\n        setUploadStatus({\n          stage: 'processando',\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        if (!response.ok) {\n          let errorMessage = `Erro ${response.status}: ${response.statusText}`;\n          try {\n            const errorData = await response.json();\n            if (errorData.message) {\n              errorMessage = errorData.message;\n            }\n          } catch (jsonError) {}\n          throw new Error(`Erro no arquivo ${file.name}: ${errorMessage}`);\n        }\n        const data = await response.json();\n        if (!data.summaries || data.summaries.length === 0) {\n          throw new Error(`Não foi possível extrair informações do documento ${file.name}.`);\n        }\n        if (data.patientName) {\n          patientNames[file.name] = data.patientName;\n        }\n        const fileSummaries = data.summaries.map(summary => ({\n          ...summary,\n          fileName: file.name,\n          patientName: data.patientName,\n          processedAt: new Date().toLocaleTimeString()\n        }));\n        allSummaries.push(...fileSummaries);\n        if (i === 0 && data.patientName) {\n          setPatientName(data.patientName);\n        }\n        setProcessedFiles(i + 1);\n      } catch (error) {\n        console.error(`Erro ao processar ${file.name}:`, error);\n        fileErrors.push({\n          fileName: file.name,\n          error: error.message,\n          timestamp: new Date().toLocaleTimeString()\n        });\n      }\n    }\n    setProcessingStage('complete');\n    if (allSummaries.length > 0) {\n      setSummaries(allSummaries);\n      if (fileErrors.length > 0) {\n        setUploadStatus({\n          stage: 'aviso',\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n        setError(`Alguns arquivos não puderam ser processados:\\n\\n${errorMessage}`);\n      } else {\n        setUploadStatus({\n          stage: 'sucesso',\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        setError(null);\n      }\n    } else {\n      setUploadStatus({\n        stage: 'erro',\n        message: 'Nenhum resultado foi extraído dos arquivos.',\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\n        timestamp: new Date().toLocaleTimeString()\n      });\n      const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n      setError(`Falha ao processar todos os arquivos:\\n\\n${errorMessage}`);\n    }\n    setLoading(false);\n    setCurrentProcessingFile(null);\n  };\n\n  // Gerar texto formatado para cópia\n  const getSimplifiedTextForCopy = useCallback(() => {\n    if (summaries.length === 0) return '';\n    const resultsByFile = {};\n    summaries.forEach(summary => {\n      const fileName = summary.fileName || 'arquivo_desconhecido';\n      if (!resultsByFile[fileName]) {\n        resultsByFile[fileName] = {\n          patientName: summary.patientName || patientName || \"Paciente\",\n          results: [],\n          processedAt: summary.processedAt\n        };\n      }\n      const lines = summary.content.split('\\n');\n      lines.forEach(line => {\n        if (line.trim() && !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && !line.match(/^Paciente:/i)) {\n          resultsByFile[fileName].results.push(line.trim());\n        }\n      });\n    });\n    let formattedText = '';\n    let isFirstFile = true;\n    Object.keys(resultsByFile).forEach(fileName => {\n      if (!isFirstFile) {\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\n      } else {\n        isFirstFile = false;\n      }\n      const fileData = resultsByFile[fileName];\n      if (fileData.patientName) {\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\n        if (fileData.processedAt) {\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\n        }\n        formattedText += '\\n';\n      }\n      const uniqueResults = [...new Set(fileData.results)];\n      uniqueResults.forEach(result => {\n        formattedText += `${result}\\n`;\n      });\n    });\n    return formattedText;\n  }, [summaries, patientName]);\n  const copyToClipboard = useCallback(async () => {\n    if (textAreaRef.current) {\n      try {\n        if (navigator.clipboard && window.isSecureContext) {\n          await navigator.clipboard.writeText(textAreaRef.current.value);\n        } else {\n          textAreaRef.current.select();\n          document.execCommand('copy');\n        }\n        const originalText = textAreaRef.current.value;\n        textAreaRef.current.value = 'Resultados copiados com sucesso!';\n        textAreaRef.current.style.background = '#f0fdf4';\n        textAreaRef.current.style.color = '#166534';\n        setTimeout(() => {\n          textAreaRef.current.value = originalText;\n          textAreaRef.current.style.background = '';\n          textAreaRef.current.style.color = '';\n        }, 2000);\n      } catch (err) {\n        console.error('Erro ao copiar:', err);\n        const originalText = textAreaRef.current.value;\n        textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\n        textAreaRef.current.style.background = '#fef2f2';\n        textAreaRef.current.style.color = '#dc2626';\n        setTimeout(() => {\n          textAreaRef.current.value = originalText;\n          textAreaRef.current.style.background = '';\n          textAreaRef.current.style.color = '';\n        }, 3000);\n      }\n    }\n  }, []);\n\n  // Calcular progresso\n  const calculateProgress = useCallback(() => {\n    if (totalFiles === 0) return 0;\n    return Math.round(processedFiles / totalFiles * 100);\n  }, [processedFiles, totalFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"institute-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Instituto Paulo Godoi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sistema de Processamento de Documentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Extra\\xE7\\xE3o de resultados e ferramentas para PDFs laboratoriais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this), apiStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `api-status ${apiStatus.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this), apiStatus.status === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Conectado (\", apiStatus.env, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 15\n        }, this) : apiStatus.status === 'checking' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Verificando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [apiStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: retryApiConnection,\n            children: \"Tentar novamente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [((apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'offline' || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'error') && activeTab === 'extractor' && /*#__PURE__*/_jsxDEV(ErrorHandler, {\n        error: `Não foi possível conectar ao servidor. ${apiStatus.message}`,\n        onRetry: retryApiConnection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'extractor' ? 'active' : ''}`,\n          onClick: () => setActiveTab('extractor'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tab-icon\",\n            children: \"\\uD83D\\uDCCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this), \"Extrator de Resultados\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'splitter' ? 'active' : ''}`,\n          onClick: () => setActiveTab('splitter'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tab-icon\",\n            children: \"\\u2702\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this), \"Divisor de PDF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 9\n      }, this), activeTab === 'extractor' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size-warning-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning-icon\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Limite de Tamanho para Extra\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"PDFs com mais de 4MB precisam ser divididos antes da extra\\xE7\\xE3o.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Use a aba \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"tab-link-button\",\n                onClick: () => setActiveTab('splitter'),\n                children: \"\\u2702\\uFE0F Divisor de PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 29\n              }, this), \" para cortar arquivos grandes em partes menores.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `uploader-container ${dragOver ? 'drag-over' : ''}`,\n          onDragOver: handleDragOver,\n          onDragLeave: handleDragLeave,\n          onDrop: handleDrop,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"pdf-upload\",\n                ref: fileInputRef,\n                onChange: handleFileChange,\n                accept: \"application/pdf\",\n                multiple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pdf-upload\",\n                className: `file-label ${dragOver ? 'drag-active' : ''}`,\n                children: dragOver ? 'Solte os arquivos PDF aqui' : files.length > 0 ? `${files.length} arquivo(s) selecionado(s)` : 'Escolher arquivos PDF ou arrastar aqui'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 17\n            }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Arquivos Selecionados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"files-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"clear-files-button\",\n                  onClick: clearAllFiles,\n                  disabled: loading,\n                  children: \"Remover todos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"selected-files-list\",\n                children: files.map((file, index) => {\n                  const fileSizeMB = file.size / 1024 / 1024;\n                  const isOverLimit = fileSizeMB > 4;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `file-item ${isOverLimit ? 'file-over-limit' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-name\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"pdf-icon\",\n                        children: \"\\uD83D\\uDCC4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 763,\n                        columnNumber: 31\n                      }, this), file.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `file-size ${isOverLimit ? 'size-warning' : ''}`,\n                        children: [\"(\", fileSizeMB.toFixed(1), \" MB)\", isOverLimit && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"size-alert\",\n                          children: \"\\u26A0\\uFE0F Muito grande\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 767,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 765,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"remove-file-button\",\n                      onClick: () => removeFile(index),\n                      disabled: loading,\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 770,\n                      columnNumber: 29\n                    }, this)]\n                  }, `${file.name}-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 21\n              }, this), files.some(file => file.size / 1024 / 1024 > 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-size-alert\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"alert-icon\",\n                  children: \"\\u26A0\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Arquivos muito grandes detectados!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"PDFs com mais de 4MB podem falhar na extra\\xE7\\xE3o.\", /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"alert-link-button\",\n                      onClick: () => setActiveTab('splitter'),\n                      children: \"Clique aqui para dividir os arquivos grandes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 788,\n                      columnNumber: 30\n                    }, this), \" antes de extrair os resultados.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: `upload-button ${loading ? 'loading' : ''}`,\n              disabled: files.length === 0 || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) !== 'online' || loading,\n              children: loading ? 'Processando...' : 'Extrair Resultados'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 15\n          }, this), (processingStage === 'upload' || processingStage === 'processing') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-indicator\",\n                style: {\n                  width: `${calculateProgress()}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-status\",\n              children: currentProcessingFile ? `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${currentProcessingFile.length > 30 ? currentProcessingFile.substring(0, 30) + '...' : currentProcessingFile} (${processedFiles + 1}/${totalFiles})` : processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 17\n          }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `upload-status ${uploadStatus.stage}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-icon\",\n              children: uploadStatus.stage === 'sucesso' ? '✓' : uploadStatus.stage === 'erro' ? '✗' : uploadStatus.stage === 'aviso' ? '!' : '⟳'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-message\",\n                children: uploadStatus.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 21\n              }, this), uploadStatus.details && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-details\",\n                children: uploadStatus.details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 23\n              }, this), uploadStatus.timestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-timestamp\",\n                children: uploadStatus.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 17\n          }, this), uploadStatus && uploadStatus.stage === 'erro' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pdf-tips\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Poss\\xEDveis solu\\xE7\\xF5es:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Verifique se os PDFs n\\xE3o est\\xE3o protegidos por senha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Tente salvar os PDFs novamente usando \\\"Salvar como\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Se poss\\xEDvel, imprima os documentos para novos PDFs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Entre em contato com o laborat\\xF3rio para vers\\xF5es alternativas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 17\n          }, this), uploadStatus && uploadStatus.stage === 'aviso' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processing-notice\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Os documentos foram processados, mas alguns podem conter imprecis\\xF5es.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Verifique os resultados antes de usar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this), loading && !processingStage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading\",\n          children: \"Processando documentos, aguarde...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 15\n        }, this), error && !uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 15\n        }, this), error && uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-errors\",\n          children: /*#__PURE__*/_jsxDEV(\"details\", {\n            children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n              children: \"Detalhes dos erros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"error-details\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 15\n        }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reset-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-button\",\n            onClick: handleReset,\n            disabled: loading,\n            children: \"Processar novos documentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-container\",\n          children: summaries.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Os resultados dos exames aparecer\\xE3o aqui.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Selecione arquivos PDF para come\\xE7ar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-view-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Resultados Extra\\xEDdos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 19\n            }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-count\",\n                children: [summaries.length, \" resultados extra\\xEDdos\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 23\n              }, this), files.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"multi-file-notice\",\n                children: [\"de \", files.length, \" arquivos\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"extraction-time\",\n                children: [\"\\xE0s \", new Date().toLocaleTimeString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"copy-instructions\",\n              children: \"Lista de resultados pronta para copiar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-area-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: textAreaRef,\n                className: \"results-text-area\",\n                value: getSimplifiedTextForCopy(),\n                readOnly: true,\n                placeholder: \"Os resultados aparecer\\xE3o aqui...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: copyToClipboard,\n                className: \"copy-button\",\n                disabled: summaries.length === 0,\n                children: \"Copiar para \\xE1rea de transfer\\xEAncia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeTab === 'splitter' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-splitter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"splitter-intro\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"section-icon\",\n              children: \"\\u2702\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 17\n            }, this), \"Divisor de PDF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Divida m\\xFAltiplos PDFs grandes em partes menores para extra\\xE7\\xE3o.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 17\n            }, this), \"Arquivos com mais de 4MB devem ser divididos antes de usar o extrator de resultados.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 955,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"splitter-benefits\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"benefit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"benefit-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Processe v\\xE1rios PDFs de uma s\\xF3 vez\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"benefit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"benefit-icon\",\n                children: \"\\uD83D\\uDD12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Processamento 100% local e seguro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"benefit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"benefit-icon\",\n                children: \"\\u26A1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Divis\\xE3o r\\xE1pida e autom\\xE1tica\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-options-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"split-options-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"options-icon\",\n              children: \"\\u2699\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 17\n            }, this), \"Configura\\xE7\\xF5es de Divis\\xE3o\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-parts-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"parts-label\",\n              children: \"Dividir cada PDF em:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parts-buttons-container\",\n              children: [2, 3, 4].map(parts => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `parts-button ${splitParts === parts ? 'active' : ''}`,\n                onClick: () => setSplitParts(parts),\n                disabled: isSplitting,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"parts-number\",\n                  children: parts\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"parts-text\",\n                  children: \"partes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 993,\n                  columnNumber: 23\n                }, this)]\n              }, parts, true, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parts-explanation\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"explanation-icon\",\n                children: \"\\u2139\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"explanation-text\",\n                children: [splitParts === 2 && \"Divide cada PDF pela metade\", splitParts === 3 && \"Divide cada PDF em 3 partes iguais\", splitParts === 4 && \"Divide cada PDF em 4 partes iguais\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `splitter-uploader-container ${dragOverSplitter ? 'drag-over' : ''}`,\n          onDragOver: handleSplitterDragOver,\n          onDragLeave: handleSplitterDragLeave,\n          onDrop: handleSplitterDrop,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"pdf-split-upload\",\n            ref: splitFileInputRef,\n            onChange: handleSplitFileChange,\n            accept: \"application/pdf\",\n            multiple: true,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pdf-split-upload\",\n            className: `splitter-file-label ${dragOverSplitter ? 'drag-active' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"splitter-upload-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"splitter-upload-icon\",\n                children: selectedFilesForSplit.length > 0 ? '✓' : '📎'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 19\n              }, this), selectedFilesForSplit.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-files-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"selected-files-count\",\n                  children: [selectedFilesForSplit.length, \" arquivo\", selectedFilesForSplit.length > 1 ? 's' : '', \" selecionado\", selectedFilesForSplit.length > 1 ? 's' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1031,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"selected-files-size\",\n                  children: [\"Total: \", (selectedFilesForSplit.reduce((acc, file) => acc + file.size, 0) / 1024 / 1024).toFixed(1), \" MB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1034,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 21\n              }, this) : dragOverSplitter ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"drag-message\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Solte os arquivos PDF aqui\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-message\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Selecione ou arraste arquivos PDF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"upload-hint\",\n                  children: \"Clique aqui ou arraste e solte seus PDFs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1045,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 15\n          }, this), selectedFilesForSplit.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-split-files-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Arquivos para Dividir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"split-files-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"clear-split-files-button\",\n                onClick: clearAllSplitFiles,\n                disabled: isSplitting,\n                children: \"Remover todos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1055,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"selected-split-files-list\",\n              children: selectedFilesForSplit.map((file, index) => {\n                const fileSizeMB = file.size / 1024 / 1024;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"split-file-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"split-file-name\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"pdf-icon\",\n                      children: \"\\uD83D\\uDCC4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1071,\n                      columnNumber: 29\n                    }, this), file.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"split-file-size\",\n                      children: [\"(\", fileSizeMB.toFixed(1), \" MB)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1073,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"remove-split-file-button\",\n                    onClick: () => removeSplitFile(index),\n                    disabled: isSplitting,\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1077,\n                    columnNumber: 27\n                  }, this)]\n                }, `split-${file.name}-${index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"splitter-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: splitPDFs,\n              disabled: selectedFilesForSplit.length === 0 || isSplitting,\n              className: `split-button ${isSplitting ? 'loading' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-icon\",\n                children: \"\\u2702\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 19\n              }, this), isSplitting ? `Dividindo ${splittingProgress.current}/${splittingProgress.total}...` : `Dividir em ${splitParts} partes (${selectedFilesForSplit.length} PDF${selectedFilesForSplit.length > 1 ? 's' : ''})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 17\n            }, this), selectedFilesForSplit.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetSplitter,\n              className: \"reset-splitter-button\",\n              disabled: isSplitting,\n              children: \"Limpar Sele\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 13\n        }, this), isSplitting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-processing\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processing-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processing-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"processing-text\",\n              children: [\"Processando: \", splittingProgress.fileName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"processing-progress\",\n              children: [splittingProgress.current, \" de \", splittingProgress.total, \" arquivos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 15\n        }, this), splitError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-icon\",\n            children: \"\\u2717\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"error-text\",\n            children: splitError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1135,\n          columnNumber: 15\n        }, this), splitSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-icon\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-text\",\n            children: splitSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 15\n        }, this), splitFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-results-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"results-icon\",\n                children: \"\\uD83D\\uDCC1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1154,\n                columnNumber: 21\n              }, this), \"Arquivos Gerados (\", splitFiles.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadAll,\n              className: \"download-all-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-icon\",\n                children: \"\\u2B07\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1161,\n                columnNumber: 21\n              }, this), \"Baixar Todos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-files-grid\",\n            children: splitFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"split-file-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-card-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-card-icon\",\n                  children: \"\\uD83D\\uDCC4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1170,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-card-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"file-card-name\",\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1172,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-card-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-card-pages\",\n                      children: [file.pages, \" p\\xE1ginas\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1174,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-card-part\",\n                      children: [\"Parte \", file.partNumber, \" de \", file.totalParts]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1175,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1173,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-card-original\",\n                    children: [\"De: \", file.originalFile]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1177,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1171,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => downloadFile(file),\n                className: \"download-file-button\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"button-icon\",\n                  children: \"\\u2B07\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1184,\n                  columnNumber: 25\n                }, this), \"Download\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1180,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-actions-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetSplitter,\n              className: \"new-split-button\",\n              children: \"Dividir outros PDFs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1192,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"splitter-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Como funciona:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Selecione um ou mais arquivos PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Escolha em quantas partes dividir (2, 3 ou 4)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cada PDF ser\\xE1 dividido no n\\xFAmero de partes selecionado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Se o PDF tiver p\\xE1ginas que n\\xE3o dividem igualmente, algumas partes ter\\xE3o uma p\\xE1gina extra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Os arquivos s\\xE3o processados localmente no seu navegador (sem upload para servidor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Seus dados permanecem seguros e privados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Processe m\\xFAltiplos arquivos de uma vez para economizar tempo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"api-info\",\n        children: [\"Ambiente: \", (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.env) || 'Desconectado', \" | API: \", API_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 637,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t6d5mt7uxqy+GE9TL6GtgdjMjKM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","ErrorHandler","jsxDEV","_jsxDEV","Fragment","_Fragment","getApiUrl","window","location","hostname","API_URL","App","_s","files","setFiles","summaries","setSummaries","patientName","setPatientName","loading","setLoading","error","setError","apiStatus","setApiStatus","uploadStatus","setUploadStatus","processingStage","setProcessingStage","currentProcessingFile","setCurrentProcessingFile","processedFiles","setProcessedFiles","totalFiles","setTotalFiles","dragOver","setDragOver","activeTab","setActiveTab","selectedFilesForSplit","setSelectedFilesForSplit","isSplitting","setIsSplitting","splitError","setSplitError","splitSuccess","setSplitSuccess","splitFiles","setSplitFiles","dragOverSplitter","setDragOverSplitter","splittingProgress","setSplittingProgress","current","total","fileName","splitParts","setSplitParts","textAreaRef","fileInputRef","splitFileInputRef","loadPDFLib","PDFLib","script","document","createElement","src","head","appendChild","Promise","resolve","reject","onload","Error","onerror","checkApiStatus","status","message","url","response","fetch","ok","data","json","env","retryApiConnection","setTimeout","handleReset","value","resetSplitter","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","droppedFiles","Array","from","dataTransfer","pdfFiles","filter","file","type","length","prevFiles","handleSplitterDragOver","handleSplitterDragLeave","handleSplitterDrop","handleFileChange","selectedFiles","target","handleSplitFileChange","removeFile","index","_","i","removeSplitFile","clearAllFiles","clearAllSplitFiles","splitSinglePDF","parts","arrayBuffer","pdfDoc","PDFDocument","load","totalPages","getPageCount","name","pagesPerPart","Math","ceil","resultFiles","newPdf","create","startPage","endPage","min","pageIndices","copiedPages","copyPages","forEach","page","addPage","pdfBytes","save","originalName","replace","push","bytes","pages","blob","Blob","originalFile","partNumber","totalParts","splitPDFs","allSplitFiles","errors","splitResults","console","map","join","downloadFile","fileData","URL","createObjectURL","link","href","download","body","click","removeChild","revokeObjectURL","downloadAll","handleSubmit","stage","timestamp","Date","toLocaleTimeString","allSummaries","fileErrors","patientNames","fileNumber","formData","FormData","append","substring","method","errorMessage","statusText","errorData","jsonError","fileSummaries","summary","processedAt","details","err","getSimplifiedTextForCopy","resultsByFile","results","lines","content","split","line","trim","match","formattedText","isFirstFile","Object","keys","uniqueResults","Set","result","copyToClipboard","navigator","clipboard","isSecureContext","writeText","select","execCommand","originalText","style","background","color","calculateProgress","round","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onRetry","onDragOver","onDragLeave","onDrop","onSubmit","id","ref","onChange","accept","multiple","htmlFor","disabled","fileSizeMB","size","isOverLimit","toFixed","some","width","readOnly","placeholder","display","reduce","acc","_c","$RefreshReg$"],"sources":["C:/Users/confi/Downloads/pdf-summarizer/client/src/App.js"],"sourcesContent":["// App.js - Versão com Divisor de PDF Configurável (1, 2, 3 ou 4 partes)\r\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport ErrorHandler from './components/ErrorHandler';\r\n\r\n// Função para determinar a URL da API baseada no ambiente\r\nfunction getApiUrl() {\r\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n    return 'http://localhost:5000';\r\n  }\r\n   return 'https://server-theta-murex.vercel.app';\r\n}\r\n\r\nconst API_URL = getApiUrl();\r\n\r\nfunction App() {\r\n  const [files, setFiles] = useState([]);\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [patientName, setPatientName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [apiStatus, setApiStatus] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [processingStage, setProcessingStage] = useState(null);\r\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\r\n  const [processedFiles, setProcessedFiles] = useState(0);\r\n  const [totalFiles, setTotalFiles] = useState(0);\r\n  const [dragOver, setDragOver] = useState(false);\r\n  \r\n  // Estados para o divisor de PDF (modificados para múltiplos arquivos)\r\n  const [activeTab, setActiveTab] = useState('extractor'); // 'extractor' ou 'splitter'\r\n  const [selectedFilesForSplit, setSelectedFilesForSplit] = useState([]);\r\n  const [isSplitting, setIsSplitting] = useState(false);\r\n  const [splitError, setSplitError] = useState(null);\r\n  const [splitSuccess, setSplitSuccess] = useState(null);\r\n  const [splitFiles, setSplitFiles] = useState([]);\r\n  const [dragOverSplitter, setDragOverSplitter] = useState(false);\r\n  const [splittingProgress, setSplittingProgress] = useState({ current: 0, total: 0, fileName: '' });\r\n  \r\n  // NOVO: Estado para número de partes\r\n  const [splitParts, setSplitParts] = useState(2); // Padrão: 2 partes\r\n  \r\n  const textAreaRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const splitFileInputRef = useRef(null);\r\n\r\n  // Função para carregar PDF-lib dinamicamente\r\n  const loadPDFLib = useCallback(async () => {\r\n    if (window.PDFLib) return window.PDFLib;\r\n    \r\n    const script = document.createElement('script');\r\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js';\r\n    document.head.appendChild(script);\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      script.onload = () => {\r\n        if (window.PDFLib) {\r\n          resolve(window.PDFLib);\r\n        } else {\r\n          reject(new Error('Falha ao carregar PDF-lib'));\r\n        }\r\n      };\r\n      script.onerror = () => reject(new Error('Erro ao carregar PDF-lib'));\r\n    });\r\n  }, []);\r\n\r\n  // Verificar status da API ao carregar\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      setApiStatus({ status: 'checking', message: 'Verificando conexão...', url: API_URL });\r\n      \r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({\r\n            status: 'online',\r\n            env: data.env,\r\n            url: API_URL\r\n          });\r\n        } else {\r\n          setApiStatus({\r\n            status: 'error',\r\n            message: `Erro ${response.status}`,\r\n            url: API_URL\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({\r\n          status: 'offline',\r\n          message: 'Servidor indisponível',\r\n          error: error.message,\r\n          url: API_URL\r\n        });\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  // Função para reconectar com a API\r\n  const retryApiConnection = useCallback(() => {\r\n    setApiStatus({ status: 'checking', message: 'Reconectando...', url: API_URL });\r\n    setTimeout(async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({ status: 'online', env: data.env, url: API_URL });\r\n          setError(null);\r\n        } else {\r\n          setApiStatus({ status: 'error', message: `Erro ${response.status}`, url: API_URL });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({ status: 'offline', message: 'Servidor indisponível', url: API_URL });\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  // Função para resetar o estado do extrator\r\n  const handleReset = useCallback(() => {\r\n    setSummaries([]);\r\n    setPatientName('');\r\n    setError(null);\r\n    setFiles([]);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n    setCurrentProcessingFile(null);\r\n    setProcessedFiles(0);\r\n    setTotalFiles(0);\r\n    \r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Função para resetar o estado do divisor\r\n  const resetSplitter = useCallback(() => {\r\n    setSelectedFilesForSplit([]);\r\n    setSplitFiles([]);\r\n    setSplitError(null);\r\n    setSplitSuccess(null);\r\n    setSplittingProgress({ current: 0, total: 0, fileName: '' });\r\n    setSplitParts(2); // Reset para valor padrão\r\n    if (splitFileInputRef.current) {\r\n      splitFileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Handlers para drag and drop do extrator\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\r\n      setError('Por favor, solte apenas arquivos PDF válidos.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\r\n    setError(null);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n  }, []);\r\n\r\n  // Handlers para drag and drop do divisor (modificados para múltiplos arquivos)\r\n  const handleSplitterDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOverSplitter(true);\r\n  }, []);\r\n\r\n  const handleSplitterDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOverSplitter(false);\r\n  }, []);\r\n\r\n  const handleSplitterDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOverSplitter(false);\r\n    \r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length > 0) {\r\n      setSelectedFilesForSplit(prevFiles => [...prevFiles, ...pdfFiles]);\r\n      setSplitError(null);\r\n      setSplitFiles([]);\r\n      setSplitSuccess(null);\r\n    } else if (droppedFiles.length > 0) {\r\n      setSplitError('Por favor, solte apenas arquivos PDF válidos.');\r\n      setTimeout(() => setSplitError(null), 3000);\r\n    }\r\n  }, []);\r\n\r\n  const handleFileChange = useCallback((e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n    \r\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\r\n      setError('Por favor, selecione apenas arquivos PDF válidos.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\r\n    setError(null);\r\n  }, []);\r\n\r\n  // Modificado para múltiplos arquivos\r\n  const handleSplitFileChange = useCallback((e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length > 0) {\r\n      setSelectedFilesForSplit(prevFiles => [...prevFiles, ...pdfFiles]);\r\n      setSplitError(null);\r\n      setSplitFiles([]);\r\n      setSplitSuccess(null);\r\n    } else if (selectedFiles.length > 0) {\r\n      setSplitError('Por favor, selecione apenas arquivos PDF válidos.');\r\n      setTimeout(() => setSplitError(null), 3000);\r\n    }\r\n  }, []);\r\n\r\n  // Função para remover arquivo do extrator\r\n  const removeFile = useCallback((index) => {\r\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  // Função para remover arquivo do divisor\r\n  const removeSplitFile = useCallback((index) => {\r\n    setSelectedFilesForSplit(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  // Função para limpar todos os arquivos do extrator\r\n  const clearAllFiles = useCallback(() => {\r\n    setFiles([]);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Função para limpar todos os arquivos do divisor\r\n  const clearAllSplitFiles = useCallback(() => {\r\n    setSelectedFilesForSplit([]);\r\n    if (splitFileInputRef.current) {\r\n      splitFileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // MODIFICADO: Função para dividir um único PDF com número configurável de partes\r\n  const splitSinglePDF = useCallback(async (file, PDFLib, parts) => {\r\n    const arrayBuffer = await file.arrayBuffer();\r\n    const pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer);\r\n    \r\n    const totalPages = pdfDoc.getPageCount();\r\n    \r\n    if (totalPages < parts) {\r\n      throw new Error(`O PDF \"${file.name}\" deve ter pelo menos ${parts} páginas para ser dividido em ${parts} partes.`);\r\n    }\r\n\r\n    const pagesPerPart = Math.ceil(totalPages / parts);\r\n    const resultFiles = [];\r\n\r\n    for (let i = 0; i < parts; i++) {\r\n      const newPdf = await PDFLib.PDFDocument.create();\r\n      const startPage = i * pagesPerPart;\r\n      const endPage = Math.min(startPage + pagesPerPart, totalPages);\r\n      \r\n      if (startPage < totalPages) {\r\n        const pageIndices = Array.from({ length: endPage - startPage }, (_, index) => startPage + index);\r\n        const copiedPages = await newPdf.copyPages(pdfDoc, pageIndices);\r\n        copiedPages.forEach(page => newPdf.addPage(page));\r\n\r\n        const pdfBytes = await newPdf.save();\r\n        const originalName = file.name.replace('.pdf', '');\r\n        const fileName = `${originalName}_parte${i + 1}de${parts}.pdf`;\r\n\r\n        resultFiles.push({\r\n          name: fileName,\r\n          bytes: pdfBytes,\r\n          pages: endPage - startPage,\r\n          blob: new Blob([pdfBytes], { type: 'application/pdf' }),\r\n          originalFile: file.name,\r\n          partNumber: i + 1,\r\n          totalParts: parts\r\n        });\r\n      }\r\n    }\r\n\r\n    return resultFiles;\r\n  }, []);\r\n\r\n  // MODIFICADO: Função principal para dividir PDFs (agora usa splitParts)\r\n  const splitPDFs = useCallback(async () => {\r\n    if (selectedFilesForSplit.length === 0) {\r\n      setSplitError('Por favor, selecione pelo menos um arquivo PDF primeiro.');\r\n      return;\r\n    }\r\n\r\n    setIsSplitting(true);\r\n    setSplitError(null);\r\n    setSplitSuccess(null);\r\n    setSplitFiles([]);\r\n    setSplittingProgress({ current: 0, total: selectedFilesForSplit.length, fileName: '' });\r\n\r\n    try {\r\n      const PDFLib = await loadPDFLib();\r\n      const allSplitFiles = [];\r\n      const errors = [];\r\n\r\n      for (let i = 0; i < selectedFilesForSplit.length; i++) {\r\n        const file = selectedFilesForSplit[i];\r\n        setSplittingProgress({ \r\n          current: i + 1, \r\n          total: selectedFilesForSplit.length, \r\n          fileName: file.name \r\n        });\r\n\r\n        try {\r\n          const splitResults = await splitSinglePDF(file, PDFLib, splitParts);\r\n          allSplitFiles.push(...splitResults);\r\n        } catch (error) {\r\n          console.error(`Erro ao dividir ${file.name}:`, error);\r\n          errors.push({ fileName: file.name, error: error.message });\r\n        }\r\n      }\r\n\r\n      setSplitFiles(allSplitFiles);\r\n\r\n      if (errors.length === 0) {\r\n        setSplitSuccess(\r\n          `Todos os ${selectedFilesForSplit.length} PDFs foram divididos em ${splitParts} partes com sucesso! ` +\r\n          `Total de ${allSplitFiles.length} arquivos gerados.`\r\n        );\r\n      } else if (allSplitFiles.length > 0) {\r\n        setSplitSuccess(\r\n          `${selectedFilesForSplit.length - errors.length} de ${selectedFilesForSplit.length} PDFs foram divididos com sucesso. ` +\r\n          `Total de ${allSplitFiles.length} arquivos gerados.`\r\n        );\r\n        setSplitError(\r\n          `Alguns arquivos não puderam ser processados:\\n${errors.map(e => `• ${e.fileName}: ${e.error}`).join('\\n')}`\r\n        );\r\n      } else {\r\n        setSplitError(\r\n          `Nenhum arquivo pôde ser processado:\\n${errors.map(e => `• ${e.fileName}: ${e.error}`).join('\\n')}`\r\n        );\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao carregar PDF-lib:', error);\r\n      setSplitError('Erro ao carregar a biblioteca de processamento de PDF. Tente recarregar a página.');\r\n    } finally {\r\n      setIsSplitting(false);\r\n      setSplittingProgress({ current: 0, total: 0, fileName: '' });\r\n    }\r\n  }, [selectedFilesForSplit, loadPDFLib, splitSinglePDF, splitParts]);\r\n\r\n  // Função para download de arquivo\r\n  const downloadFile = useCallback((fileData) => {\r\n    const url = URL.createObjectURL(fileData.blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = fileData.name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  }, []);\r\n\r\n  // Função para download de todos os arquivos\r\n  const downloadAll = useCallback(() => {\r\n    splitFiles.forEach((fileData, index) => {\r\n      setTimeout(() => downloadFile(fileData), index * 100);\r\n    });\r\n  }, [splitFiles, downloadFile]);\r\n\r\n  // Função principal de upload e processamento (existente)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (files.length === 0) {\r\n      setError('Por favor, selecione pelo menos um arquivo PDF válido.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setUploadStatus({ \r\n      stage: 'iniciando', \r\n      message: 'Iniciando processamento...',\r\n      timestamp: new Date().toLocaleTimeString()\r\n    });\r\n    setProcessingStage('upload');\r\n    setTotalFiles(files.length);\r\n    setProcessedFiles(0);\r\n\r\n    const allSummaries = [];\r\n    const fileErrors = [];\r\n    const patientNames = {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      const fileNumber = i + 1;\r\n      setCurrentProcessingFile(file.name);\r\n      \r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('pdf', file);\r\n        \r\n        setUploadStatus({ \r\n          stage: 'enviando', \r\n          message: `Enviando ${fileNumber}/${files.length}: ${file.name.substring(0, 30)}${file.name.length > 30 ? '...' : ''}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        const response = await fetch(`${API_URL}/api/upload`, {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        \r\n        setProcessingStage('processing');\r\n        setUploadStatus({ \r\n          stage: 'processando', \r\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          let errorMessage = `Erro ${response.status}: ${response.statusText}`;\r\n          try {\r\n            const errorData = await response.json();\r\n            if (errorData.message) {\r\n              errorMessage = errorData.message;\r\n            }\r\n          } catch (jsonError) {\r\n\r\n          }\r\n          throw new Error(`Erro no arquivo ${file.name}: ${errorMessage}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (!data.summaries || data.summaries.length === 0) {\r\n          throw new Error(`Não foi possível extrair informações do documento ${file.name}.`);\r\n        }\r\n        \r\n        if (data.patientName) {\r\n          patientNames[file.name] = data.patientName;\r\n        }\r\n        \r\n        const fileSummaries = data.summaries.map(summary => ({\r\n          ...summary,\r\n          fileName: file.name,\r\n          patientName: data.patientName,\r\n          processedAt: new Date().toLocaleTimeString()\r\n        }));\r\n        \r\n        allSummaries.push(...fileSummaries);\r\n        \r\n        if (i === 0 && data.patientName) {\r\n          setPatientName(data.patientName);\r\n        }\r\n        \r\n        setProcessedFiles(i + 1);\r\n        \r\n      } catch (error) {\r\n        console.error(`Erro ao processar ${file.name}:`, error);\r\n        fileErrors.push({ \r\n          fileName: file.name, \r\n          error: error.message,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n      }\r\n    }\r\n    \r\n    setProcessingStage('complete');\r\n    \r\n    if (allSummaries.length > 0) {\r\n      setSummaries(allSummaries);\r\n      \r\n      if (fileErrors.length > 0) {\r\n        setUploadStatus({ \r\n          stage: 'aviso', \r\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\r\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        const errorMessage = fileErrors.map(err => \r\n          `${err.fileName}: ${err.error}`\r\n        ).join('\\n');\r\n        setError(`Alguns arquivos não puderam ser processados:\\n\\n${errorMessage}`);\r\n      } else {\r\n        setUploadStatus({ \r\n          stage: 'sucesso', \r\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\r\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        setError(null);\r\n      }\r\n    } else {\r\n      setUploadStatus({ \r\n        stage: 'erro', \r\n        message: 'Nenhum resultado foi extraído dos arquivos.',\r\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\r\n        timestamp: new Date().toLocaleTimeString()\r\n      });\r\n      \r\n      const errorMessage = fileErrors.map(err => \r\n        `${err.fileName}: ${err.error}`\r\n      ).join('\\n');\r\n      setError(`Falha ao processar todos os arquivos:\\n\\n${errorMessage}`);\r\n    }\r\n    \r\n    setLoading(false);\r\n    setCurrentProcessingFile(null);\r\n  };\r\n\r\n  // Gerar texto formatado para cópia\r\n  const getSimplifiedTextForCopy = useCallback(() => {\r\n    if (summaries.length === 0) return '';\r\n    \r\n    const resultsByFile = {};\r\n    \r\n    summaries.forEach((summary) => {\r\n      const fileName = summary.fileName || 'arquivo_desconhecido';\r\n      \r\n      if (!resultsByFile[fileName]) {\r\n        resultsByFile[fileName] = {\r\n          patientName: summary.patientName || patientName || \"Paciente\",\r\n          results: [],\r\n          processedAt: summary.processedAt\r\n        };\r\n      }\r\n      \r\n      const lines = summary.content.split('\\n');\r\n      lines.forEach((line) => {\r\n        if (line.trim() && \r\n            !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && \r\n            !line.match(/^Paciente:/i)) {\r\n          resultsByFile[fileName].results.push(line.trim());\r\n        }\r\n      });\r\n    });\r\n    \r\n    let formattedText = '';\r\n    let isFirstFile = true;\r\n    \r\n    Object.keys(resultsByFile).forEach((fileName) => {\r\n      if (!isFirstFile) {\r\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\r\n      } else {\r\n        isFirstFile = false;\r\n      }\r\n      \r\n      const fileData = resultsByFile[fileName];\r\n      if (fileData.patientName) {\r\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\r\n        if (fileData.processedAt) {\r\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\r\n        }\r\n        formattedText += '\\n';\r\n      }\r\n      \r\n      const uniqueResults = [...new Set(fileData.results)];\r\n      uniqueResults.forEach(result => {\r\n        formattedText += `${result}\\n`;\r\n      });\r\n    });\r\n    \r\n    return formattedText;\r\n  }, [summaries, patientName]);\r\n\r\n  const copyToClipboard = useCallback(async () => {\r\n    if (textAreaRef.current) {\r\n      try {\r\n        if (navigator.clipboard && window.isSecureContext) {\r\n          await navigator.clipboard.writeText(textAreaRef.current.value);\r\n        } else {\r\n          textAreaRef.current.select();\r\n          document.execCommand('copy');\r\n        }\r\n        \r\n        const originalText = textAreaRef.current.value;\r\n        textAreaRef.current.value = 'Resultados copiados com sucesso!';\r\n        textAreaRef.current.style.background = '#f0fdf4';\r\n        textAreaRef.current.style.color = '#166534';\r\n        \r\n        setTimeout(() => {\r\n          textAreaRef.current.value = originalText;\r\n          textAreaRef.current.style.background = '';\r\n          textAreaRef.current.style.color = '';\r\n        }, 2000);\r\n        \r\n      } catch (err) {\r\n        console.error('Erro ao copiar:', err);\r\n        const originalText = textAreaRef.current.value;\r\n        textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\r\n        textAreaRef.current.style.background = '#fef2f2';\r\n        textAreaRef.current.style.color = '#dc2626';\r\n        \r\n        setTimeout(() => {\r\n          textAreaRef.current.value = originalText;\r\n          textAreaRef.current.style.background = '';\r\n          textAreaRef.current.style.color = '';\r\n        }, 3000);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Calcular progresso\r\n  const calculateProgress = useCallback(() => {\r\n    if (totalFiles === 0) return 0;\r\n    return Math.round((processedFiles / totalFiles) * 100);\r\n  }, [processedFiles, totalFiles]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"institute-logo\">\r\n          <span className=\"logo-text\">Instituto Paulo Godoi</span>\r\n        </div>\r\n        <h1>Sistema de Processamento de Documentos</h1>\r\n        <p className=\"subtitle\">Extração de resultados e ferramentas para PDFs laboratoriais</p>\r\n        \r\n        {/* Status da API */}\r\n        {apiStatus && (\r\n          <div className={`api-status ${apiStatus.status}`}>\r\n            <span className=\"status-indicator\"></span>\r\n            {apiStatus.status === 'online' ? (\r\n              <span>Conectado ({apiStatus.env})</span>\r\n            ) : apiStatus.status === 'checking' ? (\r\n              <span>Verificando...</span>\r\n            ) : (\r\n              <span>{apiStatus.message}\r\n                <button className=\"retry-button\" onClick={retryApiConnection}>\r\n                  Tentar novamente\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </header>\r\n      \r\n      <main>\r\n        {/* Error Handler para problemas de API */}\r\n        {(apiStatus?.status === 'offline' || apiStatus?.status === 'error') && activeTab === 'extractor' && (\r\n          <ErrorHandler \r\n            error={`Não foi possível conectar ao servidor. ${apiStatus.message}`}\r\n            onRetry={retryApiConnection}\r\n          />\r\n        )}\r\n\r\n        {/* Navegação por Abas */}\r\n        <div className=\"tab-navigation\">\r\n          <button \r\n            className={`tab-button ${activeTab === 'extractor' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('extractor')}\r\n          >\r\n            <span className=\"tab-icon\">📋</span>\r\n            Extrator de Resultados\r\n          </button>\r\n          <button \r\n            className={`tab-button ${activeTab === 'splitter' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('splitter')}\r\n          >\r\n            <span className=\"tab-icon\">✂️</span>\r\n            Divisor de PDF\r\n          </button>\r\n        </div>\r\n\r\n        {/* Conteúdo da aba Extrator */}\r\n        {activeTab === 'extractor' && (\r\n          <>\r\n            {/* Aviso sobre limite de tamanho */}\r\n            <div className=\"size-warning-card\">\r\n              <div className=\"warning-header\">\r\n                <span className=\"warning-icon\">⚠️</span>\r\n                <h3>Limite de Tamanho para Extração</h3>\r\n              </div>\r\n              <div className=\"warning-content\">\r\n                <p>\r\n                  <strong>PDFs com mais de 4MB precisam ser divididos antes da extração.</strong>\r\n                </p>\r\n                <p>\r\n                  Use a aba <button \r\n                    className=\"tab-link-button\" \r\n                    onClick={() => setActiveTab('splitter')}\r\n                  >\r\n                    ✂️ Divisor de PDF\r\n                  </button> para cortar arquivos grandes em partes menores.\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div \r\n              className={`uploader-container ${dragOver ? 'drag-over' : ''}`}\r\n              onDragOver={handleDragOver}\r\n              onDragLeave={handleDragLeave}\r\n              onDrop={handleDrop}\r\n            >\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"file-input-container\">\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"pdf-upload\"\r\n                    ref={fileInputRef}\r\n                    onChange={handleFileChange}\r\n                    accept=\"application/pdf\"\r\n                    multiple\r\n                  />\r\n                  <label htmlFor=\"pdf-upload\" className={`file-label ${dragOver ? 'drag-active' : ''}`}>\r\n                    {dragOver ? (\r\n                      'Solte os arquivos PDF aqui'\r\n                    ) : files.length > 0 ? (\r\n                      `${files.length} arquivo(s) selecionado(s)`\r\n                    ) : (\r\n                      'Escolher arquivos PDF ou arrastar aqui'\r\n                    )}\r\n                  </label>\r\n                </div>\r\n                \r\n                {/* Lista de arquivos selecionados */}\r\n                {files.length > 0 && (\r\n                  <div className=\"selected-files-container\">\r\n                    <h3>Arquivos Selecionados</h3>\r\n                    <div className=\"files-actions\">\r\n                      <button \r\n                        type=\"button\" \r\n                        className=\"clear-files-button\" \r\n                        onClick={clearAllFiles}\r\n                        disabled={loading}\r\n                      >\r\n                        Remover todos\r\n                      </button>\r\n                    </div>\r\n                    <ul className=\"selected-files-list\">\r\n                      {files.map((file, index) => {\r\n                        const fileSizeMB = file.size / 1024 / 1024;\r\n                        const isOverLimit = fileSizeMB > 4;\r\n                        return (\r\n                          <li key={`${file.name}-${index}`} className={`file-item ${isOverLimit ? 'file-over-limit' : ''}`}>\r\n                            <span className=\"file-name\">\r\n                              <span className=\"pdf-icon\">📄</span>\r\n                              {file.name}\r\n                              <span className={`file-size ${isOverLimit ? 'size-warning' : ''}`}>\r\n                                ({fileSizeMB.toFixed(1)} MB)\r\n                                {isOverLimit && <span className=\"size-alert\">⚠️ Muito grande</span>}\r\n                              </span>\r\n                            </span>\r\n                            <button \r\n                              type=\"button\" \r\n                              className=\"remove-file-button\" \r\n                              onClick={() => removeFile(index)}\r\n                              disabled={loading}\r\n                            >\r\n                              ×\r\n                            </button>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                    {files.some(file => file.size / 1024 / 1024 > 4) && (\r\n                      <div className=\"file-size-alert\">\r\n                        <span className=\"alert-icon\">⚠️</span>\r\n                        <div className=\"alert-content\">\r\n                          <strong>Arquivos muito grandes detectados!</strong>\r\n                          <p>PDFs com mais de 4MB podem falhar na extração. \r\n                             <button \r\n                               className=\"alert-link-button\" \r\n                               onClick={() => setActiveTab('splitter')}\r\n                             >\r\n                               Clique aqui para dividir os arquivos grandes\r\n                             </button> antes de extrair os resultados.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                \r\n                <button \r\n                  type=\"submit\" \r\n                  className={`upload-button ${loading ? 'loading' : ''}`}\r\n                  disabled={files.length === 0 || apiStatus?.status !== 'online' || loading}\r\n                >\r\n                  {loading ? 'Processando...' : 'Extrair Resultados'}\r\n                </button>\r\n              </form>\r\n              \r\n              {/* Barra de progresso */}\r\n              {(processingStage === 'upload' || processingStage === 'processing') && (\r\n                <div className=\"progress-bar-container\">\r\n                  <div className=\"progress-bar\">\r\n                    <div \r\n                      className=\"progress-indicator\" \r\n                      style={{ width: `${calculateProgress()}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"progress-status\">\r\n                    {currentProcessingFile ? (\r\n                      `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${\r\n                        currentProcessingFile.length > 30 ? \r\n                        currentProcessingFile.substring(0, 30) + '...' : \r\n                        currentProcessingFile\r\n                      } (${processedFiles + 1}/${totalFiles})`\r\n                    ) : (\r\n                      processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Status de upload */}\r\n              {uploadStatus && (\r\n                <div className={`upload-status ${uploadStatus.stage}`}>\r\n                  <span className=\"status-icon\">\r\n                    {uploadStatus.stage === 'sucesso' ? '✓' : \r\n                    uploadStatus.stage === 'erro' ? '✗' : \r\n                    uploadStatus.stage === 'aviso' ? '!' : '⟳'}\r\n                  </span>\r\n                  <div className=\"status-content\">\r\n                    <div className=\"status-message\">{uploadStatus.message}</div>\r\n                    {uploadStatus.details && (\r\n                      <div className=\"status-details\">{uploadStatus.details}</div>\r\n                    )}\r\n                    {uploadStatus.timestamp && (\r\n                      <div className=\"status-timestamp\">{uploadStatus.timestamp}</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Dicas para PDFs problemáticos */}\r\n              {uploadStatus && uploadStatus.stage === 'erro' && (\r\n                <div className=\"pdf-tips\">\r\n                  <h4>Possíveis soluções:</h4>\r\n                  <ul>\r\n                    <li>Verifique se os PDFs não estão protegidos por senha</li>\r\n                    <li>Tente salvar os PDFs novamente usando \"Salvar como\"</li>\r\n                    <li>Se possível, imprima os documentos para novos PDFs</li>\r\n                    <li>Entre em contato com o laboratório para versões alternativas</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Aviso para processamento parcial */}\r\n              {uploadStatus && uploadStatus.stage === 'aviso' && (\r\n                <div className=\"processing-notice\">\r\n                  <p>Os documentos foram processados, mas alguns podem conter imprecisões.</p>\r\n                  <p>Verifique os resultados antes de usar.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {loading && !processingStage && (\r\n              <p className=\"loading\">Processando documentos, aguarde...</p>\r\n            )}\r\n            \r\n            {error && !uploadStatus && (\r\n              <p className=\"error\">{error}</p>\r\n            )}\r\n            \r\n            {/* Detalhes de erros */}\r\n            {error && uploadStatus && (\r\n              <div className=\"file-errors\">\r\n                <details>\r\n                  <summary>Detalhes dos erros</summary>\r\n                  <pre className=\"error-details\">{error}</pre>\r\n                </details>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Botão de reset */}\r\n            {summaries.length > 0 && (\r\n              <div className=\"reset-button-container\">\r\n                <button \r\n                  className=\"reset-button\"\r\n                  onClick={handleReset}\r\n                  disabled={loading}\r\n                >\r\n                  Processar novos documentos\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"summary-container\">\r\n              {summaries.length === 0 ? (\r\n                <div className=\"empty-message\">\r\n                  <p>Os resultados dos exames aparecerão aqui.</p>\r\n                  <p>Selecione arquivos PDF para começar.</p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-view-container\">\r\n                  <h2>Resultados Extraídos</h2>\r\n                  {summaries.length > 0 && (\r\n                    <div className=\"summary-info\">\r\n                      <span className=\"file-count\">{summaries.length} resultados extraídos</span>\r\n                      {files.length > 1 && (\r\n                        <span className=\"multi-file-notice\">de {files.length} arquivos</span>\r\n                      )}\r\n                      <span className=\"extraction-time\">às {new Date().toLocaleTimeString()}</span>\r\n                    </div>\r\n                  )}\r\n                  <p className=\"copy-instructions\">Lista de resultados pronta para copiar:</p>\r\n                  <div className=\"text-area-container\">\r\n                    <textarea\r\n                      ref={textAreaRef}\r\n                      className=\"results-text-area\"\r\n                      value={getSimplifiedTextForCopy()}\r\n                      readOnly\r\n                      placeholder=\"Os resultados aparecerão aqui...\"\r\n                    />\r\n                    <button \r\n                      onClick={copyToClipboard} \r\n                      className=\"copy-button\"\r\n                      disabled={summaries.length === 0}\r\n                    >\r\n                      Copiar para área de transferência\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Conteúdo da aba Divisor de PDF */}\r\n        {activeTab === 'splitter' && (\r\n          <div className=\"pdf-splitter-section\">\r\n            <div className=\"splitter-intro\">\r\n              <h2>\r\n                <span className=\"section-icon\">✂️</span>\r\n                Divisor de PDF\r\n              </h2>\r\n              <p className=\"section-description\">\r\n                <strong>Divida múltiplos PDFs grandes em partes menores para extração.</strong> \r\n                Arquivos com mais de 4MB devem ser divididos antes de usar o extrator de resultados.\r\n              </p>\r\n              <div className=\"splitter-benefits\">\r\n                <div className=\"benefit-item\">\r\n                  <span className=\"benefit-icon\">🎯</span>\r\n                  <span>Processe vários PDFs de uma só vez</span>\r\n                </div>\r\n                <div className=\"benefit-item\">\r\n                  <span className=\"benefit-icon\">🔒</span>\r\n                  <span>Processamento 100% local e seguro</span>\r\n                </div>\r\n                <div className=\"benefit-item\">\r\n                  <span className=\"benefit-icon\">⚡</span>\r\n                  <span>Divisão rápida e automática</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* NOVO: Seletor de número de partes */}\r\n            <div className=\"split-options-container\">\r\n              <h3 className=\"split-options-title\">\r\n                <span className=\"options-icon\">⚙️</span>\r\n                Configurações de Divisão\r\n              </h3>\r\n              <div className=\"split-parts-selector\">\r\n                <label className=\"parts-label\">Dividir cada PDF em:</label>\r\n                <div className=\"parts-buttons-container\">\r\n                  {[2, 3, 4].map((parts) => (\r\n                    <button\r\n                      key={parts}\r\n                      type=\"button\"\r\n                      className={`parts-button ${splitParts === parts ? 'active' : ''}`}\r\n                      onClick={() => setSplitParts(parts)}\r\n                      disabled={isSplitting}\r\n                    >\r\n                      <span className=\"parts-number\">{parts}</span>\r\n                      <span className=\"parts-text\">partes</span>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                <div className=\"parts-explanation\">\r\n                  <span className=\"explanation-icon\">ℹ️</span>\r\n                  <span className=\"explanation-text\">\r\n                    {splitParts === 2 && \"Divide cada PDF pela metade\"}\r\n                    {splitParts === 3 && \"Divide cada PDF em 3 partes iguais\"}\r\n                    {splitParts === 4 && \"Divide cada PDF em 4 partes iguais\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div \r\n              className={`splitter-uploader-container ${dragOverSplitter ? 'drag-over' : ''}`}\r\n              onDragOver={handleSplitterDragOver}\r\n              onDragLeave={handleSplitterDragLeave}\r\n              onDrop={handleSplitterDrop}\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                id=\"pdf-split-upload\"\r\n                ref={splitFileInputRef}\r\n                onChange={handleSplitFileChange}\r\n                accept=\"application/pdf\"\r\n                multiple\r\n                style={{ display: 'none' }}\r\n              />\r\n              \r\n              <label htmlFor=\"pdf-split-upload\" className={`splitter-file-label ${dragOverSplitter ? 'drag-active' : ''}`}>\r\n                <div className=\"splitter-upload-content\">\r\n                  <span className=\"splitter-upload-icon\">\r\n                    {selectedFilesForSplit.length > 0 ? '✓' : '📎'}\r\n                  </span>\r\n                  {selectedFilesForSplit.length > 0 ? (\r\n                    <div className=\"selected-files-info\">\r\n                      <p className=\"selected-files-count\">\r\n                        {selectedFilesForSplit.length} arquivo{selectedFilesForSplit.length > 1 ? 's' : ''} selecionado{selectedFilesForSplit.length > 1 ? 's' : ''}\r\n                      </p>\r\n                      <p className=\"selected-files-size\">\r\n                        Total: {(selectedFilesForSplit.reduce((acc, file) => acc + file.size, 0) / 1024 / 1024).toFixed(1)} MB\r\n                      </p>\r\n                    </div>\r\n                  ) : dragOverSplitter ? (\r\n                    <div className=\"drag-message\">\r\n                      <p>Solte os arquivos PDF aqui</p>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"upload-message\">\r\n                      <p>Selecione ou arraste arquivos PDF</p>\r\n                      <span className=\"upload-hint\">Clique aqui ou arraste e solte seus PDFs</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </label>\r\n\r\n              {/* Lista de arquivos selecionados para dividir */}\r\n              {selectedFilesForSplit.length > 0 && (\r\n                <div className=\"selected-split-files-container\">\r\n                  <h3>Arquivos para Dividir</h3>\r\n                  <div className=\"split-files-actions\">\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"clear-split-files-button\" \r\n                      onClick={clearAllSplitFiles}\r\n                      disabled={isSplitting}\r\n                    >\r\n                      Remover todos\r\n                    </button>\r\n                  </div>\r\n                  <ul className=\"selected-split-files-list\">\r\n                    {selectedFilesForSplit.map((file, index) => {\r\n                      const fileSizeMB = file.size / 1024 / 1024;\r\n                      return (\r\n                        <li key={`split-${file.name}-${index}`} className=\"split-file-item\">\r\n                          <span className=\"split-file-name\">\r\n                            <span className=\"pdf-icon\">📄</span>\r\n                            {file.name}\r\n                            <span className=\"split-file-size\">\r\n                              ({fileSizeMB.toFixed(1)} MB)\r\n                            </span>\r\n                          </span>\r\n                          <button \r\n                            type=\"button\" \r\n                            className=\"remove-split-file-button\" \r\n                            onClick={() => removeSplitFile(index)}\r\n                            disabled={isSplitting}\r\n                          >\r\n                            ×\r\n                          </button>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"splitter-actions\">\r\n                <button\r\n                  onClick={splitPDFs}\r\n                  disabled={selectedFilesForSplit.length === 0 || isSplitting}\r\n                  className={`split-button ${isSplitting ? 'loading' : ''}`}\r\n                >\r\n                  <span className=\"button-icon\">✂️</span>\r\n                  {isSplitting ? (\r\n                    `Dividindo ${splittingProgress.current}/${splittingProgress.total}...`\r\n                  ) : (\r\n                    `Dividir em ${splitParts} partes (${selectedFilesForSplit.length} PDF${selectedFilesForSplit.length > 1 ? 's' : ''})`\r\n                  )}\r\n                </button>\r\n\r\n                {selectedFilesForSplit.length > 0 && (\r\n                  <button\r\n                    onClick={resetSplitter}\r\n                    className=\"reset-splitter-button\"\r\n                    disabled={isSplitting}\r\n                  >\r\n                    Limpar Seleção\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Indicador de processamento com progresso */}\r\n            {isSplitting && (\r\n              <div className=\"split-processing\">\r\n                <div className=\"processing-spinner\"></div>\r\n                <div className=\"processing-info\">\r\n                  <span className=\"processing-text\">\r\n                    Processando: {splittingProgress.fileName}\r\n                  </span>\r\n                  <div className=\"processing-progress\">\r\n                    {splittingProgress.current} de {splittingProgress.total} arquivos\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Mensagens de erro para divisor */}\r\n            {splitError && (\r\n              <div className=\"split-error\">\r\n                <span className=\"error-icon\">✗</span>\r\n                <pre className=\"error-text\">{splitError}</pre>\r\n              </div>\r\n            )}\r\n\r\n            {/* Mensagem de sucesso para divisor */}\r\n            {splitSuccess && (\r\n              <div className=\"split-success\">\r\n                <span className=\"success-icon\">✓</span>\r\n                <span className=\"success-text\">{splitSuccess}</span>\r\n              </div>\r\n            )}\r\n\r\n            {/* Resultados da divisão */}\r\n            {splitFiles.length > 0 && (\r\n              <div className=\"split-results\">\r\n                <div className=\"split-results-header\">\r\n                  <h3>\r\n                    <span className=\"results-icon\">📁</span>\r\n                    Arquivos Gerados ({splitFiles.length})\r\n                  </h3>\r\n                  <button\r\n                    onClick={downloadAll}\r\n                    className=\"download-all-button\"\r\n                  >\r\n                    <span className=\"button-icon\">⬇</span>\r\n                    Baixar Todos\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"split-files-grid\">\r\n                  {splitFiles.map((file, index) => (\r\n                    <div key={index} className=\"split-file-card\">\r\n                      <div className=\"file-card-header\">\r\n                        <span className=\"file-card-icon\">📄</span>\r\n                        <div className=\"file-card-info\">\r\n                          <h4 className=\"file-card-name\">{file.name}</h4>\r\n                          <div className=\"file-card-details\">\r\n                            <span className=\"file-card-pages\">{file.pages} páginas</span>\r\n                            <span className=\"file-card-part\">Parte {file.partNumber} de {file.totalParts}</span>\r\n                          </div>\r\n                          <span className=\"file-card-original\">De: {file.originalFile}</span>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => downloadFile(file)}\r\n                        className=\"download-file-button\"\r\n                      >\r\n                        <span className=\"button-icon\">⬇</span>\r\n                        Download\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"split-actions-footer\">\r\n                  <button\r\n                    onClick={resetSplitter}\r\n                    className=\"new-split-button\"\r\n                  >\r\n                    Dividir outros PDFs\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Informações sobre a ferramenta */}\r\n            <div className=\"splitter-info\">\r\n              <h4>Como funciona:</h4>\r\n              <ul>\r\n                <li>Selecione um ou mais arquivos PDF</li>\r\n                <li>Escolha em quantas partes dividir (2, 3 ou 4)</li>\r\n                <li>Cada PDF será dividido no número de partes selecionado</li>\r\n                <li>Se o PDF tiver páginas que não dividem igualmente, algumas partes terão uma página extra</li>\r\n                <li>Os arquivos são processados localmente no seu navegador (sem upload para servidor)</li>\r\n                <li>Seus dados permanecem seguros e privados</li>\r\n                <li>Processe múltiplos arquivos de uma vez para economizar tempo</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n      \r\n      <footer>\r\n        <p>© 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames</p>\r\n        <p className=\"api-info\">\r\n          Ambiente: {apiStatus?.env || 'Desconectado'} | API: {API_URL}\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}