{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\confi\\\\Downloads\\\\pdf-summarizer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js - Versão com Divisor de PDF Integrado\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport ErrorHandler from './components/ErrorHandler';\n\n// Função para determinar a URL da API baseada no ambiente\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getApiUrl() {\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:5000';\n  }\n  return 'https://server-theta-murex.vercel.app';\n}\nconst API_URL = getApiUrl();\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n  const [patientName, setPatientName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [apiStatus, setApiStatus] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [processingStage, setProcessingStage] = useState(null);\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\n  const [processedFiles, setProcessedFiles] = useState(0);\n  const [totalFiles, setTotalFiles] = useState(0);\n  const [dragOver, setDragOver] = useState(false);\n\n  // Estados para o divisor de PDF\n  const [activeTab, setActiveTab] = useState('extractor'); // 'extractor' ou 'splitter'\n  const [selectedFileForSplit, setSelectedFileForSplit] = useState(null);\n  const [isSplitting, setIsSplitting] = useState(false);\n  const [splitError, setSplitError] = useState(null);\n  const [splitSuccess, setSplitSuccess] = useState(null);\n  const [splitFiles, setSplitFiles] = useState([]);\n  const [dragOverSplitter, setDragOverSplitter] = useState(false);\n  const textAreaRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const splitFileInputRef = useRef(null);\n\n  // Função para carregar PDF-lib dinamicamente\n  const loadPDFLib = useCallback(async () => {\n    if (window.PDFLib) return window.PDFLib;\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js';\n    document.head.appendChild(script);\n    return new Promise((resolve, reject) => {\n      script.onload = () => {\n        if (window.PDFLib) {\n          resolve(window.PDFLib);\n        } else {\n          reject(new Error('Falha ao carregar PDF-lib'));\n        }\n      };\n      script.onerror = () => reject(new Error('Erro ao carregar PDF-lib'));\n    });\n  }, []);\n\n  // Verificar status da API ao carregar\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      setApiStatus({\n        status: 'checking',\n        message: 'Verificando conexão...',\n        url: API_URL\n      });\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Servidor indisponível',\n          error: error.message,\n          url: API_URL\n        });\n      }\n    };\n    checkApiStatus();\n  }, []);\n\n  // Função para reconectar com a API\n  const retryApiConnection = useCallback(() => {\n    setApiStatus({\n      status: 'checking',\n      message: 'Reconectando...',\n      url: API_URL\n    });\n    setTimeout(async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n          setError(null);\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Servidor indisponível',\n          url: API_URL\n        });\n      }\n    }, 1000);\n  }, []);\n\n  // Função para resetar o estado do extrator\n  const handleReset = useCallback(() => {\n    setSummaries([]);\n    setPatientName('');\n    setError(null);\n    setFiles([]);\n    setUploadStatus(null);\n    setProcessingStage(null);\n    setCurrentProcessingFile(null);\n    setProcessedFiles(0);\n    setTotalFiles(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Função para resetar o estado do divisor\n  const resetSplitter = useCallback(() => {\n    setSelectedFileForSplit(null);\n    setSplitFiles([]);\n    setSplitError(null);\n    setSplitSuccess(null);\n    if (splitFileInputRef.current) {\n      splitFileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Handlers para drag and drop do extrator\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    setDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    setDragOver(false);\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    setDragOver(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\n      setError('Por favor, solte apenas arquivos PDF válidos.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\n    setError(null);\n    setUploadStatus(null);\n    setProcessingStage(null);\n  }, []);\n\n  // Handlers para drag and drop do divisor\n  const handleSplitterDragOver = useCallback(e => {\n    e.preventDefault();\n    setDragOverSplitter(true);\n  }, []);\n  const handleSplitterDragLeave = useCallback(e => {\n    e.preventDefault();\n    setDragOverSplitter(false);\n  }, []);\n  const handleSplitterDrop = useCallback(e => {\n    e.preventDefault();\n    setDragOverSplitter(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    const pdfFile = droppedFiles.find(file => file.type === 'application/pdf');\n    if (pdfFile) {\n      setSelectedFileForSplit(pdfFile);\n      setSplitError(null);\n      setSplitFiles([]);\n      setSplitSuccess(null);\n    } else {\n      setSplitError('Por favor, solte apenas um arquivo PDF válido.');\n      setTimeout(() => setSplitError(null), 3000);\n    }\n  }, []);\n  const handleFileChange = useCallback(e => {\n    const selectedFiles = Array.from(e.target.files);\n    setUploadStatus(null);\n    setProcessingStage(null);\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\n      setError('Por favor, selecione apenas arquivos PDF válidos.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\n    setError(null);\n  }, []);\n  const handleSplitFileChange = useCallback(e => {\n    const file = e.target.files[0];\n    if (file && file.type === 'application/pdf') {\n      setSelectedFileForSplit(file);\n      setSplitError(null);\n      setSplitFiles([]);\n      setSplitSuccess(null);\n    } else if (file) {\n      setSplitError('Por favor, selecione apenas arquivos PDF válidos.');\n      setTimeout(() => setSplitError(null), 3000);\n    }\n  }, []);\n\n  // Função para remover arquivo do extrator\n  const removeFile = useCallback(index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  }, []);\n\n  // Função para limpar todos os arquivos do extrator\n  const clearAllFiles = useCallback(() => {\n    setFiles([]);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Função principal para dividir PDF\n  const splitPDF = useCallback(async () => {\n    if (!selectedFileForSplit) {\n      setSplitError('Por favor, selecione um arquivo PDF primeiro.');\n      return;\n    }\n    setIsSplitting(true);\n    setSplitError(null);\n    setSplitSuccess(null);\n    setSplitFiles([]);\n    try {\n      const PDFLib = await loadPDFLib();\n      const arrayBuffer = await selectedFileForSplit.arrayBuffer();\n      const pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer);\n      const totalPages = pdfDoc.getPageCount();\n      if (totalPages < 2) {\n        setSplitError('O PDF deve ter pelo menos 2 páginas para ser dividido.');\n        setIsSplitting(false);\n        return;\n      }\n      const middlePage = Math.ceil(totalPages / 2);\n\n      // Criar primeiro PDF (primeira metade)\n      const firstPdf = await PDFLib.PDFDocument.create();\n      const firstHalfPages = await firstPdf.copyPages(pdfDoc, Array.from({\n        length: middlePage\n      }, (_, i) => i));\n      firstHalfPages.forEach(page => firstPdf.addPage(page));\n\n      // Criar segundo PDF (segunda metade)\n      const secondPdf = await PDFLib.PDFDocument.create();\n      const secondHalfPages = await secondPdf.copyPages(pdfDoc, Array.from({\n        length: totalPages - middlePage\n      }, (_, i) => i + middlePage));\n      secondHalfPages.forEach(page => secondPdf.addPage(page));\n\n      // Gerar os PDFs como bytes\n      const firstPdfBytes = await firstPdf.save();\n      const secondPdfBytes = await secondPdf.save();\n\n      // Criar nomes para os arquivos\n      const originalName = selectedFileForSplit.name.replace('.pdf', '');\n      const firstName = `${originalName}_parte1.pdf`;\n      const secondName = `${originalName}_parte2.pdf`;\n\n      // Criar objetos de arquivo para download\n      const splitResults = [{\n        name: firstName,\n        bytes: firstPdfBytes,\n        pages: middlePage,\n        blob: new Blob([firstPdfBytes], {\n          type: 'application/pdf'\n        })\n      }, {\n        name: secondName,\n        bytes: secondPdfBytes,\n        pages: totalPages - middlePage,\n        blob: new Blob([secondPdfBytes], {\n          type: 'application/pdf'\n        })\n      }];\n      setSplitFiles(splitResults);\n      setSplitSuccess(`PDF dividido com sucesso! Total de ${totalPages} páginas divididas em 2 arquivos.`);\n    } catch (error) {\n      console.error('Erro ao dividir PDF:', error);\n      setSplitError('Erro ao processar o PDF. Verifique se o arquivo não está corrompido ou protegido por senha.');\n    } finally {\n      setIsSplitting(false);\n    }\n  }, [selectedFileForSplit, loadPDFLib]);\n\n  // Função para download de arquivo\n  const downloadFile = useCallback(fileData => {\n    const url = URL.createObjectURL(fileData.blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = fileData.name;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }, []);\n\n  // Função para download de todos os arquivos\n  const downloadAll = useCallback(() => {\n    splitFiles.forEach((fileData, index) => {\n      setTimeout(() => downloadFile(fileData), index * 100);\n    });\n  }, [splitFiles, downloadFile]);\n\n  // Função principal de upload e processamento (existente)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (files.length === 0) {\n      setError('Por favor, selecione pelo menos um arquivo PDF válido.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setUploadStatus({\n      stage: 'iniciando',\n      message: 'Iniciando processamento...',\n      timestamp: new Date().toLocaleTimeString()\n    });\n    setProcessingStage('upload');\n    setTotalFiles(files.length);\n    setProcessedFiles(0);\n    const allSummaries = [];\n    const fileErrors = [];\n    const patientNames = {};\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const fileNumber = i + 1;\n      setCurrentProcessingFile(file.name);\n      try {\n        const formData = new FormData();\n        formData.append('pdf', file);\n        setUploadStatus({\n          stage: 'enviando',\n          message: `Enviando ${fileNumber}/${files.length}: ${file.name.substring(0, 30)}${file.name.length > 30 ? '...' : ''}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        const response = await fetch(`${API_URL}/api/upload`, {\n          method: 'POST',\n          body: formData\n        });\n        setProcessingStage('processing');\n        setUploadStatus({\n          stage: 'processando',\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        if (!response.ok) {\n          let errorMessage = `Erro ${response.status}: ${response.statusText}`;\n          try {\n            const errorData = await response.json();\n            if (errorData.message) {\n              errorMessage = errorData.message;\n            }\n          } catch (jsonError) {\n            // Continuar com mensagem padrão\n          }\n          throw new Error(`Erro no arquivo ${file.name}: ${errorMessage}`);\n        }\n        const data = await response.json();\n        if (!data.summaries || data.summaries.length === 0) {\n          throw new Error(`Não foi possível extrair informações do documento ${file.name}.`);\n        }\n        if (data.patientName) {\n          patientNames[file.name] = data.patientName;\n        }\n        const fileSummaries = data.summaries.map(summary => ({\n          ...summary,\n          fileName: file.name,\n          patientName: data.patientName,\n          processedAt: new Date().toLocaleTimeString()\n        }));\n        allSummaries.push(...fileSummaries);\n        if (i === 0 && data.patientName) {\n          setPatientName(data.patientName);\n        }\n        setProcessedFiles(i + 1);\n      } catch (error) {\n        console.error(`Erro ao processar ${file.name}:`, error);\n        fileErrors.push({\n          fileName: file.name,\n          error: error.message,\n          timestamp: new Date().toLocaleTimeString()\n        });\n      }\n    }\n    setProcessingStage('complete');\n    if (allSummaries.length > 0) {\n      setSummaries(allSummaries);\n      if (fileErrors.length > 0) {\n        setUploadStatus({\n          stage: 'aviso',\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n        setError(`Alguns arquivos não puderam ser processados:\\n\\n${errorMessage}`);\n      } else {\n        setUploadStatus({\n          stage: 'sucesso',\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        setError(null);\n      }\n    } else {\n      setUploadStatus({\n        stage: 'erro',\n        message: 'Nenhum resultado foi extraído dos arquivos.',\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\n        timestamp: new Date().toLocaleTimeString()\n      });\n      const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n      setError(`Falha ao processar todos os arquivos:\\n\\n${errorMessage}`);\n    }\n    setLoading(false);\n    setCurrentProcessingFile(null);\n  };\n\n  // Gerar texto formatado para cópia\n  const getSimplifiedTextForCopy = useCallback(() => {\n    if (summaries.length === 0) return '';\n    const resultsByFile = {};\n    summaries.forEach(summary => {\n      const fileName = summary.fileName || 'arquivo_desconhecido';\n      if (!resultsByFile[fileName]) {\n        resultsByFile[fileName] = {\n          patientName: summary.patientName || patientName || \"Paciente\",\n          results: [],\n          processedAt: summary.processedAt\n        };\n      }\n      const lines = summary.content.split('\\n');\n      lines.forEach(line => {\n        if (line.trim() && !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && !line.match(/^Paciente:/i)) {\n          resultsByFile[fileName].results.push(line.trim());\n        }\n      });\n    });\n    let formattedText = '';\n    let isFirstFile = true;\n    Object.keys(resultsByFile).forEach(fileName => {\n      if (!isFirstFile) {\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\n      } else {\n        isFirstFile = false;\n      }\n      const fileData = resultsByFile[fileName];\n      if (fileData.patientName) {\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\n        if (fileData.processedAt) {\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\n        }\n        formattedText += '\\n';\n      }\n      const uniqueResults = [...new Set(fileData.results)];\n      uniqueResults.forEach(result => {\n        formattedText += `${result}\\n`;\n      });\n    });\n    return formattedText;\n  }, [summaries, patientName]);\n\n  // Função para copiar texto\n  const copyToClipboard = useCallback(async () => {\n    if (textAreaRef.current) {\n      try {\n        if (navigator.clipboard && window.isSecureContext) {\n          await navigator.clipboard.writeText(textAreaRef.current.value);\n        } else {\n          textAreaRef.current.select();\n          document.execCommand('copy');\n        }\n        const originalText = textAreaRef.current.value;\n        textAreaRef.current.value = 'Resultados copiados com sucesso!';\n        textAreaRef.current.style.background = '#f0fdf4';\n        textAreaRef.current.style.color = '#166534';\n        setTimeout(() => {\n          textAreaRef.current.value = originalText;\n          textAreaRef.current.style.background = '';\n          textAreaRef.current.style.color = '';\n        }, 2000);\n      } catch (err) {\n        console.error('Erro ao copiar:', err);\n        const originalText = textAreaRef.current.value;\n        textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\n        textAreaRef.current.style.background = '#fef2f2';\n        textAreaRef.current.style.color = '#dc2626';\n        setTimeout(() => {\n          textAreaRef.current.value = originalText;\n          textAreaRef.current.style.background = '';\n          textAreaRef.current.style.color = '';\n        }, 3000);\n      }\n    }\n  }, []);\n\n  // Calcular progresso\n  const calculateProgress = useCallback(() => {\n    if (totalFiles === 0) return 0;\n    return Math.round(processedFiles / totalFiles * 100);\n  }, [processedFiles, totalFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"institute-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Instituto Paulo Godoi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sistema de Processamento de Documentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Extra\\xE7\\xE3o de resultados e ferramentas para PDFs laboratoriais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), apiStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `api-status ${apiStatus.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this), apiStatus.status === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Conectado (\", apiStatus.env, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 15\n        }, this) : apiStatus.status === 'checking' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Verificando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [apiStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: retryApiConnection,\n            children: \"Tentar novamente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [((apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'offline' || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'error') && activeTab === 'extractor' && /*#__PURE__*/_jsxDEV(ErrorHandler, {\n        error: `Não foi possível conectar ao servidor. ${apiStatus.message}`,\n        onRetry: retryApiConnection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'extractor' ? 'active' : ''}`,\n          onClick: () => setActiveTab('extractor'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tab-icon\",\n            children: \"\\uD83D\\uDCCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), \"Extrator de Resultados\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'splitter' ? 'active' : ''}`,\n          onClick: () => setActiveTab('splitter'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tab-icon\",\n            children: \"\\u2702\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), \"Divisor de PDF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this), activeTab === 'extractor' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size-warning-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning-icon\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Limite de Tamanho para Extra\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"PDFs com mais de 4MB precisam ser divididos antes da extra\\xE7\\xE3o.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Use a aba \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"tab-link-button\",\n                onClick: () => setActiveTab('splitter'),\n                children: \"\\u2702\\uFE0F Divisor de PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 29\n              }, this), \" para cortar arquivos grandes em partes menores.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `uploader-container ${dragOver ? 'drag-over' : ''}`,\n          onDragOver: handleDragOver,\n          onDragLeave: handleDragLeave,\n          onDrop: handleDrop,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"pdf-upload\",\n                ref: fileInputRef,\n                onChange: handleFileChange,\n                accept: \"application/pdf\",\n                multiple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pdf-upload\",\n                className: `file-label ${dragOver ? 'drag-active' : ''}`,\n                children: dragOver ? 'Solte os arquivos PDF aqui' : files.length > 0 ? `${files.length} arquivo(s) selecionado(s)` : 'Escolher arquivos PDF ou arrastar aqui'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Arquivos Selecionados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"files-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"clear-files-button\",\n                  onClick: clearAllFiles,\n                  disabled: loading,\n                  children: \"Remover todos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"selected-files-list\",\n                children: files.map((file, index) => {\n                  const fileSizeMB = file.size / 1024 / 1024;\n                  const isOverLimit = fileSizeMB > 4;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `file-item ${isOverLimit ? 'file-over-limit' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-name\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"pdf-icon\",\n                        children: \"\\uD83D\\uDCC4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 707,\n                        columnNumber: 31\n                      }, this), file.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `file-size ${isOverLimit ? 'size-warning' : ''}`,\n                        children: [\"(\", fileSizeMB.toFixed(1), \" MB)\", isOverLimit && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"size-alert\",\n                          children: \"\\u26A0\\uFE0F Muito grande\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 711,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 709,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 706,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"remove-file-button\",\n                      onClick: () => removeFile(index),\n                      disabled: loading,\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 714,\n                      columnNumber: 29\n                    }, this)]\n                  }, `${file.name}-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 21\n              }, this), files.some(file => file.size / 1024 / 1024 > 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-size-alert\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"alert-icon\",\n                  children: \"\\u26A0\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Arquivos muito grandes detectados!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"PDFs com mais de 4MB podem falhar na extra\\xE7\\xE3o.\", /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"alert-link-button\",\n                      onClick: () => setActiveTab('splitter'),\n                      children: \"Clique aqui para dividir os arquivos grandes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 30\n                    }, this), \" antes de extrair os resultados.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: `upload-button ${loading ? 'loading' : ''}`,\n              disabled: files.length === 0 || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) !== 'online' || loading,\n              children: loading ? 'Processando...' : 'Extrair Resultados'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), (processingStage === 'upload' || processingStage === 'processing') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-indicator\",\n                style: {\n                  width: `${calculateProgress()}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-status\",\n              children: currentProcessingFile ? `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${currentProcessingFile.length > 30 ? currentProcessingFile.substring(0, 30) + '...' : currentProcessingFile} (${processedFiles + 1}/${totalFiles})` : processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 17\n          }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `upload-status ${uploadStatus.stage}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-icon\",\n              children: uploadStatus.stage === 'sucesso' ? '✓' : uploadStatus.stage === 'erro' ? '✗' : uploadStatus.stage === 'aviso' ? '!' : '⟳'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-message\",\n                children: uploadStatus.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 21\n              }, this), uploadStatus.details && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-details\",\n                children: uploadStatus.details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 23\n              }, this), uploadStatus.timestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-timestamp\",\n                children: uploadStatus.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 17\n          }, this), uploadStatus && uploadStatus.stage === 'erro' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pdf-tips\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Poss\\xEDveis solu\\xE7\\xF5es:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Verifique se os PDFs n\\xE3o est\\xE3o protegidos por senha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Tente salvar os PDFs novamente usando \\\"Salvar como\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Se poss\\xEDvel, imprima os documentos para novos PDFs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Entre em contato com o laborat\\xF3rio para vers\\xF5es alternativas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 17\n          }, this), uploadStatus && uploadStatus.stage === 'aviso' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processing-notice\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Os documentos foram processados, mas alguns podem conter imprecis\\xF5es.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Verifique os resultados antes de usar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this), loading && !processingStage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading\",\n          children: \"Processando documentos, aguarde...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 15\n        }, this), error && !uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 15\n        }, this), error && uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-errors\",\n          children: /*#__PURE__*/_jsxDEV(\"details\", {\n            children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n              children: \"Detalhes dos erros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"error-details\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 15\n        }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reset-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-button\",\n            onClick: handleReset,\n            disabled: loading,\n            children: \"Processar novos documentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-container\",\n          children: summaries.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Os resultados dos exames aparecer\\xE3o aqui.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Selecione arquivos PDF para come\\xE7ar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-view-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Resultados Extra\\xEDdos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 19\n            }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-count\",\n                children: [summaries.length, \" resultados extra\\xEDdos\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 23\n              }, this), files.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"multi-file-notice\",\n                children: [\"de \", files.length, \" arquivos\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"extraction-time\",\n                children: [\"\\xE0s \", new Date().toLocaleTimeString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"copy-instructions\",\n              children: \"Lista de resultados pronta para copiar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-area-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: textAreaRef,\n                className: \"results-text-area\",\n                value: getSimplifiedTextForCopy(),\n                readOnly: true,\n                placeholder: \"Os resultados aparecer\\xE3o aqui...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: copyToClipboard,\n                className: \"copy-button\",\n                disabled: summaries.length === 0,\n                children: \"Copiar para \\xE1rea de transfer\\xEAncia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeTab === 'splitter' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-splitter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"splitter-intro\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"section-icon\",\n              children: \"\\u2702\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 17\n            }, this), \"Divisor de PDF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Divida PDFs grandes em partes menores para extra\\xE7\\xE3o.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 17\n            }, this), \"Arquivos com mais de 4MB devem ser divididos antes de usar o extrator de resultados.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"splitter-benefits\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"benefit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"benefit-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Ideal para PDFs com mais de 4MB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"benefit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"benefit-icon\",\n                children: \"\\uD83D\\uDD12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Processamento 100% local e seguro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"benefit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"benefit-icon\",\n                children: \"\\u26A1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Divis\\xE3o r\\xE1pida e autom\\xE1tica\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `splitter-uploader-container ${dragOverSplitter ? 'drag-over' : ''}`,\n          onDragOver: handleSplitterDragOver,\n          onDragLeave: handleSplitterDragLeave,\n          onDrop: handleSplitterDrop,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"pdf-split-upload\",\n            ref: splitFileInputRef,\n            onChange: handleSplitFileChange,\n            accept: \"application/pdf\",\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pdf-split-upload\",\n            className: `splitter-file-label ${dragOverSplitter ? 'drag-active' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"splitter-upload-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"splitter-upload-icon\",\n                children: selectedFileForSplit ? '✓' : '📎'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 19\n              }, this), selectedFileForSplit ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-file-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"selected-file-name\",\n                  children: selectedFileForSplit.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 941,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"selected-file-size\",\n                  children: [(selectedFileForSplit.size / 1024 / 1024).toFixed(1), \" MB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 942,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 940,\n                columnNumber: 21\n              }, this) : dragOverSplitter ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"drag-message\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Solte o arquivo PDF aqui\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 948,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-message\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Selecione ou arraste um arquivo PDF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 952,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"upload-hint\",\n                  children: \"Clique aqui ou arraste e solte seu PDF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 953,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"splitter-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: splitPDF,\n              disabled: !selectedFileForSplit || isSplitting,\n              className: `split-button ${isSplitting ? 'loading' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-icon\",\n                children: \"\\u2702\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 19\n              }, this), isSplitting ? 'Dividindo PDF...' : 'Dividir PDF em 2']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 17\n            }, this), selectedFileForSplit && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetSplitter,\n              className: \"reset-splitter-button\",\n              disabled: isSplitting,\n              children: \"Selecionar Outro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 13\n        }, this), isSplitting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-processing\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processing-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"processing-text\",\n            children: \"Processando PDF...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 15\n        }, this), splitError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-icon\",\n            children: \"\\u2717\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: splitError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 15\n        }, this), splitSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-icon\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-text\",\n            children: splitSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 15\n        }, this), splitFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-results-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"results-icon\",\n                children: \"\\uD83D\\uDCC1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 21\n              }, this), \"Arquivos Gerados\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadAll,\n              className: \"download-all-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-icon\",\n                children: \"\\u2B07\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 21\n              }, this), \"Baixar Todos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-files-grid\",\n            children: splitFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"split-file-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-card-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-card-icon\",\n                  children: \"\\uD83D\\uDCC4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-card-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"file-card-name\",\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1028,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-card-pages\",\n                    children: [file.pages, \" p\\xE1ginas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1029,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => downloadFile(file),\n                className: \"download-file-button\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"button-icon\",\n                  children: \"\\u2B07\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1036,\n                  columnNumber: 25\n                }, this), \"Download\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-actions-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetSplitter,\n              className: \"new-split-button\",\n              children: \"Dividir outro PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"splitter-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Como funciona:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Selecione um arquivo PDF com pelo menos 2 p\\xE1ginas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"O PDF ser\\xE1 dividido automaticamente pela metade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Se o PDF tiver n\\xFAmero \\xEDmpar de p\\xE1ginas, a primeira parte ter\\xE1 uma p\\xE1gina a mais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Os arquivos s\\xE3o processados localmente no seu navegador (sem upload para servidor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Seus dados permanecem seguros e privados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"api-info\",\n        children: [\"Ambiente: \", (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.env) || 'Desconectado', \" | API: \", API_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1069,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 581,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s7c6kTDuaVyKTEJ0hfax+4ld+Ww=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","ErrorHandler","jsxDEV","_jsxDEV","Fragment","_Fragment","getApiUrl","window","location","hostname","API_URL","App","_s","files","setFiles","summaries","setSummaries","patientName","setPatientName","loading","setLoading","error","setError","apiStatus","setApiStatus","uploadStatus","setUploadStatus","processingStage","setProcessingStage","currentProcessingFile","setCurrentProcessingFile","processedFiles","setProcessedFiles","totalFiles","setTotalFiles","dragOver","setDragOver","activeTab","setActiveTab","selectedFileForSplit","setSelectedFileForSplit","isSplitting","setIsSplitting","splitError","setSplitError","splitSuccess","setSplitSuccess","splitFiles","setSplitFiles","dragOverSplitter","setDragOverSplitter","textAreaRef","fileInputRef","splitFileInputRef","loadPDFLib","PDFLib","script","document","createElement","src","head","appendChild","Promise","resolve","reject","onload","Error","onerror","checkApiStatus","status","message","url","response","fetch","ok","data","json","env","retryApiConnection","setTimeout","handleReset","current","value","resetSplitter","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","droppedFiles","Array","from","dataTransfer","pdfFiles","filter","file","type","length","prevFiles","handleSplitterDragOver","handleSplitterDragLeave","handleSplitterDrop","pdfFile","find","handleFileChange","selectedFiles","target","handleSplitFileChange","removeFile","index","_","i","clearAllFiles","splitPDF","arrayBuffer","pdfDoc","PDFDocument","load","totalPages","getPageCount","middlePage","Math","ceil","firstPdf","create","firstHalfPages","copyPages","forEach","page","addPage","secondPdf","secondHalfPages","firstPdfBytes","save","secondPdfBytes","originalName","name","replace","firstName","secondName","splitResults","bytes","pages","blob","Blob","console","downloadFile","fileData","URL","createObjectURL","link","href","download","body","click","removeChild","revokeObjectURL","downloadAll","handleSubmit","stage","timestamp","Date","toLocaleTimeString","allSummaries","fileErrors","patientNames","fileNumber","formData","FormData","append","substring","method","errorMessage","statusText","errorData","jsonError","fileSummaries","map","summary","fileName","processedAt","push","details","err","join","getSimplifiedTextForCopy","resultsByFile","results","lines","content","split","line","trim","match","formattedText","isFirstFile","Object","keys","uniqueResults","Set","result","copyToClipboard","navigator","clipboard","isSecureContext","writeText","select","execCommand","originalText","style","background","color","calculateProgress","round","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onRetry","onDragOver","onDragLeave","onDrop","onSubmit","id","ref","onChange","accept","multiple","htmlFor","disabled","fileSizeMB","size","isOverLimit","toFixed","some","width","readOnly","placeholder","display","_c","$RefreshReg$"],"sources":["C:/Users/confi/Downloads/pdf-summarizer/client/src/App.js"],"sourcesContent":["// App.js - Versão com Divisor de PDF Integrado\r\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport ErrorHandler from './components/ErrorHandler';\r\n\r\n// Função para determinar a URL da API baseada no ambiente\r\nfunction getApiUrl() {\r\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n    return 'http://localhost:5000';\r\n  }\r\n  return 'https://server-theta-murex.vercel.app';\r\n}\r\n\r\nconst API_URL = getApiUrl();\r\n\r\nfunction App() {\r\n  const [files, setFiles] = useState([]);\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [patientName, setPatientName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [apiStatus, setApiStatus] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [processingStage, setProcessingStage] = useState(null);\r\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\r\n  const [processedFiles, setProcessedFiles] = useState(0);\r\n  const [totalFiles, setTotalFiles] = useState(0);\r\n  const [dragOver, setDragOver] = useState(false);\r\n  \r\n  // Estados para o divisor de PDF\r\n  const [activeTab, setActiveTab] = useState('extractor'); // 'extractor' ou 'splitter'\r\n  const [selectedFileForSplit, setSelectedFileForSplit] = useState(null);\r\n  const [isSplitting, setIsSplitting] = useState(false);\r\n  const [splitError, setSplitError] = useState(null);\r\n  const [splitSuccess, setSplitSuccess] = useState(null);\r\n  const [splitFiles, setSplitFiles] = useState([]);\r\n  const [dragOverSplitter, setDragOverSplitter] = useState(false);\r\n  \r\n  const textAreaRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const splitFileInputRef = useRef(null);\r\n\r\n  // Função para carregar PDF-lib dinamicamente\r\n  const loadPDFLib = useCallback(async () => {\r\n    if (window.PDFLib) return window.PDFLib;\r\n    \r\n    const script = document.createElement('script');\r\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js';\r\n    document.head.appendChild(script);\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      script.onload = () => {\r\n        if (window.PDFLib) {\r\n          resolve(window.PDFLib);\r\n        } else {\r\n          reject(new Error('Falha ao carregar PDF-lib'));\r\n        }\r\n      };\r\n      script.onerror = () => reject(new Error('Erro ao carregar PDF-lib'));\r\n    });\r\n  }, []);\r\n\r\n  // Verificar status da API ao carregar\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      setApiStatus({ status: 'checking', message: 'Verificando conexão...', url: API_URL });\r\n      \r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({\r\n            status: 'online',\r\n            env: data.env,\r\n            url: API_URL\r\n          });\r\n        } else {\r\n          setApiStatus({\r\n            status: 'error',\r\n            message: `Erro ${response.status}`,\r\n            url: API_URL\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({\r\n          status: 'offline',\r\n          message: 'Servidor indisponível',\r\n          error: error.message,\r\n          url: API_URL\r\n        });\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  // Função para reconectar com a API\r\n  const retryApiConnection = useCallback(() => {\r\n    setApiStatus({ status: 'checking', message: 'Reconectando...', url: API_URL });\r\n    setTimeout(async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({ status: 'online', env: data.env, url: API_URL });\r\n          setError(null);\r\n        } else {\r\n          setApiStatus({ status: 'error', message: `Erro ${response.status}`, url: API_URL });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({ status: 'offline', message: 'Servidor indisponível', url: API_URL });\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  // Função para resetar o estado do extrator\r\n  const handleReset = useCallback(() => {\r\n    setSummaries([]);\r\n    setPatientName('');\r\n    setError(null);\r\n    setFiles([]);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n    setCurrentProcessingFile(null);\r\n    setProcessedFiles(0);\r\n    setTotalFiles(0);\r\n    \r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Função para resetar o estado do divisor\r\n  const resetSplitter = useCallback(() => {\r\n    setSelectedFileForSplit(null);\r\n    setSplitFiles([]);\r\n    setSplitError(null);\r\n    setSplitSuccess(null);\r\n    if (splitFileInputRef.current) {\r\n      splitFileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Handlers para drag and drop do extrator\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\r\n      setError('Por favor, solte apenas arquivos PDF válidos.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\r\n    setError(null);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n  }, []);\r\n\r\n  // Handlers para drag and drop do divisor\r\n  const handleSplitterDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOverSplitter(true);\r\n  }, []);\r\n\r\n  const handleSplitterDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOverSplitter(false);\r\n  }, []);\r\n\r\n  const handleSplitterDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOverSplitter(false);\r\n    \r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    const pdfFile = droppedFiles.find(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFile) {\r\n      setSelectedFileForSplit(pdfFile);\r\n      setSplitError(null);\r\n      setSplitFiles([]);\r\n      setSplitSuccess(null);\r\n    } else {\r\n      setSplitError('Por favor, solte apenas um arquivo PDF válido.');\r\n      setTimeout(() => setSplitError(null), 3000);\r\n    }\r\n  }, []);\r\n\r\n  const handleFileChange = useCallback((e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n    \r\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\r\n      setError('Por favor, selecione apenas arquivos PDF válidos.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\r\n    setError(null);\r\n  }, []);\r\n\r\n  const handleSplitFileChange = useCallback((e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type === 'application/pdf') {\r\n      setSelectedFileForSplit(file);\r\n      setSplitError(null);\r\n      setSplitFiles([]);\r\n      setSplitSuccess(null);\r\n    } else if (file) {\r\n      setSplitError('Por favor, selecione apenas arquivos PDF válidos.');\r\n      setTimeout(() => setSplitError(null), 3000);\r\n    }\r\n  }, []);\r\n\r\n  // Função para remover arquivo do extrator\r\n  const removeFile = useCallback((index) => {\r\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  // Função para limpar todos os arquivos do extrator\r\n  const clearAllFiles = useCallback(() => {\r\n    setFiles([]);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Função principal para dividir PDF\r\n  const splitPDF = useCallback(async () => {\r\n    if (!selectedFileForSplit) {\r\n      setSplitError('Por favor, selecione um arquivo PDF primeiro.');\r\n      return;\r\n    }\r\n\r\n    setIsSplitting(true);\r\n    setSplitError(null);\r\n    setSplitSuccess(null);\r\n    setSplitFiles([]);\r\n\r\n    try {\r\n      const PDFLib = await loadPDFLib();\r\n      const arrayBuffer = await selectedFileForSplit.arrayBuffer();\r\n      const pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer);\r\n      \r\n      const totalPages = pdfDoc.getPageCount();\r\n      \r\n      if (totalPages < 2) {\r\n        setSplitError('O PDF deve ter pelo menos 2 páginas para ser dividido.');\r\n        setIsSplitting(false);\r\n        return;\r\n      }\r\n\r\n      const middlePage = Math.ceil(totalPages / 2);\r\n\r\n      // Criar primeiro PDF (primeira metade)\r\n      const firstPdf = await PDFLib.PDFDocument.create();\r\n      const firstHalfPages = await firstPdf.copyPages(pdfDoc, Array.from({ length: middlePage }, (_, i) => i));\r\n      firstHalfPages.forEach(page => firstPdf.addPage(page));\r\n\r\n      // Criar segundo PDF (segunda metade)\r\n      const secondPdf = await PDFLib.PDFDocument.create();\r\n      const secondHalfPages = await secondPdf.copyPages(pdfDoc, Array.from({ length: totalPages - middlePage }, (_, i) => i + middlePage));\r\n      secondHalfPages.forEach(page => secondPdf.addPage(page));\r\n\r\n      // Gerar os PDFs como bytes\r\n      const firstPdfBytes = await firstPdf.save();\r\n      const secondPdfBytes = await secondPdf.save();\r\n\r\n      // Criar nomes para os arquivos\r\n      const originalName = selectedFileForSplit.name.replace('.pdf', '');\r\n      const firstName = `${originalName}_parte1.pdf`;\r\n      const secondName = `${originalName}_parte2.pdf`;\r\n\r\n      // Criar objetos de arquivo para download\r\n      const splitResults = [\r\n        {\r\n          name: firstName,\r\n          bytes: firstPdfBytes,\r\n          pages: middlePage,\r\n          blob: new Blob([firstPdfBytes], { type: 'application/pdf' })\r\n        },\r\n        {\r\n          name: secondName,\r\n          bytes: secondPdfBytes,\r\n          pages: totalPages - middlePage,\r\n          blob: new Blob([secondPdfBytes], { type: 'application/pdf' })\r\n        }\r\n      ];\r\n\r\n      setSplitFiles(splitResults);\r\n      setSplitSuccess(`PDF dividido com sucesso! Total de ${totalPages} páginas divididas em 2 arquivos.`);\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao dividir PDF:', error);\r\n      setSplitError('Erro ao processar o PDF. Verifique se o arquivo não está corrompido ou protegido por senha.');\r\n    } finally {\r\n      setIsSplitting(false);\r\n    }\r\n  }, [selectedFileForSplit, loadPDFLib]);\r\n\r\n  // Função para download de arquivo\r\n  const downloadFile = useCallback((fileData) => {\r\n    const url = URL.createObjectURL(fileData.blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = fileData.name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  }, []);\r\n\r\n  // Função para download de todos os arquivos\r\n  const downloadAll = useCallback(() => {\r\n    splitFiles.forEach((fileData, index) => {\r\n      setTimeout(() => downloadFile(fileData), index * 100);\r\n    });\r\n  }, [splitFiles, downloadFile]);\r\n\r\n  // Função principal de upload e processamento (existente)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (files.length === 0) {\r\n      setError('Por favor, selecione pelo menos um arquivo PDF válido.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setUploadStatus({ \r\n      stage: 'iniciando', \r\n      message: 'Iniciando processamento...',\r\n      timestamp: new Date().toLocaleTimeString()\r\n    });\r\n    setProcessingStage('upload');\r\n    setTotalFiles(files.length);\r\n    setProcessedFiles(0);\r\n\r\n    const allSummaries = [];\r\n    const fileErrors = [];\r\n    const patientNames = {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      const fileNumber = i + 1;\r\n      setCurrentProcessingFile(file.name);\r\n      \r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('pdf', file);\r\n        \r\n        setUploadStatus({ \r\n          stage: 'enviando', \r\n          message: `Enviando ${fileNumber}/${files.length}: ${file.name.substring(0, 30)}${file.name.length > 30 ? '...' : ''}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        const response = await fetch(`${API_URL}/api/upload`, {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        \r\n        setProcessingStage('processing');\r\n        setUploadStatus({ \r\n          stage: 'processando', \r\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          let errorMessage = `Erro ${response.status}: ${response.statusText}`;\r\n          try {\r\n            const errorData = await response.json();\r\n            if (errorData.message) {\r\n              errorMessage = errorData.message;\r\n            }\r\n          } catch (jsonError) {\r\n            // Continuar com mensagem padrão\r\n          }\r\n          throw new Error(`Erro no arquivo ${file.name}: ${errorMessage}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (!data.summaries || data.summaries.length === 0) {\r\n          throw new Error(`Não foi possível extrair informações do documento ${file.name}.`);\r\n        }\r\n        \r\n        if (data.patientName) {\r\n          patientNames[file.name] = data.patientName;\r\n        }\r\n        \r\n        const fileSummaries = data.summaries.map(summary => ({\r\n          ...summary,\r\n          fileName: file.name,\r\n          patientName: data.patientName,\r\n          processedAt: new Date().toLocaleTimeString()\r\n        }));\r\n        \r\n        allSummaries.push(...fileSummaries);\r\n        \r\n        if (i === 0 && data.patientName) {\r\n          setPatientName(data.patientName);\r\n        }\r\n        \r\n        setProcessedFiles(i + 1);\r\n        \r\n      } catch (error) {\r\n        console.error(`Erro ao processar ${file.name}:`, error);\r\n        fileErrors.push({ \r\n          fileName: file.name, \r\n          error: error.message,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n      }\r\n    }\r\n    \r\n    setProcessingStage('complete');\r\n    \r\n    if (allSummaries.length > 0) {\r\n      setSummaries(allSummaries);\r\n      \r\n      if (fileErrors.length > 0) {\r\n        setUploadStatus({ \r\n          stage: 'aviso', \r\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\r\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        const errorMessage = fileErrors.map(err => \r\n          `${err.fileName}: ${err.error}`\r\n        ).join('\\n');\r\n        setError(`Alguns arquivos não puderam ser processados:\\n\\n${errorMessage}`);\r\n      } else {\r\n        setUploadStatus({ \r\n          stage: 'sucesso', \r\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\r\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        setError(null);\r\n      }\r\n    } else {\r\n      setUploadStatus({ \r\n        stage: 'erro', \r\n        message: 'Nenhum resultado foi extraído dos arquivos.',\r\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\r\n        timestamp: new Date().toLocaleTimeString()\r\n      });\r\n      \r\n      const errorMessage = fileErrors.map(err => \r\n        `${err.fileName}: ${err.error}`\r\n      ).join('\\n');\r\n      setError(`Falha ao processar todos os arquivos:\\n\\n${errorMessage}`);\r\n    }\r\n    \r\n    setLoading(false);\r\n    setCurrentProcessingFile(null);\r\n  };\r\n\r\n  // Gerar texto formatado para cópia\r\n  const getSimplifiedTextForCopy = useCallback(() => {\r\n    if (summaries.length === 0) return '';\r\n    \r\n    const resultsByFile = {};\r\n    \r\n    summaries.forEach((summary) => {\r\n      const fileName = summary.fileName || 'arquivo_desconhecido';\r\n      \r\n      if (!resultsByFile[fileName]) {\r\n        resultsByFile[fileName] = {\r\n          patientName: summary.patientName || patientName || \"Paciente\",\r\n          results: [],\r\n          processedAt: summary.processedAt\r\n        };\r\n      }\r\n      \r\n      const lines = summary.content.split('\\n');\r\n      lines.forEach((line) => {\r\n        if (line.trim() && \r\n            !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && \r\n            !line.match(/^Paciente:/i)) {\r\n          resultsByFile[fileName].results.push(line.trim());\r\n        }\r\n      });\r\n    });\r\n    \r\n    let formattedText = '';\r\n    let isFirstFile = true;\r\n    \r\n    Object.keys(resultsByFile).forEach((fileName) => {\r\n      if (!isFirstFile) {\r\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\r\n      } else {\r\n        isFirstFile = false;\r\n      }\r\n      \r\n      const fileData = resultsByFile[fileName];\r\n      if (fileData.patientName) {\r\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\r\n        if (fileData.processedAt) {\r\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\r\n        }\r\n        formattedText += '\\n';\r\n      }\r\n      \r\n      const uniqueResults = [...new Set(fileData.results)];\r\n      uniqueResults.forEach(result => {\r\n        formattedText += `${result}\\n`;\r\n      });\r\n    });\r\n    \r\n    return formattedText;\r\n  }, [summaries, patientName]);\r\n\r\n  // Função para copiar texto\r\n  const copyToClipboard = useCallback(async () => {\r\n    if (textAreaRef.current) {\r\n      try {\r\n        if (navigator.clipboard && window.isSecureContext) {\r\n          await navigator.clipboard.writeText(textAreaRef.current.value);\r\n        } else {\r\n          textAreaRef.current.select();\r\n          document.execCommand('copy');\r\n        }\r\n        \r\n        const originalText = textAreaRef.current.value;\r\n        textAreaRef.current.value = 'Resultados copiados com sucesso!';\r\n        textAreaRef.current.style.background = '#f0fdf4';\r\n        textAreaRef.current.style.color = '#166534';\r\n        \r\n        setTimeout(() => {\r\n          textAreaRef.current.value = originalText;\r\n          textAreaRef.current.style.background = '';\r\n          textAreaRef.current.style.color = '';\r\n        }, 2000);\r\n        \r\n      } catch (err) {\r\n        console.error('Erro ao copiar:', err);\r\n        const originalText = textAreaRef.current.value;\r\n        textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\r\n        textAreaRef.current.style.background = '#fef2f2';\r\n        textAreaRef.current.style.color = '#dc2626';\r\n        \r\n        setTimeout(() => {\r\n          textAreaRef.current.value = originalText;\r\n          textAreaRef.current.style.background = '';\r\n          textAreaRef.current.style.color = '';\r\n        }, 3000);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Calcular progresso\r\n  const calculateProgress = useCallback(() => {\r\n    if (totalFiles === 0) return 0;\r\n    return Math.round((processedFiles / totalFiles) * 100);\r\n  }, [processedFiles, totalFiles]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"institute-logo\">\r\n          <span className=\"logo-text\">Instituto Paulo Godoi</span>\r\n        </div>\r\n        <h1>Sistema de Processamento de Documentos</h1>\r\n        <p className=\"subtitle\">Extração de resultados e ferramentas para PDFs laboratoriais</p>\r\n        \r\n        {/* Status da API */}\r\n        {apiStatus && (\r\n          <div className={`api-status ${apiStatus.status}`}>\r\n            <span className=\"status-indicator\"></span>\r\n            {apiStatus.status === 'online' ? (\r\n              <span>Conectado ({apiStatus.env})</span>\r\n            ) : apiStatus.status === 'checking' ? (\r\n              <span>Verificando...</span>\r\n            ) : (\r\n              <span>{apiStatus.message}\r\n                <button className=\"retry-button\" onClick={retryApiConnection}>\r\n                  Tentar novamente\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </header>\r\n      \r\n      <main>\r\n        {/* Error Handler para problemas de API */}\r\n        {(apiStatus?.status === 'offline' || apiStatus?.status === 'error') && activeTab === 'extractor' && (\r\n          <ErrorHandler \r\n            error={`Não foi possível conectar ao servidor. ${apiStatus.message}`}\r\n            onRetry={retryApiConnection}\r\n          />\r\n        )}\r\n\r\n        {/* Navegação por Abas */}\r\n        <div className=\"tab-navigation\">\r\n          <button \r\n            className={`tab-button ${activeTab === 'extractor' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('extractor')}\r\n          >\r\n            <span className=\"tab-icon\">📋</span>\r\n            Extrator de Resultados\r\n          </button>\r\n          <button \r\n            className={`tab-button ${activeTab === 'splitter' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('splitter')}\r\n          >\r\n            <span className=\"tab-icon\">✂️</span>\r\n            Divisor de PDF\r\n          </button>\r\n        </div>\r\n\r\n        {/* Conteúdo da aba Extrator */}\r\n        {activeTab === 'extractor' && (\r\n          <>\r\n            {/* Aviso sobre limite de tamanho */}\r\n            <div className=\"size-warning-card\">\r\n              <div className=\"warning-header\">\r\n                <span className=\"warning-icon\">⚠️</span>\r\n                <h3>Limite de Tamanho para Extração</h3>\r\n              </div>\r\n              <div className=\"warning-content\">\r\n                <p>\r\n                  <strong>PDFs com mais de 4MB precisam ser divididos antes da extração.</strong>\r\n                </p>\r\n                <p>\r\n                  Use a aba <button \r\n                    className=\"tab-link-button\" \r\n                    onClick={() => setActiveTab('splitter')}\r\n                  >\r\n                    ✂️ Divisor de PDF\r\n                  </button> para cortar arquivos grandes em partes menores.\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div \r\n              className={`uploader-container ${dragOver ? 'drag-over' : ''}`}\r\n              onDragOver={handleDragOver}\r\n              onDragLeave={handleDragLeave}\r\n              onDrop={handleDrop}\r\n            >\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"file-input-container\">\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"pdf-upload\"\r\n                    ref={fileInputRef}\r\n                    onChange={handleFileChange}\r\n                    accept=\"application/pdf\"\r\n                    multiple\r\n                  />\r\n                  <label htmlFor=\"pdf-upload\" className={`file-label ${dragOver ? 'drag-active' : ''}`}>\r\n                    {dragOver ? (\r\n                      'Solte os arquivos PDF aqui'\r\n                    ) : files.length > 0 ? (\r\n                      `${files.length} arquivo(s) selecionado(s)`\r\n                    ) : (\r\n                      'Escolher arquivos PDF ou arrastar aqui'\r\n                    )}\r\n                  </label>\r\n                </div>\r\n                \r\n                {/* Lista de arquivos selecionados */}\r\n                {files.length > 0 && (\r\n                  <div className=\"selected-files-container\">\r\n                    <h3>Arquivos Selecionados</h3>\r\n                    <div className=\"files-actions\">\r\n                      <button \r\n                        type=\"button\" \r\n                        className=\"clear-files-button\" \r\n                        onClick={clearAllFiles}\r\n                        disabled={loading}\r\n                      >\r\n                        Remover todos\r\n                      </button>\r\n                    </div>\r\n                    <ul className=\"selected-files-list\">\r\n                      {files.map((file, index) => {\r\n                        const fileSizeMB = file.size / 1024 / 1024;\r\n                        const isOverLimit = fileSizeMB > 4;\r\n                        return (\r\n                          <li key={`${file.name}-${index}`} className={`file-item ${isOverLimit ? 'file-over-limit' : ''}`}>\r\n                            <span className=\"file-name\">\r\n                              <span className=\"pdf-icon\">📄</span>\r\n                              {file.name}\r\n                              <span className={`file-size ${isOverLimit ? 'size-warning' : ''}`}>\r\n                                ({fileSizeMB.toFixed(1)} MB)\r\n                                {isOverLimit && <span className=\"size-alert\">⚠️ Muito grande</span>}\r\n                              </span>\r\n                            </span>\r\n                            <button \r\n                              type=\"button\" \r\n                              className=\"remove-file-button\" \r\n                              onClick={() => removeFile(index)}\r\n                              disabled={loading}\r\n                            >\r\n                              ×\r\n                            </button>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                    {files.some(file => file.size / 1024 / 1024 > 4) && (\r\n                      <div className=\"file-size-alert\">\r\n                        <span className=\"alert-icon\">⚠️</span>\r\n                        <div className=\"alert-content\">\r\n                          <strong>Arquivos muito grandes detectados!</strong>\r\n                          <p>PDFs com mais de 4MB podem falhar na extração. \r\n                             <button \r\n                               className=\"alert-link-button\" \r\n                               onClick={() => setActiveTab('splitter')}\r\n                             >\r\n                               Clique aqui para dividir os arquivos grandes\r\n                             </button> antes de extrair os resultados.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                \r\n                <button \r\n                  type=\"submit\" \r\n                  className={`upload-button ${loading ? 'loading' : ''}`}\r\n                  disabled={files.length === 0 || apiStatus?.status !== 'online' || loading}\r\n                >\r\n                  {loading ? 'Processando...' : 'Extrair Resultados'}\r\n                </button>\r\n              </form>\r\n              \r\n              {/* Barra de progresso */}\r\n              {(processingStage === 'upload' || processingStage === 'processing') && (\r\n                <div className=\"progress-bar-container\">\r\n                  <div className=\"progress-bar\">\r\n                    <div \r\n                      className=\"progress-indicator\" \r\n                      style={{ width: `${calculateProgress()}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"progress-status\">\r\n                    {currentProcessingFile ? (\r\n                      `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${\r\n                        currentProcessingFile.length > 30 ? \r\n                        currentProcessingFile.substring(0, 30) + '...' : \r\n                        currentProcessingFile\r\n                      } (${processedFiles + 1}/${totalFiles})`\r\n                    ) : (\r\n                      processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Status de upload */}\r\n              {uploadStatus && (\r\n                <div className={`upload-status ${uploadStatus.stage}`}>\r\n                  <span className=\"status-icon\">\r\n                    {uploadStatus.stage === 'sucesso' ? '✓' : \r\n                    uploadStatus.stage === 'erro' ? '✗' : \r\n                    uploadStatus.stage === 'aviso' ? '!' : '⟳'}\r\n                  </span>\r\n                  <div className=\"status-content\">\r\n                    <div className=\"status-message\">{uploadStatus.message}</div>\r\n                    {uploadStatus.details && (\r\n                      <div className=\"status-details\">{uploadStatus.details}</div>\r\n                    )}\r\n                    {uploadStatus.timestamp && (\r\n                      <div className=\"status-timestamp\">{uploadStatus.timestamp}</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Dicas para PDFs problemáticos */}\r\n              {uploadStatus && uploadStatus.stage === 'erro' && (\r\n                <div className=\"pdf-tips\">\r\n                  <h4>Possíveis soluções:</h4>\r\n                  <ul>\r\n                    <li>Verifique se os PDFs não estão protegidos por senha</li>\r\n                    <li>Tente salvar os PDFs novamente usando \"Salvar como\"</li>\r\n                    <li>Se possível, imprima os documentos para novos PDFs</li>\r\n                    <li>Entre em contato com o laboratório para versões alternativas</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Aviso para processamento parcial */}\r\n              {uploadStatus && uploadStatus.stage === 'aviso' && (\r\n                <div className=\"processing-notice\">\r\n                  <p>Os documentos foram processados, mas alguns podem conter imprecisões.</p>\r\n                  <p>Verifique os resultados antes de usar.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {loading && !processingStage && (\r\n              <p className=\"loading\">Processando documentos, aguarde...</p>\r\n            )}\r\n            \r\n            {error && !uploadStatus && (\r\n              <p className=\"error\">{error}</p>\r\n            )}\r\n            \r\n            {/* Detalhes de erros */}\r\n            {error && uploadStatus && (\r\n              <div className=\"file-errors\">\r\n                <details>\r\n                  <summary>Detalhes dos erros</summary>\r\n                  <pre className=\"error-details\">{error}</pre>\r\n                </details>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Botão de reset */}\r\n            {summaries.length > 0 && (\r\n              <div className=\"reset-button-container\">\r\n                <button \r\n                  className=\"reset-button\"\r\n                  onClick={handleReset}\r\n                  disabled={loading}\r\n                >\r\n                  Processar novos documentos\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"summary-container\">\r\n              {summaries.length === 0 ? (\r\n                <div className=\"empty-message\">\r\n                  <p>Os resultados dos exames aparecerão aqui.</p>\r\n                  <p>Selecione arquivos PDF para começar.</p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-view-container\">\r\n                  <h2>Resultados Extraídos</h2>\r\n                  {summaries.length > 0 && (\r\n                    <div className=\"summary-info\">\r\n                      <span className=\"file-count\">{summaries.length} resultados extraídos</span>\r\n                      {files.length > 1 && (\r\n                        <span className=\"multi-file-notice\">de {files.length} arquivos</span>\r\n                      )}\r\n                      <span className=\"extraction-time\">às {new Date().toLocaleTimeString()}</span>\r\n                    </div>\r\n                  )}\r\n                  <p className=\"copy-instructions\">Lista de resultados pronta para copiar:</p>\r\n                  <div className=\"text-area-container\">\r\n                    <textarea\r\n                      ref={textAreaRef}\r\n                      className=\"results-text-area\"\r\n                      value={getSimplifiedTextForCopy()}\r\n                      readOnly\r\n                      placeholder=\"Os resultados aparecerão aqui...\"\r\n                    />\r\n                    <button \r\n                      onClick={copyToClipboard} \r\n                      className=\"copy-button\"\r\n                      disabled={summaries.length === 0}\r\n                    >\r\n                      Copiar para área de transferência\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Conteúdo da aba Divisor de PDF */}\r\n        {activeTab === 'splitter' && (\r\n          <div className=\"pdf-splitter-section\">\r\n            <div className=\"splitter-intro\">\r\n              <h2>\r\n                <span className=\"section-icon\">✂️</span>\r\n                Divisor de PDF\r\n              </h2>\r\n              <p className=\"section-description\">\r\n                <strong>Divida PDFs grandes em partes menores para extração.</strong> \r\n                Arquivos com mais de 4MB devem ser divididos antes de usar o extrator de resultados.\r\n              </p>\r\n              <div className=\"splitter-benefits\">\r\n                <div className=\"benefit-item\">\r\n                  <span className=\"benefit-icon\">🎯</span>\r\n                  <span>Ideal para PDFs com mais de 4MB</span>\r\n                </div>\r\n                <div className=\"benefit-item\">\r\n                  <span className=\"benefit-icon\">🔒</span>\r\n                  <span>Processamento 100% local e seguro</span>\r\n                </div>\r\n                <div className=\"benefit-item\">\r\n                  <span className=\"benefit-icon\">⚡</span>\r\n                  <span>Divisão rápida e automática</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div \r\n              className={`splitter-uploader-container ${dragOverSplitter ? 'drag-over' : ''}`}\r\n              onDragOver={handleSplitterDragOver}\r\n              onDragLeave={handleSplitterDragLeave}\r\n              onDrop={handleSplitterDrop}\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                id=\"pdf-split-upload\"\r\n                ref={splitFileInputRef}\r\n                onChange={handleSplitFileChange}\r\n                accept=\"application/pdf\"\r\n                style={{ display: 'none' }}\r\n              />\r\n              \r\n              <label htmlFor=\"pdf-split-upload\" className={`splitter-file-label ${dragOverSplitter ? 'drag-active' : ''}`}>\r\n                <div className=\"splitter-upload-content\">\r\n                  <span className=\"splitter-upload-icon\">\r\n                    {selectedFileForSplit ? '✓' : '📎'}\r\n                  </span>\r\n                  {selectedFileForSplit ? (\r\n                    <div className=\"selected-file-info\">\r\n                      <p className=\"selected-file-name\">{selectedFileForSplit.name}</p>\r\n                      <p className=\"selected-file-size\">\r\n                        {(selectedFileForSplit.size / 1024 / 1024).toFixed(1)} MB\r\n                      </p>\r\n                    </div>\r\n                  ) : dragOverSplitter ? (\r\n                    <div className=\"drag-message\">\r\n                      <p>Solte o arquivo PDF aqui</p>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"upload-message\">\r\n                      <p>Selecione ou arraste um arquivo PDF</p>\r\n                      <span className=\"upload-hint\">Clique aqui ou arraste e solte seu PDF</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </label>\r\n\r\n              <div className=\"splitter-actions\">\r\n                <button\r\n                  onClick={splitPDF}\r\n                  disabled={!selectedFileForSplit || isSplitting}\r\n                  className={`split-button ${isSplitting ? 'loading' : ''}`}\r\n                >\r\n                  <span className=\"button-icon\">✂️</span>\r\n                  {isSplitting ? 'Dividindo PDF...' : 'Dividir PDF em 2'}\r\n                </button>\r\n\r\n                {selectedFileForSplit && (\r\n                  <button\r\n                    onClick={resetSplitter}\r\n                    className=\"reset-splitter-button\"\r\n                    disabled={isSplitting}\r\n                  >\r\n                    Selecionar Outro\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Indicador de processamento */}\r\n            {isSplitting && (\r\n              <div className=\"split-processing\">\r\n                <div className=\"processing-spinner\"></div>\r\n                <span className=\"processing-text\">Processando PDF...</span>\r\n              </div>\r\n            )}\r\n\r\n            {/* Mensagens de erro para divisor */}\r\n            {splitError && (\r\n              <div className=\"split-error\">\r\n                <span className=\"error-icon\">✗</span>\r\n                <span className=\"error-text\">{splitError}</span>\r\n              </div>\r\n            )}\r\n\r\n            {/* Mensagem de sucesso para divisor */}\r\n            {splitSuccess && (\r\n              <div className=\"split-success\">\r\n                <span className=\"success-icon\">✓</span>\r\n                <span className=\"success-text\">{splitSuccess}</span>\r\n              </div>\r\n            )}\r\n\r\n            {/* Resultados da divisão */}\r\n            {splitFiles.length > 0 && (\r\n              <div className=\"split-results\">\r\n                <div className=\"split-results-header\">\r\n                  <h3>\r\n                    <span className=\"results-icon\">📁</span>\r\n                    Arquivos Gerados\r\n                  </h3>\r\n                  <button\r\n                    onClick={downloadAll}\r\n                    className=\"download-all-button\"\r\n                  >\r\n                    <span className=\"button-icon\">⬇</span>\r\n                    Baixar Todos\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"split-files-grid\">\r\n                  {splitFiles.map((file, index) => (\r\n                    <div key={index} className=\"split-file-card\">\r\n                      <div className=\"file-card-header\">\r\n                        <span className=\"file-card-icon\">📄</span>\r\n                        <div className=\"file-card-info\">\r\n                          <h4 className=\"file-card-name\">{file.name}</h4>\r\n                          <span className=\"file-card-pages\">{file.pages} páginas</span>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => downloadFile(file)}\r\n                        className=\"download-file-button\"\r\n                      >\r\n                        <span className=\"button-icon\">⬇</span>\r\n                        Download\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"split-actions-footer\">\r\n                  <button\r\n                    onClick={resetSplitter}\r\n                    className=\"new-split-button\"\r\n                  >\r\n                    Dividir outro PDF\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Informações sobre a ferramenta */}\r\n            <div className=\"splitter-info\">\r\n              <h4>Como funciona:</h4>\r\n              <ul>\r\n                <li>Selecione um arquivo PDF com pelo menos 2 páginas</li>\r\n                <li>O PDF será dividido automaticamente pela metade</li>\r\n                <li>Se o PDF tiver número ímpar de páginas, a primeira parte terá uma página a mais</li>\r\n                <li>Os arquivos são processados localmente no seu navegador (sem upload para servidor)</li>\r\n                <li>Seus dados permanecem seguros e privados</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n      \r\n      <footer>\r\n        <p>© 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames</p>\r\n        <p className=\"api-info\">\r\n          Ambiente: {apiStatus?.env || 'Desconectado'} | API: {API_URL}\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}