{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\confi\\\\Downloads\\\\pdf-summarizer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js - Versão Limpa e Otimizada\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport ErrorHandler from './components/ErrorHandler';\n\n// Configuração da API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getApiUrl = () => {\n  const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n  return isLocal ? 'http://localhost:5000' : 'https://server-theta-murex.vercel.app';\n};\nconst API_URL = getApiUrl();\n\n// Utilitários\nconst isMobileDevice = () => window.innerWidth <= 768 || 'ontouchstart' in window;\nconst vibrate = pattern => {\n  if ('vibrate' in navigator) {\n    navigator.vibrate(pattern);\n  }\n};\nconst scrollToElement = (selector, behavior = 'smooth') => {\n  const element = document.querySelector(selector);\n  if (element) {\n    element.scrollIntoView({\n      behavior,\n      block: 'center'\n    });\n  }\n};\nfunction App() {\n  _s();\n  // Estados principais\n  const [files, setFiles] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n  const [patientName, setPatientName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Estados de processamento\n  const [apiStatus, setApiStatus] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [processingStage, setProcessingStage] = useState(null);\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\n  const [processedFiles, setProcessedFiles] = useState(0);\n  const [totalFiles, setTotalFiles] = useState(0);\n\n  // Estados de UI\n  const [dragOver, setDragOver] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Refs\n  const textAreaRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Detectar dispositivo móvel\n  useEffect(() => {\n    const checkMobile = () => setIsMobile(isMobileDevice());\n    checkMobile();\n    const handleResize = () => checkMobile();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Verificar status da API\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      setApiStatus({\n        status: 'checking',\n        message: 'Verificando conexão...'\n      });\n      try {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 8000);\n        const response = await fetch(`${API_URL}/api/health`, {\n          signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env\n          });\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`\n          });\n        }\n      } catch (error) {\n        const message = error.name === 'AbortError' ? 'Timeout' : 'Servidor indisponível';\n        setApiStatus({\n          status: 'offline',\n          message,\n          error: error.message\n        });\n      }\n    };\n    checkApiStatus();\n  }, []);\n\n  // Função para reconectar\n  const retryConnection = useCallback(() => {\n    setApiStatus({\n      status: 'checking',\n      message: 'Reconectando...'\n    });\n    setTimeout(async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env\n          });\n          setError(null);\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Servidor indisponível'\n        });\n      }\n    }, 1000);\n  }, []);\n\n  // Resetar estado\n  const resetState = useCallback(() => {\n    setSummaries([]);\n    setPatientName('');\n    setError(null);\n    setFiles([]);\n    setUploadStatus(null);\n    setProcessingStage(null);\n    setCurrentProcessingFile(null);\n    setProcessedFiles(0);\n    setTotalFiles(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n    if (isMobile) {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n    vibrate(30);\n  }, [isMobile]);\n\n  // Gerenciar erro temporário\n  const showTempError = useCallback((message, duration = 3000) => {\n    setError(message);\n    setTimeout(() => setError(null), duration);\n  }, []);\n\n  // Handlers de drag and drop\n  const handleDragOver = useCallback(e => {\n    if (isMobile) return;\n    e.preventDefault();\n    setDragOver(true);\n  }, [isMobile]);\n  const handleDragLeave = useCallback(e => {\n    if (isMobile) return;\n    e.preventDefault();\n    setDragOver(false);\n  }, [isMobile]);\n  const handleDrop = useCallback(e => {\n    if (isMobile) return;\n    e.preventDefault();\n    setDragOver(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\n      showTempError('Por favor, solte apenas arquivos PDF válidos.');\n      return;\n    }\n    setFiles(prev => [...prev, ...pdfFiles]);\n    setError(null);\n    setUploadStatus(null);\n    vibrate(50);\n  }, [isMobile, showTempError]);\n\n  // Handler de seleção de arquivos\n  const handleFileChange = useCallback(e => {\n    const selectedFiles = Array.from(e.target.files);\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\n      showTempError('Por favor, selecione apenas arquivos PDF válidos.');\n      return;\n    }\n    setFiles(prev => [...prev, ...pdfFiles]);\n    setError(null);\n    setUploadStatus(null);\n    vibrate(50);\n  }, [showTempError]);\n\n  // Remover arquivo específico\n  const removeFile = useCallback(index => {\n    setFiles(prev => prev.filter((_, i) => i !== index));\n    vibrate(30);\n  }, []);\n\n  // Limpar todos os arquivos\n  const clearAllFiles = useCallback(() => {\n    setFiles([]);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n    vibrate([30, 50, 30]);\n  }, []);\n\n  // Função principal de upload\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (files.length === 0) {\n      showTempError('Por favor, selecione pelo menos um arquivo PDF válido.');\n      return;\n    }\n\n    // Configurar estado inicial\n    setLoading(true);\n    setError(null);\n    setProcessingStage('upload');\n    setTotalFiles(files.length);\n    setProcessedFiles(0);\n    setUploadStatus({\n      stage: 'iniciando',\n      message: 'Iniciando processamento...',\n      timestamp: new Date().toLocaleTimeString()\n    });\n\n    // Scroll para progresso em mobile\n    if (isMobile) {\n      setTimeout(() => scrollToElement('.progress-bar-container'), 500);\n    }\n\n    // Configurar wake lock para mobile\n    let wakeLock = null;\n    if (isMobile && 'wakeLock' in navigator) {\n      try {\n        wakeLock = await navigator.wakeLock.request('screen');\n      } catch (err) {\n        console.log('Wake Lock não disponível:', err);\n      }\n    }\n    const allSummaries = [];\n    const fileErrors = [];\n\n    // Processar cada arquivo\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const fileNumber = i + 1;\n      setCurrentProcessingFile(file.name);\n      try {\n        // Preparar dados\n        const formData = new FormData();\n        formData.append('pdf', file);\n        const shortName = file.name.length > (isMobile ? 20 : 30) ? file.name.substring(0, isMobile ? 20 : 30) + '...' : file.name;\n\n        // Upload\n        setUploadStatus({\n          stage: 'enviando',\n          message: `Enviando ${fileNumber}/${files.length}: ${shortName}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        const response = await fetch(`${API_URL}/api/upload`, {\n          method: 'POST',\n          body: formData\n        });\n\n        // Processamento\n        setProcessingStage('processing');\n        setUploadStatus({\n          stage: 'processando',\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        if (!response.ok) {\n          let errorMessage = `Erro ${response.status}`;\n          try {\n            const errorData = await response.json();\n            if (errorData.message) errorMessage = errorData.message;\n          } catch (jsonError) {\n            // Usar mensagem padrão\n          }\n          throw new Error(errorMessage);\n        }\n        const data = await response.json();\n        if (!data.summaries || data.summaries.length === 0) {\n          throw new Error('Não foi possível extrair informações do documento.');\n        }\n\n        // Processar resultados\n        const fileSummaries = data.summaries.map(summary => ({\n          ...summary,\n          fileName: file.name,\n          patientName: data.patientName,\n          processedAt: new Date().toLocaleTimeString()\n        }));\n        allSummaries.push(...fileSummaries);\n        if (i === 0 && data.patientName) {\n          setPatientName(data.patientName);\n        }\n        setProcessedFiles(i + 1);\n        vibrate(20);\n      } catch (error) {\n        console.error(`Erro ao processar ${file.name}:`, error);\n        fileErrors.push({\n          fileName: file.name,\n          error: error.message,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        vibrate([100, 50, 100]);\n      }\n    }\n\n    // Finalizar processamento\n    setProcessingStage('complete');\n    if (wakeLock) {\n      wakeLock.release();\n    }\n\n    // Processar resultados finais\n    if (allSummaries.length > 0) {\n      setSummaries(allSummaries);\n      if (fileErrors.length > 0) {\n        setUploadStatus({\n          stage: 'aviso',\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n        setError(`Alguns arquivos falharam:\\n\\n${errorMessage}`);\n      } else {\n        setUploadStatus({\n          stage: 'sucesso',\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        vibrate([200, 100, 200]);\n\n        // Scroll para resultados\n        if (isMobile) {\n          setTimeout(() => scrollToElement('.text-view-container'), 1000);\n        }\n      }\n    } else {\n      setUploadStatus({\n        stage: 'erro',\n        message: 'Nenhum resultado foi extraído dos arquivos.',\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\n        timestamp: new Date().toLocaleTimeString()\n      });\n      const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n      setError(`Falha em todos os arquivos:\\n\\n${errorMessage}`);\n      vibrate([300, 100, 300, 100, 300]);\n    }\n    setLoading(false);\n    setCurrentProcessingFile(null);\n  };\n\n  // Gerar texto para cópia\n  const getFormattedText = useCallback(() => {\n    if (summaries.length === 0) return '';\n    const resultsByFile = {};\n    summaries.forEach(summary => {\n      const fileName = summary.fileName || 'arquivo_desconhecido';\n      if (!resultsByFile[fileName]) {\n        resultsByFile[fileName] = {\n          patientName: summary.patientName || patientName || \"Paciente\",\n          results: [],\n          processedAt: summary.processedAt\n        };\n      }\n      const lines = summary.content.split('\\n');\n      lines.forEach(line => {\n        if (line.trim() && !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && !line.match(/^Paciente:/i)) {\n          resultsByFile[fileName].results.push(line.trim());\n        }\n      });\n    });\n    let formattedText = '';\n    let isFirstFile = true;\n    Object.keys(resultsByFile).forEach(fileName => {\n      if (!isFirstFile) {\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\n      } else {\n        isFirstFile = false;\n      }\n      const fileData = resultsByFile[fileName];\n      if (fileData.patientName) {\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\n        if (fileData.processedAt) {\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\n        }\n        formattedText += '\\n';\n      }\n      const uniqueResults = [...new Set(fileData.results)];\n      uniqueResults.forEach(result => {\n        formattedText += `${result}\\n`;\n      });\n    });\n    return formattedText;\n  }, [summaries, patientName]);\n\n  // Copiar para clipboard\n  const copyToClipboard = useCallback(async () => {\n    if (!textAreaRef.current) return;\n    try {\n      if (navigator.clipboard && window.isSecureContext) {\n        await navigator.clipboard.writeText(textAreaRef.current.value);\n      } else {\n        textAreaRef.current.select();\n        textAreaRef.current.setSelectionRange(0, 99999);\n        document.execCommand('copy');\n      }\n\n      // Feedback visual\n      const originalText = textAreaRef.current.value;\n      textAreaRef.current.value = 'Resultados copiados com sucesso!';\n      textAreaRef.current.style.background = '#f0fdf4';\n      textAreaRef.current.style.color = '#166534';\n      vibrate([50, 30, 50]);\n      setTimeout(() => {\n        textAreaRef.current.value = originalText;\n        textAreaRef.current.style.background = '';\n        textAreaRef.current.style.color = '';\n      }, 2000);\n    } catch (err) {\n      console.error('Erro ao copiar:', err);\n      const originalText = textAreaRef.current.value;\n      textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\n      textAreaRef.current.style.background = '#fef2f2';\n      textAreaRef.current.style.color = '#dc2626';\n      vibrate([100, 50, 100]);\n      setTimeout(() => {\n        textAreaRef.current.value = originalText;\n        textAreaRef.current.style.background = '';\n        textAreaRef.current.style.color = '';\n      }, 3000);\n    }\n  }, []);\n\n  // Calcular progresso\n  const getProgress = useCallback(() => {\n    return totalFiles === 0 ? 0 : Math.round(processedFiles / totalFiles * 100);\n  }, [processedFiles, totalFiles]);\n\n  // Truncar nome do arquivo\n  const truncateFileName = useCallback(fileName => {\n    const maxLength = isMobile ? 25 : 40;\n    return fileName.length > maxLength ? fileName.substring(0, maxLength) + '...' : fileName;\n  }, [isMobile]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"institute-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Instituto Paulo Godoi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Extrator de Resultados de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: isMobile ? 'Sistema para processamento de laudos' : 'Sistema interno para processamento de laudos laboratoriais'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), apiStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `api-status ${apiStatus.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this), apiStatus.status === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isMobile ? 'Online' : `Conectado (${apiStatus.env})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 15\n        }, this) : apiStatus.status === 'checking' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Verificando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [isMobile ? 'Offline' : apiStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: retryConnection,\n            children: isMobile ? 'Reconectar' : 'Tentar novamente'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [((apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'offline' || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'error') && /*#__PURE__*/_jsxDEV(ErrorHandler, {\n        error: `Não foi possível conectar ao servidor. ${apiStatus.message}`,\n        onRetry: retryConnection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `uploader-container ${dragOver ? 'drag-over' : ''}`,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"pdf-upload\",\n              ref: fileInputRef,\n              onChange: handleFileChange,\n              accept: \"application/pdf\",\n              multiple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pdf-upload\",\n              className: `file-label ${dragOver ? 'drag-active' : ''}`,\n              children: dragOver ? 'Solte os arquivos PDF aqui' : files.length > 0 ? `${files.length} arquivo(s) selecionado(s)` : isMobile ? 'Tocar para selecionar PDFs' : 'Escolher arquivos PDF ou arrastar aqui'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-files-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Arquivos Selecionados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"files-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"clear-files-button\",\n                onClick: clearAllFiles,\n                disabled: loading,\n                children: isMobile ? 'Limpar' : 'Remover todos'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"selected-files-list\",\n              children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"file-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"pdf-icon\",\n                    children: \"\\uD83D\\uDCC4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 25\n                  }, this), truncateFileName(file.name), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-size\",\n                    children: [\"(\", (file.size / 1024).toFixed(1), \" KB)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"remove-file-button\",\n                  onClick: () => removeFile(index),\n                  disabled: loading,\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 23\n                }, this)]\n              }, `${file.name}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `upload-button ${loading ? 'loading' : ''}`,\n            disabled: files.length === 0 || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) !== 'online' || loading,\n            children: loading ? 'Processando...' : 'Extrair Resultados'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), (processingStage === 'upload' || processingStage === 'processing') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-indicator\",\n              style: {\n                width: `${getProgress()}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-status\",\n            children: currentProcessingFile ? `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${truncateFileName(currentProcessingFile)} (${processedFiles + 1}/${totalFiles})` : processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `upload-status ${uploadStatus.stage}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-icon\",\n            children: uploadStatus.stage === 'sucesso' ? '✓' : uploadStatus.stage === 'erro' ? '✗' : uploadStatus.stage === 'aviso' ? '!' : '⟳'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-message\",\n              children: uploadStatus.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this), uploadStatus.details && !isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-details\",\n              children: uploadStatus.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 19\n            }, this), uploadStatus.timestamp && !isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-timestamp\",\n              children: uploadStatus.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this), (uploadStatus === null || uploadStatus === void 0 ? void 0 : uploadStatus.stage) === 'erro' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdf-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Poss\\xEDveis solu\\xE7\\xF5es:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Verifique se os PDFs n\\xE3o est\\xE3o protegidos por senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Tente salvar os PDFs novamente como novos arquivos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this), !isMobile && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Entre em contato com o laborat\\xF3rio para vers\\xF5es alternativas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this), (uploadStatus === null || uploadStatus === void 0 ? void 0 : uploadStatus.stage) === 'aviso' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-notice\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Alguns documentos foram processados com poss\\xEDveis imprecis\\xF5es.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this), !isMobile && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Verifique os resultados antes de usar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), loading && !processingStage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Processando documentos, aguarde...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this), error && !uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 11\n      }, this), error && uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-errors\",\n        children: /*#__PURE__*/_jsxDEV(\"details\", {\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: \"Detalhes dos erros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"error-details\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: resetState,\n          disabled: loading,\n          children: isMobile ? 'Novo processamento' : 'Processar novos documentos'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: summaries.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Os resultados dos exames aparecer\\xE3o aqui.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this), !isMobile && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Selecione arquivos PDF para come\\xE7ar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-view-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Resultados Extra\\xEDdos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-count\",\n              children: [summaries.length, \" resultados extra\\xEDdos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 17\n            }, this), files.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"multi-file-notice\",\n              children: [\"de \", files.length, \" arquivos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this), !isMobile && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"extraction-time\",\n              children: [\"\\xE0s \", new Date().toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"copy-instructions\",\n            children: isMobile ? 'Resultados para copiar:' : 'Lista de resultados pronta para copiar:'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-area-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: textAreaRef,\n              className: \"results-text-area\",\n              value: getFormattedText(),\n              readOnly: true,\n              placeholder: \"Os resultados aparecer\\xE3o aqui...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: copyToClipboard,\n              className: \"copy-button\",\n              disabled: summaries.length === 0,\n              children: isMobile ? 'Copiar Resultados' : 'Copiar para área de transferência'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA9 2025 - Instituto Paulo Godoi\", !isMobile && ' - Sistema de Processamento de Exames']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"api-info\",\n        children: isMobile ? `${(apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.env) || 'Off'} | v2.0` : `Ambiente: ${(apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.env) || 'Desconectado'} | API: ${API_URL}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 497,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Uu+aB8sWSDXWUryhUVnbwjoO86c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","ErrorHandler","jsxDEV","_jsxDEV","getApiUrl","isLocal","window","location","hostname","API_URL","isMobileDevice","innerWidth","vibrate","pattern","navigator","scrollToElement","selector","behavior","element","document","querySelector","scrollIntoView","block","App","_s","files","setFiles","summaries","setSummaries","patientName","setPatientName","loading","setLoading","error","setError","apiStatus","setApiStatus","uploadStatus","setUploadStatus","processingStage","setProcessingStage","currentProcessingFile","setCurrentProcessingFile","processedFiles","setProcessedFiles","totalFiles","setTotalFiles","dragOver","setDragOver","isMobile","setIsMobile","textAreaRef","fileInputRef","checkMobile","handleResize","addEventListener","removeEventListener","checkApiStatus","status","message","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","ok","data","json","env","name","retryConnection","resetState","current","value","scrollTo","top","showTempError","duration","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","droppedFiles","Array","from","dataTransfer","pdfFiles","filter","file","type","length","prev","handleFileChange","selectedFiles","target","removeFile","index","_","i","clearAllFiles","handleSubmit","stage","timestamp","Date","toLocaleTimeString","wakeLock","request","err","console","log","allSummaries","fileErrors","fileNumber","formData","FormData","append","shortName","substring","method","body","errorMessage","errorData","jsonError","Error","fileSummaries","map","summary","fileName","processedAt","push","release","details","join","getFormattedText","resultsByFile","forEach","results","lines","content","split","line","trim","match","formattedText","isFirstFile","Object","keys","fileData","uniqueResults","Set","result","copyToClipboard","clipboard","isSecureContext","writeText","select","setSelectionRange","execCommand","originalText","style","background","color","getProgress","Math","round","truncateFileName","maxLength","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onRetry","onDragOver","onDragLeave","onDrop","onSubmit","id","ref","onChange","accept","multiple","htmlFor","disabled","size","toFixed","width","readOnly","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/confi/Downloads/pdf-summarizer/client/src/App.js"],"sourcesContent":["// App.js - Versão Limpa e Otimizada\r\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport ErrorHandler from './components/ErrorHandler';\r\n\r\n// Configuração da API\r\nconst getApiUrl = () => {\r\n  const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n  return isLocal ? 'http://localhost:5000' : 'https://server-theta-murex.vercel.app';\r\n};\r\n\r\nconst API_URL = getApiUrl();\r\n\r\n// Utilitários\r\nconst isMobileDevice = () => window.innerWidth <= 768 || 'ontouchstart' in window;\r\n\r\nconst vibrate = (pattern) => {\r\n  if ('vibrate' in navigator) {\r\n    navigator.vibrate(pattern);\r\n  }\r\n};\r\n\r\nconst scrollToElement = (selector, behavior = 'smooth') => {\r\n  const element = document.querySelector(selector);\r\n  if (element) {\r\n    element.scrollIntoView({ behavior, block: 'center' });\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  // Estados principais\r\n  const [files, setFiles] = useState([]);\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [patientName, setPatientName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Estados de processamento\r\n  const [apiStatus, setApiStatus] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [processingStage, setProcessingStage] = useState(null);\r\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\r\n  const [processedFiles, setProcessedFiles] = useState(0);\r\n  const [totalFiles, setTotalFiles] = useState(0);\r\n  \r\n  // Estados de UI\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  \r\n  // Refs\r\n  const textAreaRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Detectar dispositivo móvel\r\n  useEffect(() => {\r\n    const checkMobile = () => setIsMobile(isMobileDevice());\r\n    checkMobile();\r\n    \r\n    const handleResize = () => checkMobile();\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Verificar status da API\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      setApiStatus({ status: 'checking', message: 'Verificando conexão...' });\r\n      \r\n      try {\r\n        const controller = new AbortController();\r\n        const timeoutId = setTimeout(() => controller.abort(), 8000);\r\n        \r\n        const response = await fetch(`${API_URL}/api/health`, {\r\n          signal: controller.signal\r\n        });\r\n        \r\n        clearTimeout(timeoutId);\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({ status: 'online', env: data.env });\r\n        } else {\r\n          setApiStatus({ status: 'error', message: `Erro ${response.status}` });\r\n        }\r\n      } catch (error) {\r\n        const message = error.name === 'AbortError' ? 'Timeout' : 'Servidor indisponível';\r\n        setApiStatus({ status: 'offline', message, error: error.message });\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  // Função para reconectar\r\n  const retryConnection = useCallback(() => {\r\n    setApiStatus({ status: 'checking', message: 'Reconectando...' });\r\n    setTimeout(async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({ status: 'online', env: data.env });\r\n          setError(null);\r\n        } else {\r\n          setApiStatus({ status: 'error', message: `Erro ${response.status}` });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({ status: 'offline', message: 'Servidor indisponível' });\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  // Resetar estado\r\n  const resetState = useCallback(() => {\r\n    setSummaries([]);\r\n    setPatientName('');\r\n    setError(null);\r\n    setFiles([]);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n    setCurrentProcessingFile(null);\r\n    setProcessedFiles(0);\r\n    setTotalFiles(0);\r\n    \r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n    \r\n    if (isMobile) {\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n    \r\n    vibrate(30);\r\n  }, [isMobile]);\r\n\r\n  // Gerenciar erro temporário\r\n  const showTempError = useCallback((message, duration = 3000) => {\r\n    setError(message);\r\n    setTimeout(() => setError(null), duration);\r\n  }, []);\r\n\r\n  // Handlers de drag and drop\r\n  const handleDragOver = useCallback((e) => {\r\n    if (isMobile) return;\r\n    e.preventDefault();\r\n    setDragOver(true);\r\n  }, [isMobile]);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    if (isMobile) return;\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n  }, [isMobile]);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    if (isMobile) return;\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\r\n      showTempError('Por favor, solte apenas arquivos PDF válidos.');\r\n      return;\r\n    }\r\n    \r\n    setFiles(prev => [...prev, ...pdfFiles]);\r\n    setError(null);\r\n    setUploadStatus(null);\r\n    vibrate(50);\r\n  }, [isMobile, showTempError]);\r\n\r\n  // Handler de seleção de arquivos\r\n  const handleFileChange = useCallback((e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\r\n      showTempError('Por favor, selecione apenas arquivos PDF válidos.');\r\n      return;\r\n    }\r\n    \r\n    setFiles(prev => [...prev, ...pdfFiles]);\r\n    setError(null);\r\n    setUploadStatus(null);\r\n    vibrate(50);\r\n  }, [showTempError]);\r\n\r\n  // Remover arquivo específico\r\n  const removeFile = useCallback((index) => {\r\n    setFiles(prev => prev.filter((_, i) => i !== index));\r\n    vibrate(30);\r\n  }, []);\r\n\r\n  // Limpar todos os arquivos\r\n  const clearAllFiles = useCallback(() => {\r\n    setFiles([]);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n    vibrate([30, 50, 30]);\r\n  }, []);\r\n\r\n  // Função principal de upload\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (files.length === 0) {\r\n      showTempError('Por favor, selecione pelo menos um arquivo PDF válido.');\r\n      return;\r\n    }\r\n\r\n    // Configurar estado inicial\r\n    setLoading(true);\r\n    setError(null);\r\n    setProcessingStage('upload');\r\n    setTotalFiles(files.length);\r\n    setProcessedFiles(0);\r\n    \r\n    setUploadStatus({\r\n      stage: 'iniciando',\r\n      message: 'Iniciando processamento...',\r\n      timestamp: new Date().toLocaleTimeString()\r\n    });\r\n\r\n    // Scroll para progresso em mobile\r\n    if (isMobile) {\r\n      setTimeout(() => scrollToElement('.progress-bar-container'), 500);\r\n    }\r\n\r\n    // Configurar wake lock para mobile\r\n    let wakeLock = null;\r\n    if (isMobile && 'wakeLock' in navigator) {\r\n      try {\r\n        wakeLock = await navigator.wakeLock.request('screen');\r\n      } catch (err) {\r\n        console.log('Wake Lock não disponível:', err);\r\n      }\r\n    }\r\n\r\n    const allSummaries = [];\r\n    const fileErrors = [];\r\n\r\n    // Processar cada arquivo\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      const fileNumber = i + 1;\r\n      setCurrentProcessingFile(file.name);\r\n      \r\n      try {\r\n        // Preparar dados\r\n        const formData = new FormData();\r\n        formData.append('pdf', file);\r\n        \r\n        const shortName = file.name.length > (isMobile ? 20 : 30) \r\n          ? file.name.substring(0, isMobile ? 20 : 30) + '...' \r\n          : file.name;\r\n\r\n        // Upload\r\n        setUploadStatus({\r\n          stage: 'enviando',\r\n          message: `Enviando ${fileNumber}/${files.length}: ${shortName}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        const response = await fetch(`${API_URL}/api/upload`, {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        \r\n        // Processamento\r\n        setProcessingStage('processing');\r\n        setUploadStatus({\r\n          stage: 'processando',\r\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          let errorMessage = `Erro ${response.status}`;\r\n          try {\r\n            const errorData = await response.json();\r\n            if (errorData.message) errorMessage = errorData.message;\r\n          } catch (jsonError) {\r\n            // Usar mensagem padrão\r\n          }\r\n          throw new Error(errorMessage);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (!data.summaries || data.summaries.length === 0) {\r\n          throw new Error('Não foi possível extrair informações do documento.');\r\n        }\r\n        \r\n        // Processar resultados\r\n        const fileSummaries = data.summaries.map(summary => ({\r\n          ...summary,\r\n          fileName: file.name,\r\n          patientName: data.patientName,\r\n          processedAt: new Date().toLocaleTimeString()\r\n        }));\r\n        \r\n        allSummaries.push(...fileSummaries);\r\n        \r\n        if (i === 0 && data.patientName) {\r\n          setPatientName(data.patientName);\r\n        }\r\n        \r\n        setProcessedFiles(i + 1);\r\n        vibrate(20);\r\n        \r\n      } catch (error) {\r\n        console.error(`Erro ao processar ${file.name}:`, error);\r\n        fileErrors.push({\r\n          fileName: file.name,\r\n          error: error.message,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        vibrate([100, 50, 100]);\r\n      }\r\n    }\r\n    \r\n    // Finalizar processamento\r\n    setProcessingStage('complete');\r\n    \r\n    if (wakeLock) {\r\n      wakeLock.release();\r\n    }\r\n    \r\n    // Processar resultados finais\r\n    if (allSummaries.length > 0) {\r\n      setSummaries(allSummaries);\r\n      \r\n      if (fileErrors.length > 0) {\r\n        setUploadStatus({\r\n          stage: 'aviso',\r\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\r\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        const errorMessage = fileErrors\r\n          .map(err => `${err.fileName}: ${err.error}`)\r\n          .join('\\n');\r\n        setError(`Alguns arquivos falharam:\\n\\n${errorMessage}`);\r\n      } else {\r\n        setUploadStatus({\r\n          stage: 'sucesso',\r\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\r\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        vibrate([200, 100, 200]);\r\n        \r\n        // Scroll para resultados\r\n        if (isMobile) {\r\n          setTimeout(() => scrollToElement('.text-view-container'), 1000);\r\n        }\r\n      }\r\n    } else {\r\n      setUploadStatus({\r\n        stage: 'erro',\r\n        message: 'Nenhum resultado foi extraído dos arquivos.',\r\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\r\n        timestamp: new Date().toLocaleTimeString()\r\n      });\r\n      \r\n      const errorMessage = fileErrors\r\n        .map(err => `${err.fileName}: ${err.error}`)\r\n        .join('\\n');\r\n      setError(`Falha em todos os arquivos:\\n\\n${errorMessage}`);\r\n      \r\n      vibrate([300, 100, 300, 100, 300]);\r\n    }\r\n    \r\n    setLoading(false);\r\n    setCurrentProcessingFile(null);\r\n  };\r\n\r\n  // Gerar texto para cópia\r\n  const getFormattedText = useCallback(() => {\r\n    if (summaries.length === 0) return '';\r\n    \r\n    const resultsByFile = {};\r\n    \r\n    summaries.forEach((summary) => {\r\n      const fileName = summary.fileName || 'arquivo_desconhecido';\r\n      \r\n      if (!resultsByFile[fileName]) {\r\n        resultsByFile[fileName] = {\r\n          patientName: summary.patientName || patientName || \"Paciente\",\r\n          results: [],\r\n          processedAt: summary.processedAt\r\n        };\r\n      }\r\n      \r\n      const lines = summary.content.split('\\n');\r\n      lines.forEach((line) => {\r\n        if (line.trim() && \r\n            !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && \r\n            !line.match(/^Paciente:/i)) {\r\n          resultsByFile[fileName].results.push(line.trim());\r\n        }\r\n      });\r\n    });\r\n    \r\n    let formattedText = '';\r\n    let isFirstFile = true;\r\n    \r\n    Object.keys(resultsByFile).forEach((fileName) => {\r\n      if (!isFirstFile) {\r\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\r\n      } else {\r\n        isFirstFile = false;\r\n      }\r\n      \r\n      const fileData = resultsByFile[fileName];\r\n      if (fileData.patientName) {\r\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\r\n        if (fileData.processedAt) {\r\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\r\n        }\r\n        formattedText += '\\n';\r\n      }\r\n      \r\n      const uniqueResults = [...new Set(fileData.results)];\r\n      uniqueResults.forEach(result => {\r\n        formattedText += `${result}\\n`;\r\n      });\r\n    });\r\n    \r\n    return formattedText;\r\n  }, [summaries, patientName]);\r\n\r\n  // Copiar para clipboard\r\n  const copyToClipboard = useCallback(async () => {\r\n    if (!textAreaRef.current) return;\r\n    \r\n    try {\r\n      if (navigator.clipboard && window.isSecureContext) {\r\n        await navigator.clipboard.writeText(textAreaRef.current.value);\r\n      } else {\r\n        textAreaRef.current.select();\r\n        textAreaRef.current.setSelectionRange(0, 99999);\r\n        document.execCommand('copy');\r\n      }\r\n      \r\n      // Feedback visual\r\n      const originalText = textAreaRef.current.value;\r\n      textAreaRef.current.value = 'Resultados copiados com sucesso!';\r\n      textAreaRef.current.style.background = '#f0fdf4';\r\n      textAreaRef.current.style.color = '#166534';\r\n      \r\n      vibrate([50, 30, 50]);\r\n      \r\n      setTimeout(() => {\r\n        textAreaRef.current.value = originalText;\r\n        textAreaRef.current.style.background = '';\r\n        textAreaRef.current.style.color = '';\r\n      }, 2000);\r\n      \r\n    } catch (err) {\r\n      console.error('Erro ao copiar:', err);\r\n      \r\n      const originalText = textAreaRef.current.value;\r\n      textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\r\n      textAreaRef.current.style.background = '#fef2f2';\r\n      textAreaRef.current.style.color = '#dc2626';\r\n      \r\n      vibrate([100, 50, 100]);\r\n      \r\n      setTimeout(() => {\r\n        textAreaRef.current.value = originalText;\r\n        textAreaRef.current.style.background = '';\r\n        textAreaRef.current.style.color = '';\r\n      }, 3000);\r\n    }\r\n  }, []);\r\n\r\n  // Calcular progresso\r\n  const getProgress = useCallback(() => {\r\n    return totalFiles === 0 ? 0 : Math.round((processedFiles / totalFiles) * 100);\r\n  }, [processedFiles, totalFiles]);\r\n\r\n  // Truncar nome do arquivo\r\n  const truncateFileName = useCallback((fileName) => {\r\n    const maxLength = isMobile ? 25 : 40;\r\n    return fileName.length > maxLength \r\n      ? fileName.substring(0, maxLength) + '...' \r\n      : fileName;\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"institute-logo\">\r\n          <span className=\"logo-text\">Instituto Paulo Godoi</span>\r\n        </div>\r\n        <h1>Extrator de Resultados de Exames</h1>\r\n        <p className=\"subtitle\">\r\n          {isMobile \r\n            ? 'Sistema para processamento de laudos' \r\n            : 'Sistema interno para processamento de laudos laboratoriais'\r\n          }\r\n        </p>\r\n        \r\n        {apiStatus && (\r\n          <div className={`api-status ${apiStatus.status}`}>\r\n            <span className=\"status-indicator\"></span>\r\n            {apiStatus.status === 'online' ? (\r\n              <span>{isMobile ? 'Online' : `Conectado (${apiStatus.env})`}</span>\r\n            ) : apiStatus.status === 'checking' ? (\r\n              <span>Verificando...</span>\r\n            ) : (\r\n              <span>\r\n                {isMobile ? 'Offline' : apiStatus.message}\r\n                <button className=\"retry-button\" onClick={retryConnection}>\r\n                  {isMobile ? 'Reconectar' : 'Tentar novamente'}\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </header>\r\n      \r\n      <main>\r\n        {(apiStatus?.status === 'offline' || apiStatus?.status === 'error') && (\r\n          <ErrorHandler \r\n            error={`Não foi possível conectar ao servidor. ${apiStatus.message}`}\r\n            onRetry={retryConnection}\r\n          />\r\n        )}\r\n        \r\n        <div \r\n          className={`uploader-container ${dragOver ? 'drag-over' : ''}`}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n        >\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"file-input-container\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"pdf-upload\"\r\n                ref={fileInputRef}\r\n                onChange={handleFileChange}\r\n                accept=\"application/pdf\"\r\n                multiple\r\n              />\r\n              <label htmlFor=\"pdf-upload\" className={`file-label ${dragOver ? 'drag-active' : ''}`}>\r\n                {dragOver ? (\r\n                  'Solte os arquivos PDF aqui'\r\n                ) : files.length > 0 ? (\r\n                  `${files.length} arquivo(s) selecionado(s)`\r\n                ) : isMobile ? (\r\n                  'Tocar para selecionar PDFs'\r\n                ) : (\r\n                  'Escolher arquivos PDF ou arrastar aqui'\r\n                )}\r\n              </label>\r\n            </div>\r\n            \r\n            {files.length > 0 && (\r\n              <div className=\"selected-files-container\">\r\n                <h3>Arquivos Selecionados</h3>\r\n                <div className=\"files-actions\">\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"clear-files-button\" \r\n                    onClick={clearAllFiles}\r\n                    disabled={loading}\r\n                  >\r\n                    {isMobile ? 'Limpar' : 'Remover todos'}\r\n                  </button>\r\n                </div>\r\n                <ul className=\"selected-files-list\">\r\n                  {files.map((file, index) => (\r\n                    <li key={`${file.name}-${index}`} className=\"file-item\">\r\n                      <span className=\"file-name\">\r\n                        <span className=\"pdf-icon\">📄</span>\r\n                        {truncateFileName(file.name)}\r\n                        <span className=\"file-size\">({(file.size / 1024).toFixed(1)} KB)</span>\r\n                      </span>\r\n                      <button \r\n                        type=\"button\" \r\n                        className=\"remove-file-button\" \r\n                        onClick={() => removeFile(index)}\r\n                        disabled={loading}\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              className={`upload-button ${loading ? 'loading' : ''}`}\r\n              disabled={files.length === 0 || apiStatus?.status !== 'online' || loading}\r\n            >\r\n              {loading ? 'Processando...' : 'Extrair Resultados'}\r\n            </button>\r\n          </form>\r\n          \r\n          {(processingStage === 'upload' || processingStage === 'processing') && (\r\n            <div className=\"progress-bar-container\">\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-indicator\" \r\n                  style={{ width: `${getProgress()}%` }}\r\n                />\r\n              </div>\r\n              <div className=\"progress-status\">\r\n                {currentProcessingFile ? (\r\n                  `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${\r\n                    truncateFileName(currentProcessingFile)\r\n                  } (${processedFiles + 1}/${totalFiles})`\r\n                ) : (\r\n                  processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {uploadStatus && (\r\n            <div className={`upload-status ${uploadStatus.stage}`}>\r\n              <span className=\"status-icon\">\r\n                {uploadStatus.stage === 'sucesso' ? '✓' : \r\n                 uploadStatus.stage === 'erro' ? '✗' : \r\n                 uploadStatus.stage === 'aviso' ? '!' : '⟳'}\r\n              </span>\r\n              <div className=\"status-content\">\r\n                <div className=\"status-message\">{uploadStatus.message}</div>\r\n                {uploadStatus.details && !isMobile && (\r\n                  <div className=\"status-details\">{uploadStatus.details}</div>\r\n                )}\r\n                {uploadStatus.timestamp && !isMobile && (\r\n                  <div className=\"status-timestamp\">{uploadStatus.timestamp}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {uploadStatus?.stage === 'erro' && (\r\n            <div className=\"pdf-tips\">\r\n              <h4>Possíveis soluções:</h4>\r\n              <ul>\r\n                <li>Verifique se os PDFs não estão protegidos por senha</li>\r\n                <li>Tente salvar os PDFs novamente como novos arquivos</li>\r\n                {!isMobile && (\r\n                  <li>Entre em contato com o laboratório para versões alternativas</li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          )}\r\n          \r\n          {uploadStatus?.stage === 'aviso' && (\r\n            <div className=\"processing-notice\">\r\n              <p>Alguns documentos foram processados com possíveis imprecisões.</p>\r\n              {!isMobile && <p>Verifique os resultados antes de usar.</p>}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {loading && !processingStage && (\r\n          <p className=\"loading\">Processando documentos, aguarde...</p>\r\n        )}\r\n        \r\n        {error && !uploadStatus && (\r\n          <p className=\"error\">{error}</p>\r\n        )}\r\n        \r\n        {error && uploadStatus && (\r\n          <div className=\"file-errors\">\r\n            <details>\r\n              <summary>Detalhes dos erros</summary>\r\n              <pre className=\"error-details\">{error}</pre>\r\n            </details>\r\n          </div>\r\n        )}\r\n        \r\n        {summaries.length > 0 && (\r\n          <div className=\"reset-button-container\">\r\n            <button \r\n              className=\"reset-button\"\r\n              onClick={resetState}\r\n              disabled={loading}\r\n            >\r\n              {isMobile ? 'Novo processamento' : 'Processar novos documentos'}\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"summary-container\">\r\n          {summaries.length === 0 ? (\r\n            <div className=\"empty-message\">\r\n              <p>Os resultados dos exames aparecerão aqui.</p>\r\n              {!isMobile && <p>Selecione arquivos PDF para começar.</p>}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-view-container\">\r\n              <h2>Resultados Extraídos</h2>\r\n              <div className=\"summary-info\">\r\n                <span className=\"file-count\">{summaries.length} resultados extraídos</span>\r\n                {files.length > 1 && (\r\n                  <span className=\"multi-file-notice\">de {files.length} arquivos</span>\r\n                )}\r\n                {!isMobile && (\r\n                  <span className=\"extraction-time\">às {new Date().toLocaleTimeString()}</span>\r\n                )}\r\n              </div>\r\n              <p className=\"copy-instructions\">\r\n                {isMobile ? 'Resultados para copiar:' : 'Lista de resultados pronta para copiar:'}\r\n              </p>\r\n              <div className=\"text-area-container\">\r\n                <textarea\r\n                  ref={textAreaRef}\r\n                  className=\"results-text-area\"\r\n                  value={getFormattedText()}\r\n                  readOnly\r\n                  placeholder=\"Os resultados aparecerão aqui...\"\r\n                />\r\n                <button \r\n                  onClick={copyToClipboard} \r\n                  className=\"copy-button\"\r\n                  disabled={summaries.length === 0}\r\n                >\r\n                  {isMobile ? 'Copiar Resultados' : 'Copiar para área de transferência'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n      \r\n      <footer>\r\n        <p>© 2025 - Instituto Paulo Godoi{!isMobile && ' - Sistema de Processamento de Exames'}</p>\r\n        <p className=\"api-info\">\r\n          {isMobile \r\n            ? `${apiStatus?.env || 'Off'} | v2.0`\r\n            : `Ambiente: ${apiStatus?.env || 'Desconectado'} | API: ${API_URL}`\r\n          }\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}