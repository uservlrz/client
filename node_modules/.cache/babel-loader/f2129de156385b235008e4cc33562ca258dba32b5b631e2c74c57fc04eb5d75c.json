{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\confi\\\\Downloads\\\\pdf-summarizer\\\\client\\\\src\\\\components\\\\PdfUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PdfUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfUploader = ({\n  onSummariesUpdate,\n  setLoading,\n  setError\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type === 'application/pdf') {\n      setFile(selectedFile);\n      setError(null);\n    } else {\n      setFile(null);\n      setError('Por favor, selecione um arquivo PDF v치lido.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Por favor, selecione um arquivo PDF v치lido.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('pdf', file);\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao processar o documento');\n      }\n      const data = await response.json();\n      onSummariesUpdate(data.summaries);\n    } catch (error) {\n      console.error('Erro ao enviar o arquivo:', error);\n      setError(error.message || 'Erro ao processar o documento. Tente novamente.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploader-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"pdf-upload\",\n          onChange: handleFileChange,\n          accept: \"application/pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pdf-upload\",\n          className: \"file-label\",\n          children: file ? file.name : 'Escolher arquivo PDF'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload-button\",\n        disabled: !file,\n        children: \"Gerar Resumos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfUploader, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = PdfUploader;\nexport default PdfUploader;\nvar _c;\n$RefreshReg$(_c, \"PdfUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfUploader","onSummariesUpdate","setLoading","setError","_s","file","setFile","handleFileChange","e","selectedFile","target","files","type","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","summaries","error","console","message","className","children","onSubmit","id","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","disabled","_c","$RefreshReg$"],"sources":["C:/Users/confi/Downloads/pdf-summarizer/client/src/components/PdfUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PdfUploader.css';\r\n\r\nconst PdfUploader = ({ onSummariesUpdate, setLoading, setError }) => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile && selectedFile.type === 'application/pdf') {\r\n      setFile(selectedFile);\r\n      setError(null);\r\n    } else {\r\n      setFile(null);\r\n      setError('Por favor, selecione um arquivo PDF v치lido.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      setError('Por favor, selecione um arquivo PDF v치lido.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('pdf', file);\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Erro ao processar o documento');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      onSummariesUpdate(data.summaries);\r\n    } catch (error) {\r\n      console.error('Erro ao enviar o arquivo:', error);\r\n      setError(error.message || 'Erro ao processar o documento. Tente novamente.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"uploader-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"file-input-container\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"pdf-upload\"\r\n            onChange={handleFileChange}\r\n            accept=\"application/pdf\"\r\n          />\r\n          <label htmlFor=\"pdf-upload\" className=\"file-label\">\r\n            {file ? file.name : 'Escolher arquivo PDF'}\r\n          </label>\r\n        </div>\r\n        <button \r\n          type=\"submit\" \r\n          className=\"upload-button\"\r\n          disabled={!file}\r\n        >\r\n          Gerar Resumos\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PdfUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}