{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\confi\\\\Downloads\\\\pdf-summarizer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport ErrorHandler from './components/ErrorHandler'; // Novo componente para tratamento de erros\n\n// Função para determinar a URL da API baseada no ambiente\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getApiUrl() {\n  // Em desenvolvimento (local), usa localhost\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:5000';\n  }\n\n  // Em produção, usa o domínio do Vercel para o backend\n  return 'https://server-theta-murex.vercel.app';\n}\n\n// URL da API - detecta automaticamente ambiente local ou produção\nconst API_URL = getApiUrl();\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [summaries, setSummaries] = useState([]);\n  const [patientName, setPatientName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('cards'); // 'cards' ou 'text'\n  const [apiStatus, setApiStatus] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null); // Novo: para mostrar estágios do upload\n  const [processingStage, setProcessingStage] = useState(null); // Novo: para acompanhar o estágio de processamento\n  const textAreaRef = useRef(null);\n\n  // Verificar status da API ao carregar\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n          console.log(`API conectada: ${API_URL} (${data.env})`);\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ao conectar com a API: ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Não foi possível conectar ao servidor',\n          error: error.message,\n          url: API_URL\n        });\n        console.error('Erro ao verificar status da API:', error);\n      }\n    };\n    checkApiStatus();\n  }, []);\n\n  // Função para tentar reconectar com a API\n  const retryApiConnection = () => {\n    setApiStatus({\n      status: 'checking',\n      message: 'Verificando conexão...',\n      url: API_URL\n    });\n    setTimeout(() => {\n      checkApiStatus();\n    }, 1000);\n  };\n\n  // Função para verificar status da API\n  const checkApiStatus = async () => {\n    try {\n      const response = await fetch(`${API_URL}/api/health`);\n      if (response.ok) {\n        const data = await response.json();\n        setApiStatus({\n          status: 'online',\n          env: data.env,\n          url: API_URL\n        });\n        setError(null);\n      } else {\n        setApiStatus({\n          status: 'error',\n          message: `Erro ao conectar com a API: ${response.status}`,\n          url: API_URL\n        });\n        setError(`Erro ao conectar com o servidor: ${response.status} ${response.statusText}`);\n      }\n    } catch (error) {\n      setApiStatus({\n        status: 'offline',\n        message: 'Não foi possível conectar ao servidor',\n        error: error.message,\n        url: API_URL\n      });\n      setError(`Falha de conexão com o servidor: ${error.message}`);\n    }\n  };\n\n  // Função para limpar os resultados e resetar o estado\n  const handleReset = () => {\n    setSummaries([]);\n    setPatientName('');\n    setError(null);\n    setFile(null);\n    setUploadStatus(null);\n    setProcessingStage(null);\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setUploadStatus(null); // Limpar status anterior\n    setProcessingStage(null);\n    if (selectedFile && selectedFile.type === 'application/pdf') {\n      setFile(selectedFile);\n      setError(null);\n    } else {\n      setFile(null);\n      setError('Por favor, selecione um arquivo PDF válido.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Por favor, selecione um arquivo PDF válido.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('pdf', file);\n    setLoading(true);\n    setError(null);\n    setUploadStatus({\n      stage: 'iniciando',\n      message: 'Iniciando processamento...'\n    });\n    setProcessingStage('upload');\n    try {\n      // Informar progresso\n      setUploadStatus({\n        stage: 'enviando',\n        message: 'Enviando arquivo para o servidor...'\n      });\n      console.log(`Enviando arquivo para ${API_URL}/api/upload`);\n      const response = await fetch(`${API_URL}/api/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      setProcessingStage('processing');\n      setUploadStatus({\n        stage: 'processando',\n        message: 'Processando documento PDF...'\n      });\n      if (!response.ok) {\n        let errorMessage = `Erro ${response.status}: ${response.statusText}`;\n        try {\n          const errorData = await response.json();\n          if (errorData.message) {\n            errorMessage = errorData.message;\n          }\n        } catch (jsonError) {\n          // Continuar com a mensagem de erro padrão se não puder ler JSON\n        }\n        throw new Error(errorMessage);\n      }\n      const data = await response.json();\n\n      // Verificar se temos resultados válidos\n      if (!data.summaries || data.summaries.length === 0) {\n        throw new Error('Não foi possível extrair informações deste documento.');\n      }\n\n      // Verificar qual método de extração foi usado para decidir a mensagem de status\n      setProcessingStage('complete');\n      if (data.extractionMethod === 'falha') {\n        setUploadStatus({\n          stage: 'erro',\n          message: 'Não foi possível processar este PDF. Tente outro formato.'\n        });\n      } else if (['reparado', 'gs_reparado', 'desprotegido', 'partes'].includes(data.extractionMethod)) {\n        setUploadStatus({\n          stage: 'aviso',\n          message: `Documento processado com ajustes (${getMethodDescription(data.extractionMethod)}).`\n        });\n      } else {\n        setUploadStatus({\n          stage: 'sucesso',\n          message: 'Documento processado com sucesso!'\n        });\n      }\n      setSummaries(data.summaries);\n\n      // Definir o nome do paciente extraído automaticamente\n      if (data.patientName) {\n        setPatientName(data.patientName);\n      }\n    } catch (error) {\n      console.error('Erro ao enviar o arquivo:', error);\n      setProcessingStage('error');\n      setUploadStatus({\n        stage: 'erro',\n        message: 'Falha no processamento do documento.'\n      });\n      setError(error.message || 'Erro ao processar o documento. Tente novamente.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Função para obter descrição amigável do método de extração\n  const getMethodDescription = method => {\n    const descriptions = {\n      'direto': 'processamento direto',\n      'desprotegido': 'remoção de proteção',\n      'reparado': 'reparo de estrutura',\n      'gs_reparado': 'reparo avançado',\n      'partes': 'processamento em partes',\n      'falha': 'falha no processamento'\n    };\n    return descriptions[method] || method;\n  };\n\n  // Função para extrair apenas os exames sem seções ou formatação extra\n  const extractOnlyExams = () => {\n    let allExams = [];\n    summaries.forEach(summary => {\n      const lines = summary.content.split('\\n');\n      lines.forEach(line => {\n        if (line.trim() && !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i)) {\n          allExams.push(line.trim());\n        }\n      });\n    });\n\n    // Remover duplicatas\n    allExams = [...new Set(allExams)];\n    return allExams;\n  };\n\n  // Gerar texto formatado simplificado para cópia\n  const getSimplifiedTextForCopy = () => {\n    // Nome do paciente no topo\n    let formattedText = patientName ? `PACIENTE: ${patientName}\\n\\n` : '';\n\n    // Adicionar cada exame em uma linha\n    const exams = extractOnlyExams();\n    exams.forEach(exam => {\n      formattedText += `${exam}\\n`;\n    });\n    return formattedText;\n  };\n\n  // Função para copiar texto para a área de transferência\n  const copyToClipboard = () => {\n    if (textAreaRef.current) {\n      textAreaRef.current.select();\n      document.execCommand('copy');\n      // Mostrar uma mensagem de sucesso\n      alert('Resultados copiados para a área de transferência!');\n    }\n  };\n\n  // Identifica se uma linha é um título de seção (como SÉRIE ERITROCITÁRIA)\n  const isSectionTitle = line => {\n    return line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) !== null;\n  };\n\n  // Função para formatar as linhas de resultados\n  const formatResultLine = line => {\n    // Se for um título de seção, renderize como título\n    if (isSectionTitle(line)) {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"section-title\",\n        children: line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Verifica se a linha tem o formato \"Exame: Resultado | Referência: Valor\"\n    const parts = line.split('|');\n    if (parts.length === 2) {\n      // Separa o resultado do exame e a referência\n      const resultPart = parts[0].trim();\n      const referencePart = parts[1].trim();\n\n      // Extrai o nome do exame e o valor\n      const resultMatch = resultPart.match(/^(.+):\\s*(.+)$/);\n      if (resultMatch) {\n        const examName = resultMatch[1].trim();\n        const examValue = resultMatch[2].trim();\n\n        // Verifica se o valor tem '/' indicando resultado duplo\n        if (examValue.includes('/')) {\n          const [percentValue, absoluteValue] = examValue.split('/').map(v => v.trim());\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exam-result\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-name\",\n              children: [examName, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-value dual-value\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"percent-value\",\n                children: percentValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"divider\",\n                children: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"absolute-value\",\n                children: absoluteValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-reference\",\n              children: [\" | \", referencePart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exam-result\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-name\",\n              children: [examName, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-value\",\n              children: examValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exam-reference\",\n              children: [\" | \", referencePart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this);\n        }\n      }\n    }\n\n    // Fallback para linhas que não têm o formato esperado\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-result\",\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"institute-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Instituto Paulo Godoi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Extrator de Resultados de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Sistema interno para processamento de laudos laboratoriais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), apiStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `api-status ${apiStatus.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), apiStatus.status === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"API conectada (\", apiStatus.env, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this) : apiStatus.status === 'checking' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Verificando conex\\xE3o...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Erro de conex\\xE3o: \", apiStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: retryApiConnection,\n            children: \"Reconectar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [((apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'offline' || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'error') && /*#__PURE__*/_jsxDEV(ErrorHandler, {\n        error: `Não foi possível conectar ao servidor. ${apiStatus.message}`,\n        onRetry: retryApiConnection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploader-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"pdf-upload\",\n              onChange: handleFileChange,\n              accept: \"application/pdf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pdf-upload\",\n              className: \"file-label\",\n              children: file ? file.name : 'Escolher arquivo PDF de exames'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"upload-button\",\n            disabled: !file || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) !== 'online' || processingStage === 'upload' || processingStage === 'processing',\n            children: processingStage === 'upload' || processingStage === 'processing' ? 'Processando...' : 'Extrair Resultados'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), (processingStage === 'upload' || processingStage === 'processing') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-bar ${processingStage}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-status\",\n            children: processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `upload-status ${uploadStatus.stage}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-icon\",\n            children: uploadStatus.stage === 'sucesso' ? '✓' : uploadStatus.stage === 'erro' ? '✗' : uploadStatus.stage === 'aviso' ? '⚠️' : '⟳'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-message\",\n            children: uploadStatus.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), uploadStatus && uploadStatus.stage === 'erro' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdf-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Poss\\xEDveis solu\\xE7\\xF5es:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Verifique se o PDF n\\xE3o est\\xE1 protegido por senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Tente salvar o PDF novamente usando \\\"Salvar como\\\" no Adobe Reader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Se poss\\xEDvel, tente imprimir o documento para um novo PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Entre em contato com o laborat\\xF3rio para obter uma vers\\xE3o digital alternativa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Se o problema persistir, use uma ferramenta online para converter o PDF para outro formato\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), uploadStatus && uploadStatus.stage === 'aviso' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-notice\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"O documento foi processado com sucesso, mas pode conter algumas imprecis\\xF5es devido ao formato do arquivo original.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Verifique cuidadosamente os resultados extra\\xEDdos antes de us\\xE1-los.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), loading && !processingStage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Processando o documento, por favor aguarde...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 41\n      }, this), error && !uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [\"Erro: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 36\n      }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-mode-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-button ${viewMode === 'cards' ? 'active' : ''}`,\n          onClick: () => setViewMode('cards'),\n          children: \"Visualiza\\xE7\\xE3o em Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-button ${viewMode === 'text' ? 'active' : ''}`,\n          onClick: () => setViewMode('text'),\n          children: \"Visualiza\\xE7\\xE3o para C\\xF3pia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: handleReset,\n          children: \"Novo Documento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: summaries.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-message\",\n          children: \"Os resultados dos exames aparecer\\xE3o aqui.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this) : viewMode === 'cards' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [patientName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"patient-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Paciente: \", patientName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Resultados dos Exames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summaries-list\",\n            children: summaries.map((summary, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Resultados\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-content\",\n                children: summary.content.split(\"\\n\").map((line, i) => line.trim() ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `result-line ${isSectionTitle(line) ? 'section-header' : ''}`,\n                  children: formatResultLine(line)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 27\n                }, this) : null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"export-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.print(),\n              className: \"export-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"print-icon\",\n                children: \"\\uD83D\\uDDA8\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this), \" Imprimir Resultados\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-view-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Resultados para C\\xF3pia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"copy-instructions\",\n            children: \"Lista simples de resultados para copiar e colar:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-area-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: textAreaRef,\n              className: \"results-text-area\",\n              value: getSimplifiedTextForCopy(),\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: copyToClipboard,\n              className: \"copy-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"copy-icon\",\n                children: \"\\uD83D\\uDCCB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), \" Copiar para \\xC1rea de Transfer\\xEAncia\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"api-info\",\n        children: [\"Ambiente: \", (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.env) || 'Desconectado', \" | API: \", API_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qMDEBVIYYtiTn1u2TmsQEiNHTCw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ErrorHandler","jsxDEV","_jsxDEV","Fragment","_Fragment","getApiUrl","window","location","hostname","API_URL","App","_s","file","setFile","summaries","setSummaries","patientName","setPatientName","loading","setLoading","error","setError","viewMode","setViewMode","apiStatus","setApiStatus","uploadStatus","setUploadStatus","processingStage","setProcessingStage","textAreaRef","checkApiStatus","response","fetch","ok","data","json","status","env","url","console","log","message","retryApiConnection","setTimeout","statusText","handleReset","handleFileChange","e","selectedFile","target","files","type","handleSubmit","preventDefault","formData","FormData","append","stage","method","body","errorMessage","errorData","jsonError","Error","length","extractionMethod","includes","getMethodDescription","descriptions","extractOnlyExams","allExams","forEach","summary","lines","content","split","line","trim","match","push","Set","getSimplifiedTextForCopy","formattedText","exams","exam","copyToClipboard","current","select","document","execCommand","alert","isSectionTitle","formatResultLine","className","children","fileName","_jsxFileName","lineNumber","columnNumber","parts","resultPart","referencePart","resultMatch","examName","examValue","percentValue","absoluteValue","map","v","onClick","onRetry","onSubmit","id","onChange","accept","htmlFor","name","disabled","index","i","print","ref","value","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/confi/Downloads/pdf-summarizer/client/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './App.css';\r\nimport ErrorHandler from './components/ErrorHandler'; // Novo componente para tratamento de erros\r\n\r\n// Função para determinar a URL da API baseada no ambiente\r\nfunction getApiUrl() {\r\n  // Em desenvolvimento (local), usa localhost\r\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n    return 'http://localhost:5000';\r\n  }\r\n  \r\n  // Em produção, usa o domínio do Vercel para o backend\r\n  return 'https://server-theta-murex.vercel.app';\r\n}\r\n\r\n// URL da API - detecta automaticamente ambiente local ou produção\r\nconst API_URL = getApiUrl();\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [patientName, setPatientName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [viewMode, setViewMode] = useState('cards'); // 'cards' ou 'text'\r\n  const [apiStatus, setApiStatus] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null); // Novo: para mostrar estágios do upload\r\n  const [processingStage, setProcessingStage] = useState(null); // Novo: para acompanhar o estágio de processamento\r\n  const textAreaRef = useRef(null);\r\n\r\n  // Verificar status da API ao carregar\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({\r\n            status: 'online',\r\n            env: data.env,\r\n            url: API_URL\r\n          });\r\n          console.log(`API conectada: ${API_URL} (${data.env})`);\r\n        } else {\r\n          setApiStatus({\r\n            status: 'error',\r\n            message: `Erro ao conectar com a API: ${response.status}`,\r\n            url: API_URL\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({\r\n          status: 'offline',\r\n          message: 'Não foi possível conectar ao servidor',\r\n          error: error.message,\r\n          url: API_URL\r\n        });\r\n        console.error('Erro ao verificar status da API:', error);\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  // Função para tentar reconectar com a API\r\n  const retryApiConnection = () => {\r\n    setApiStatus({\r\n      status: 'checking',\r\n      message: 'Verificando conexão...',\r\n      url: API_URL\r\n    });\r\n    \r\n    setTimeout(() => {\r\n      checkApiStatus();\r\n    }, 1000);\r\n  };\r\n  \r\n  // Função para verificar status da API\r\n  const checkApiStatus = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/health`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setApiStatus({\r\n          status: 'online',\r\n          env: data.env,\r\n          url: API_URL\r\n        });\r\n        setError(null);\r\n      } else {\r\n        setApiStatus({\r\n          status: 'error',\r\n          message: `Erro ao conectar com a API: ${response.status}`,\r\n          url: API_URL\r\n        });\r\n        setError(`Erro ao conectar com o servidor: ${response.status} ${response.statusText}`);\r\n      }\r\n    } catch (error) {\r\n      setApiStatus({\r\n        status: 'offline',\r\n        message: 'Não foi possível conectar ao servidor',\r\n        error: error.message,\r\n        url: API_URL\r\n      });\r\n      setError(`Falha de conexão com o servidor: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Função para limpar os resultados e resetar o estado\r\n  const handleReset = () => {\r\n    setSummaries([]);\r\n    setPatientName('');\r\n    setError(null);\r\n    setFile(null);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setUploadStatus(null); // Limpar status anterior\r\n    setProcessingStage(null);\r\n    \r\n    if (selectedFile && selectedFile.type === 'application/pdf') {\r\n      setFile(selectedFile);\r\n      setError(null);\r\n    } else {\r\n      setFile(null);\r\n      setError('Por favor, selecione um arquivo PDF válido.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      setError('Por favor, selecione um arquivo PDF válido.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('pdf', file);\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setUploadStatus({ stage: 'iniciando', message: 'Iniciando processamento...' });\r\n    setProcessingStage('upload');\r\n\r\n    try {\r\n      // Informar progresso\r\n      setUploadStatus({ stage: 'enviando', message: 'Enviando arquivo para o servidor...' });\r\n      \r\n      console.log(`Enviando arquivo para ${API_URL}/api/upload`);\r\n      const response = await fetch(`${API_URL}/api/upload`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      setProcessingStage('processing');\r\n      setUploadStatus({ stage: 'processando', message: 'Processando documento PDF...' });\r\n      \r\n      if (!response.ok) {\r\n        let errorMessage = `Erro ${response.status}: ${response.statusText}`;\r\n        \r\n        try {\r\n          const errorData = await response.json();\r\n          if (errorData.message) {\r\n            errorMessage = errorData.message;\r\n          }\r\n        } catch (jsonError) {\r\n          // Continuar com a mensagem de erro padrão se não puder ler JSON\r\n        }\r\n        \r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      // Verificar se temos resultados válidos\r\n      if (!data.summaries || data.summaries.length === 0) {\r\n        throw new Error('Não foi possível extrair informações deste documento.');\r\n      }\r\n      \r\n      // Verificar qual método de extração foi usado para decidir a mensagem de status\r\n      setProcessingStage('complete');\r\n      if (data.extractionMethod === 'falha') {\r\n        setUploadStatus({ \r\n          stage: 'erro', \r\n          message: 'Não foi possível processar este PDF. Tente outro formato.'\r\n        });\r\n      } else if (['reparado', 'gs_reparado', 'desprotegido', 'partes'].includes(data.extractionMethod)) {\r\n        setUploadStatus({ \r\n          stage: 'aviso', \r\n          message: `Documento processado com ajustes (${getMethodDescription(data.extractionMethod)}).`\r\n        });\r\n      } else {\r\n        setUploadStatus({ \r\n          stage: 'sucesso', \r\n          message: 'Documento processado com sucesso!'\r\n        });\r\n      }\r\n      \r\n      setSummaries(data.summaries);\r\n      \r\n      // Definir o nome do paciente extraído automaticamente\r\n      if (data.patientName) {\r\n        setPatientName(data.patientName);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao enviar o arquivo:', error);\r\n      setProcessingStage('error');\r\n      setUploadStatus({ \r\n        stage: 'erro', \r\n        message: 'Falha no processamento do documento.'\r\n      });\r\n      \r\n      setError(error.message || 'Erro ao processar o documento. Tente novamente.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Função para obter descrição amigável do método de extração\r\n  const getMethodDescription = (method) => {\r\n    const descriptions = {\r\n      'direto': 'processamento direto',\r\n      'desprotegido': 'remoção de proteção',\r\n      'reparado': 'reparo de estrutura',\r\n      'gs_reparado': 'reparo avançado',\r\n      'partes': 'processamento em partes',\r\n      'falha': 'falha no processamento'\r\n    };\r\n    \r\n    return descriptions[method] || method;\r\n  };\r\n\r\n  // Função para extrair apenas os exames sem seções ou formatação extra\r\n  const extractOnlyExams = () => {\r\n    let allExams = [];\r\n    \r\n    summaries.forEach((summary) => {\r\n      const lines = summary.content.split('\\n');\r\n      \r\n      lines.forEach((line) => {\r\n        if (line.trim() && !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i)) {\r\n          allExams.push(line.trim());\r\n        }\r\n      });\r\n    });\r\n    \r\n    // Remover duplicatas\r\n    allExams = [...new Set(allExams)];\r\n    \r\n    return allExams;\r\n  };\r\n\r\n  // Gerar texto formatado simplificado para cópia\r\n  const getSimplifiedTextForCopy = () => {\r\n    // Nome do paciente no topo\r\n    let formattedText = patientName ? `PACIENTE: ${patientName}\\n\\n` : '';\r\n    \r\n    // Adicionar cada exame em uma linha\r\n    const exams = extractOnlyExams();\r\n    exams.forEach(exam => {\r\n      formattedText += `${exam}\\n`;\r\n    });\r\n    \r\n    return formattedText;\r\n  };\r\n\r\n  // Função para copiar texto para a área de transferência\r\n  const copyToClipboard = () => {\r\n    if (textAreaRef.current) {\r\n      textAreaRef.current.select();\r\n      document.execCommand('copy');\r\n      // Mostrar uma mensagem de sucesso\r\n      alert('Resultados copiados para a área de transferência!');\r\n    }\r\n  };\r\n\r\n  // Identifica se uma linha é um título de seção (como SÉRIE ERITROCITÁRIA)\r\n  const isSectionTitle = (line) => {\r\n    return line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) !== null;\r\n  };\r\n\r\n  // Função para formatar as linhas de resultados\r\n  const formatResultLine = (line) => {\r\n    // Se for um título de seção, renderize como título\r\n    if (isSectionTitle(line)) {\r\n      return <h4 className=\"section-title\">{line}</h4>;\r\n    }\r\n    \r\n    // Verifica se a linha tem o formato \"Exame: Resultado | Referência: Valor\"\r\n    const parts = line.split('|');\r\n    \r\n    if (parts.length === 2) {\r\n      // Separa o resultado do exame e a referência\r\n      const resultPart = parts[0].trim();\r\n      const referencePart = parts[1].trim();\r\n      \r\n      // Extrai o nome do exame e o valor\r\n      const resultMatch = resultPart.match(/^(.+):\\s*(.+)$/);\r\n      \r\n      if (resultMatch) {\r\n        const examName = resultMatch[1].trim();\r\n        const examValue = resultMatch[2].trim();\r\n        \r\n        // Verifica se o valor tem '/' indicando resultado duplo\r\n        if (examValue.includes('/')) {\r\n          const [percentValue, absoluteValue] = examValue.split('/').map(v => v.trim());\r\n          \r\n          return (\r\n            <div className=\"exam-result\">\r\n              <span className=\"exam-name\">{examName}:</span> \r\n              <span className=\"exam-value dual-value\">\r\n                <span className=\"percent-value\">{percentValue}</span>\r\n                <span className=\"divider\">/</span>\r\n                <span className=\"absolute-value\">{absoluteValue}</span>\r\n              </span>\r\n              <span className=\"exam-reference\"> | {referencePart}</span>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"exam-result\">\r\n              <span className=\"exam-name\">{examName}:</span> \r\n              <span className=\"exam-value\">{examValue}</span>\r\n              <span className=\"exam-reference\"> | {referencePart}</span>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Fallback para linhas que não têm o formato esperado\r\n    return <div className=\"exam-result\">{line}</div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"institute-logo\">\r\n          <span className=\"logo-text\">Instituto Paulo Godoi</span>\r\n        </div>\r\n        <h1>Extrator de Resultados de Exames</h1>\r\n        <p className=\"subtitle\">Sistema interno para processamento de laudos laboratoriais</p>\r\n        \r\n        {/* Indicador de status da API */}\r\n        {apiStatus && (\r\n          <div className={`api-status ${apiStatus.status}`}>\r\n            <span className=\"status-indicator\"></span>\r\n            {apiStatus.status === 'online' ? (\r\n              <span>API conectada ({apiStatus.env})</span>\r\n            ) : apiStatus.status === 'checking' ? (\r\n              <span>Verificando conexão...</span>\r\n            ) : (\r\n              <span>Erro de conexão: {apiStatus.message} \r\n                <button className=\"retry-button\" onClick={retryApiConnection}>\r\n                  Reconectar\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </header>\r\n      <main>\r\n        {/* Mostrar o manipulador de erros para erros de API */}\r\n        {(apiStatus?.status === 'offline' || apiStatus?.status === 'error') && (\r\n          <ErrorHandler \r\n            error={`Não foi possível conectar ao servidor. ${apiStatus.message}`}\r\n            onRetry={retryApiConnection}\r\n          />\r\n        )}\r\n        \r\n        <div className=\"uploader-container\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"file-input-container\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"pdf-upload\"\r\n                onChange={handleFileChange}\r\n                accept=\"application/pdf\"\r\n              />\r\n              <label htmlFor=\"pdf-upload\" className=\"file-label\">\r\n                {file ? file.name : 'Escolher arquivo PDF de exames'}\r\n              </label>\r\n            </div>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"upload-button\"\r\n              disabled={!file || apiStatus?.status !== 'online' || processingStage === 'upload' || processingStage === 'processing'}\r\n            >\r\n              {processingStage === 'upload' || processingStage === 'processing' ? \r\n                'Processando...' : 'Extrair Resultados'}\r\n            </button>\r\n          </form>\r\n          \r\n          {/* Indicador de progresso */}\r\n          {(processingStage === 'upload' || processingStage === 'processing') && (\r\n            <div className=\"progress-bar-container\">\r\n              <div className={`progress-bar ${processingStage}`}>\r\n                <div className=\"progress-indicator\"></div>\r\n              </div>\r\n              <div className=\"progress-status\">\r\n                {processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Status de upload */}\r\n          {uploadStatus && (\r\n            <div className={`upload-status ${uploadStatus.stage}`}>\r\n              <span className=\"status-icon\">\r\n                {uploadStatus.stage === 'sucesso' ? '✓' : \r\n                uploadStatus.stage === 'erro' ? '✗' : \r\n                uploadStatus.stage === 'aviso' ? '⚠️' : '⟳'}\r\n              </span>\r\n              <span className=\"status-message\">{uploadStatus.message}</span>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Dicas para PDFs problemáticos */}\r\n          {uploadStatus && uploadStatus.stage === 'erro' && (\r\n            <div className=\"pdf-tips\">\r\n              <h4>Possíveis soluções:</h4>\r\n              <ul>\r\n                <li>Verifique se o PDF não está protegido por senha</li>\r\n                <li>Tente salvar o PDF novamente usando \"Salvar como\" no Adobe Reader</li>\r\n                <li>Se possível, tente imprimir o documento para um novo PDF</li>\r\n                <li>Entre em contato com o laboratório para obter uma versão digital alternativa</li>\r\n                <li>Se o problema persistir, use uma ferramenta online para converter o PDF para outro formato</li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Aviso quando o documento foi processado, mas com ajustes */}\r\n          {uploadStatus && uploadStatus.stage === 'aviso' && (\r\n            <div className=\"processing-notice\">\r\n              <p>O documento foi processado com sucesso, mas pode conter algumas imprecisões devido ao formato do arquivo original.</p>\r\n              <p>Verifique cuidadosamente os resultados extraídos antes de usá-los.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {loading && !processingStage && <p className=\"loading\">Processando o documento, por favor aguarde...</p>}\r\n        {error && !uploadStatus && <p className=\"error\">Erro: {error}</p>}\r\n\r\n        {summaries.length > 0 && (\r\n          <div className=\"view-mode-toggle\">\r\n            <button \r\n              className={`toggle-button ${viewMode === 'cards' ? 'active' : ''}`}\r\n              onClick={() => setViewMode('cards')}\r\n            >\r\n              Visualização em Cards\r\n            </button>\r\n            <button \r\n              className={`toggle-button ${viewMode === 'text' ? 'active' : ''}`}\r\n              onClick={() => setViewMode('text')}\r\n            >\r\n              Visualização para Cópia\r\n            </button>\r\n            <button \r\n              className=\"reset-button\"\r\n              onClick={handleReset}\r\n            >\r\n              Novo Documento\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"summary-container\">\r\n          {summaries.length === 0 ? (\r\n            <p className=\"empty-message\">Os resultados dos exames aparecerão aqui.</p>\r\n          ) : viewMode === 'cards' ? (\r\n            <>\r\n              {patientName && (\r\n                <div className=\"patient-header\">\r\n                  <h3>Paciente: {patientName}</h3>\r\n                </div>\r\n              )}\r\n              <h2>Resultados dos Exames</h2>\r\n              <div className=\"summaries-list\">\r\n                {summaries.map((summary, index) => (\r\n                  <div key={index} className=\"summary-card\">\r\n                    <div className=\"card-header\">\r\n                      <h3>Resultados</h3>\r\n                    </div>\r\n                    <div className=\"summary-content\">\r\n                      {summary.content.split(\"\\n\").map((line, i) => (\r\n                        line.trim() ? (\r\n                          <div key={i} className={`result-line ${isSectionTitle(line) ? 'section-header' : ''}`}>\r\n                            {formatResultLine(line)}\r\n                          </div>\r\n                        ) : null\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"export-container\">\r\n                <button onClick={() => window.print()} className=\"export-button\">\r\n                  <i className=\"print-icon\">🖨️</i> Imprimir Resultados\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"text-view-container\">\r\n              <h2>Resultados para Cópia</h2>\r\n              <p className=\"copy-instructions\">Lista simples de resultados para copiar e colar:</p>\r\n              <div className=\"text-area-container\">\r\n                <textarea\r\n                  ref={textAreaRef}\r\n                  className=\"results-text-area\"\r\n                  value={getSimplifiedTextForCopy()}\r\n                  readOnly\r\n                />\r\n                <button onClick={copyToClipboard} className=\"copy-button\">\r\n                  <i className=\"copy-icon\">📋</i> Copiar para Área de Transferência\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n      <footer>\r\n        <p>© 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames</p>\r\n        <p className=\"api-info\">Ambiente: {apiStatus?.env || 'Desconectado'} | API: {API_URL}</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}