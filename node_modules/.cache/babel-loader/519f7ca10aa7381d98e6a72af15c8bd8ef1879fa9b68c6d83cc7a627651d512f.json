{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\confi\\\\Downloads\\\\pdf-summarizer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js - Versão Minimalista e Elegante\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport ErrorHandler from './components/ErrorHandler';\n\n// Função para determinar a URL da API baseada no ambiente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getApiUrl() {\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:5000';\n  }\n  return 'https://server-theta-murex.vercel.app';\n}\nconst API_URL = getApiUrl();\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n  const [patientName, setPatientName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [apiStatus, setApiStatus] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [processingStage, setProcessingStage] = useState(null);\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\n  const [processedFiles, setProcessedFiles] = useState(0);\n  const [totalFiles, setTotalFiles] = useState(0);\n  const [dragOver, setDragOver] = useState(false);\n  const textAreaRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Verificar status da API ao carregar\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      setApiStatus({\n        status: 'checking',\n        message: 'Verificando conexão...',\n        url: API_URL\n      });\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Servidor indisponível',\n          error: error.message,\n          url: API_URL\n        });\n      }\n    };\n    checkApiStatus();\n  }, []);\n\n  // Função para reconectar com a API\n  const retryApiConnection = useCallback(() => {\n    setApiStatus({\n      status: 'checking',\n      message: 'Reconectando...',\n      url: API_URL\n    });\n    setTimeout(async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({\n            status: 'online',\n            env: data.env,\n            url: API_URL\n          });\n          setError(null);\n        } else {\n          setApiStatus({\n            status: 'error',\n            message: `Erro ${response.status}`,\n            url: API_URL\n          });\n        }\n      } catch (error) {\n        setApiStatus({\n          status: 'offline',\n          message: 'Servidor indisponível',\n          url: API_URL\n        });\n      }\n    }, 1000);\n  }, []);\n\n  // Função para resetar o estado\n  const handleReset = useCallback(() => {\n    setSummaries([]);\n    setPatientName('');\n    setError(null);\n    setFiles([]);\n    setUploadStatus(null);\n    setProcessingStage(null);\n    setCurrentProcessingFile(null);\n    setProcessedFiles(0);\n    setTotalFiles(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Handlers para drag and drop\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    setDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    setDragOver(false);\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    setDragOver(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\n      setError('Por favor, solte apenas arquivos PDF válidos.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\n    setError(null);\n    setUploadStatus(null);\n    setProcessingStage(null);\n  }, []);\n  const handleFileChange = useCallback(e => {\n    const selectedFiles = Array.from(e.target.files);\n    setUploadStatus(null);\n    setProcessingStage(null);\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\n      setError('Por favor, selecione apenas arquivos PDF válidos.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\n    setError(null);\n  }, []);\n\n  // Função para remover arquivo\n  const removeFile = useCallback(index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  }, []);\n\n  // Função para limpar todos os arquivos\n  const clearAllFiles = useCallback(() => {\n    setFiles([]);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, []);\n\n  // Função principal de upload e processamento\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (files.length === 0) {\n      setError('Por favor, selecione pelo menos um arquivo PDF válido.');\n      setTimeout(() => setError(null), 3000);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setUploadStatus({\n      stage: 'iniciando',\n      message: 'Iniciando processamento...',\n      timestamp: new Date().toLocaleTimeString()\n    });\n    setProcessingStage('upload');\n    setTotalFiles(files.length);\n    setProcessedFiles(0);\n    const allSummaries = [];\n    const fileErrors = [];\n    const patientNames = {};\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const fileNumber = i + 1;\n      setCurrentProcessingFile(file.name);\n      try {\n        const formData = new FormData();\n        formData.append('pdf', file);\n        setUploadStatus({\n          stage: 'enviando',\n          message: `Enviando ${fileNumber}/${files.length}: ${file.name.substring(0, 30)}${file.name.length > 30 ? '...' : ''}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        const response = await fetch(`${API_URL}/api/upload`, {\n          method: 'POST',\n          body: formData\n        });\n        setProcessingStage('processing');\n        setUploadStatus({\n          stage: 'processando',\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        if (!response.ok) {\n          let errorMessage = `Erro ${response.status}: ${response.statusText}`;\n          try {\n            const errorData = await response.json();\n            if (errorData.message) {\n              errorMessage = errorData.message;\n            }\n          } catch (jsonError) {\n            // Continuar com mensagem padrão\n          }\n          throw new Error(`Erro no arquivo ${file.name}: ${errorMessage}`);\n        }\n        const data = await response.json();\n        if (!data.summaries || data.summaries.length === 0) {\n          throw new Error(`Não foi possível extrair informações do documento ${file.name}.`);\n        }\n        if (data.patientName) {\n          patientNames[file.name] = data.patientName;\n        }\n        const fileSummaries = data.summaries.map(summary => ({\n          ...summary,\n          fileName: file.name,\n          patientName: data.patientName,\n          processedAt: new Date().toLocaleTimeString()\n        }));\n        allSummaries.push(...fileSummaries);\n        if (i === 0 && data.patientName) {\n          setPatientName(data.patientName);\n        }\n        setProcessedFiles(i + 1);\n      } catch (error) {\n        console.error(`Erro ao processar ${file.name}:`, error);\n        fileErrors.push({\n          fileName: file.name,\n          error: error.message,\n          timestamp: new Date().toLocaleTimeString()\n        });\n      }\n    }\n    setProcessingStage('complete');\n    if (allSummaries.length > 0) {\n      setSummaries(allSummaries);\n      if (fileErrors.length > 0) {\n        setUploadStatus({\n          stage: 'aviso',\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n        setError(`Alguns arquivos não puderam ser processados:\\n\\n${errorMessage}`);\n      } else {\n        setUploadStatus({\n          stage: 'sucesso',\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\n          timestamp: new Date().toLocaleTimeString()\n        });\n        setError(null);\n      }\n    } else {\n      setUploadStatus({\n        stage: 'erro',\n        message: 'Nenhum resultado foi extraído dos arquivos.',\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\n        timestamp: new Date().toLocaleTimeString()\n      });\n      const errorMessage = fileErrors.map(err => `${err.fileName}: ${err.error}`).join('\\n');\n      setError(`Falha ao processar todos os arquivos:\\n\\n${errorMessage}`);\n    }\n    setLoading(false);\n    setCurrentProcessingFile(null);\n  };\n\n  // Gerar texto formatado para cópia\n  const getSimplifiedTextForCopy = useCallback(() => {\n    if (summaries.length === 0) return '';\n    const resultsByFile = {};\n    summaries.forEach(summary => {\n      const fileName = summary.fileName || 'arquivo_desconhecido';\n      if (!resultsByFile[fileName]) {\n        resultsByFile[fileName] = {\n          patientName: summary.patientName || patientName || \"Paciente\",\n          results: [],\n          processedAt: summary.processedAt\n        };\n      }\n      const lines = summary.content.split('\\n');\n      lines.forEach(line => {\n        if (line.trim() && !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && !line.match(/^Paciente:/i)) {\n          resultsByFile[fileName].results.push(line.trim());\n        }\n      });\n    });\n    let formattedText = '';\n    let isFirstFile = true;\n    Object.keys(resultsByFile).forEach(fileName => {\n      if (!isFirstFile) {\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\n      } else {\n        isFirstFile = false;\n      }\n      const fileData = resultsByFile[fileName];\n      if (fileData.patientName) {\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\n        if (fileData.processedAt) {\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\n        }\n        formattedText += '\\n';\n      }\n      const uniqueResults = [...new Set(fileData.results)];\n      uniqueResults.forEach(result => {\n        formattedText += `${result}\\n`;\n      });\n    });\n    return formattedText;\n  }, [summaries, patientName]);\n\n  // Função para copiar texto\n  const copyToClipboard = useCallback(async () => {\n    if (textAreaRef.current) {\n      try {\n        if (navigator.clipboard && window.isSecureContext) {\n          await navigator.clipboard.writeText(textAreaRef.current.value);\n        } else {\n          textAreaRef.current.select();\n          document.execCommand('copy');\n        }\n        const originalText = textAreaRef.current.value;\n        textAreaRef.current.value = 'Resultados copiados com sucesso!';\n        textAreaRef.current.style.background = '#f0fdf4';\n        textAreaRef.current.style.color = '#166534';\n        setTimeout(() => {\n          textAreaRef.current.value = originalText;\n          textAreaRef.current.style.background = '';\n          textAreaRef.current.style.color = '';\n        }, 2000);\n      } catch (err) {\n        console.error('Erro ao copiar:', err);\n        const originalText = textAreaRef.current.value;\n        textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\n        textAreaRef.current.style.background = '#fef2f2';\n        textAreaRef.current.style.color = '#dc2626';\n        setTimeout(() => {\n          textAreaRef.current.value = originalText;\n          textAreaRef.current.style.background = '';\n          textAreaRef.current.style.color = '';\n        }, 3000);\n      }\n    }\n  }, []);\n\n  // Calcular progresso\n  const calculateProgress = useCallback(() => {\n    if (totalFiles === 0) return 0;\n    return Math.round(processedFiles / totalFiles * 100);\n  }, [processedFiles, totalFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"institute-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Instituto Paulo Godoi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Extrator de Resultados de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Sistema interno para processamento de laudos laboratoriais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), apiStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `api-status ${apiStatus.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), apiStatus.status === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Conectado (\", apiStatus.env, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this) : apiStatus.status === 'checking' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Verificando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [apiStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: retryApiConnection,\n            children: \"Tentar novamente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [((apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'offline' || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) === 'error') && /*#__PURE__*/_jsxDEV(ErrorHandler, {\n        error: `Não foi possível conectar ao servidor. ${apiStatus.message}`,\n        onRetry: retryApiConnection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `uploader-container ${dragOver ? 'drag-over' : ''}`,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"pdf-upload\",\n              ref: fileInputRef,\n              onChange: handleFileChange,\n              accept: \"application/pdf\",\n              multiple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pdf-upload\",\n              className: `file-label ${dragOver ? 'drag-active' : ''}`,\n              children: dragOver ? 'Solte os arquivos PDF aqui' : files.length > 0 ? `${files.length} arquivo(s) selecionado(s)` : 'Escolher arquivos PDF ou arrastar aqui'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-files-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Arquivos Selecionados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"files-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"clear-files-button\",\n                onClick: clearAllFiles,\n                disabled: loading,\n                children: \"Remover todos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"selected-files-list\",\n              children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"file-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"pdf-icon\",\n                    children: \"\\uD83D\\uDCC4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 25\n                  }, this), file.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-size\",\n                    children: [\"(\", (file.size / 1024).toFixed(1), \" KB)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"remove-file-button\",\n                  onClick: () => removeFile(index),\n                  disabled: loading,\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 23\n                }, this)]\n              }, `${file.name}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `upload-button ${loading ? 'loading' : ''}`,\n            disabled: files.length === 0 || (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.status) !== 'online' || loading,\n            children: loading ? 'Processando...' : 'Extrair Resultados'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), (processingStage === 'upload' || processingStage === 'processing') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-indicator\",\n              style: {\n                width: `${calculateProgress()}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-status\",\n            children: currentProcessingFile ? `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${currentProcessingFile.length > 30 ? currentProcessingFile.substring(0, 30) + '...' : currentProcessingFile} (${processedFiles + 1}/${totalFiles})` : processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `upload-status ${uploadStatus.stage}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-icon\",\n            children: uploadStatus.stage === 'sucesso' ? '✓' : uploadStatus.stage === 'erro' ? '✗' : uploadStatus.stage === 'aviso' ? '!' : '⟳'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-message\",\n              children: uploadStatus.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this), uploadStatus.details && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-details\",\n              children: uploadStatus.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 19\n            }, this), uploadStatus.timestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-timestamp\",\n              children: uploadStatus.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this), uploadStatus && uploadStatus.stage === 'erro' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdf-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Poss\\xEDveis solu\\xE7\\xF5es:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Verifique se os PDFs n\\xE3o est\\xE3o protegidos por senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Tente salvar os PDFs novamente usando \\\"Salvar como\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Se poss\\xEDvel, imprima os documentos para novos PDFs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Entre em contato com o laborat\\xF3rio para vers\\xF5es alternativas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this), uploadStatus && uploadStatus.stage === 'aviso' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-notice\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Os documentos foram processados, mas alguns podem conter imprecis\\xF5es.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Verifique os resultados antes de usar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), loading && !processingStage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Processando documentos, aguarde...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }, this), error && !uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this), error && uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-errors\",\n        children: /*#__PURE__*/_jsxDEV(\"details\", {\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: \"Detalhes dos erros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"error-details\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: handleReset,\n          disabled: loading,\n          children: \"Processar novos documentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: summaries.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Os resultados dos exames aparecer\\xE3o aqui.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Selecione arquivos PDF para come\\xE7ar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-view-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Resultados Extra\\xEDdos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 15\n          }, this), summaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-count\",\n              children: [summaries.length, \" resultados extra\\xEDdos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 19\n            }, this), files.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"multi-file-notice\",\n              children: [\"de \", files.length, \" arquivos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"extraction-time\",\n              children: [\"\\xE0s \", new Date().toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"copy-instructions\",\n            children: \"Lista de resultados pronta para copiar:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-area-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: textAreaRef,\n              className: \"results-text-area\",\n              value: getSimplifiedTextForCopy(),\n              readOnly: true,\n              placeholder: \"Os resultados aparecer\\xE3o aqui...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: copyToClipboard,\n              className: \"copy-button\",\n              disabled: summaries.length === 0,\n              children: \"Copiar para \\xE1rea de transfer\\xEAncia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"api-info\",\n        children: [\"Ambiente: \", (apiStatus === null || apiStatus === void 0 ? void 0 : apiStatus.env) || 'Desconectado', \" | API: \", API_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oHMkQLju82gYxQAjM6yRRiG20pk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","ErrorHandler","jsxDEV","_jsxDEV","getApiUrl","window","location","hostname","API_URL","App","_s","files","setFiles","summaries","setSummaries","patientName","setPatientName","loading","setLoading","error","setError","apiStatus","setApiStatus","uploadStatus","setUploadStatus","processingStage","setProcessingStage","currentProcessingFile","setCurrentProcessingFile","processedFiles","setProcessedFiles","totalFiles","setTotalFiles","dragOver","setDragOver","textAreaRef","fileInputRef","checkApiStatus","status","message","url","response","fetch","ok","data","json","env","retryApiConnection","setTimeout","handleReset","current","value","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","droppedFiles","Array","from","dataTransfer","pdfFiles","filter","file","type","length","prevFiles","handleFileChange","selectedFiles","target","removeFile","index","_","i","clearAllFiles","handleSubmit","stage","timestamp","Date","toLocaleTimeString","allSummaries","fileErrors","patientNames","fileNumber","name","formData","FormData","append","substring","method","body","errorMessage","statusText","errorData","jsonError","Error","fileSummaries","map","summary","fileName","processedAt","push","console","details","err","join","getSimplifiedTextForCopy","resultsByFile","forEach","results","lines","content","split","line","trim","match","formattedText","isFirstFile","Object","keys","fileData","uniqueResults","Set","result","copyToClipboard","navigator","clipboard","isSecureContext","writeText","select","document","execCommand","originalText","style","background","color","calculateProgress","Math","round","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onRetry","onDragOver","onDragLeave","onDrop","onSubmit","id","ref","onChange","accept","multiple","htmlFor","disabled","size","toFixed","width","readOnly","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/confi/Downloads/pdf-summarizer/client/src/App.js"],"sourcesContent":["// App.js - Versão Minimalista e Elegante\r\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport ErrorHandler from './components/ErrorHandler';\r\n\r\n// Função para determinar a URL da API baseada no ambiente\r\nfunction getApiUrl() {\r\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n    return 'http://localhost:5000';\r\n  }\r\n  return 'https://server-theta-murex.vercel.app';\r\n}\r\n\r\nconst API_URL = getApiUrl();\r\n\r\nfunction App() {\r\n  const [files, setFiles] = useState([]);\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [patientName, setPatientName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [apiStatus, setApiStatus] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [processingStage, setProcessingStage] = useState(null);\r\n  const [currentProcessingFile, setCurrentProcessingFile] = useState(null);\r\n  const [processedFiles, setProcessedFiles] = useState(0);\r\n  const [totalFiles, setTotalFiles] = useState(0);\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const textAreaRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Verificar status da API ao carregar\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      setApiStatus({ status: 'checking', message: 'Verificando conexão...', url: API_URL });\r\n      \r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({\r\n            status: 'online',\r\n            env: data.env,\r\n            url: API_URL\r\n          });\r\n        } else {\r\n          setApiStatus({\r\n            status: 'error',\r\n            message: `Erro ${response.status}`,\r\n            url: API_URL\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({\r\n          status: 'offline',\r\n          message: 'Servidor indisponível',\r\n          error: error.message,\r\n          url: API_URL\r\n        });\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  // Função para reconectar com a API\r\n  const retryApiConnection = useCallback(() => {\r\n    setApiStatus({ status: 'checking', message: 'Reconectando...', url: API_URL });\r\n    setTimeout(async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setApiStatus({ status: 'online', env: data.env, url: API_URL });\r\n          setError(null);\r\n        } else {\r\n          setApiStatus({ status: 'error', message: `Erro ${response.status}`, url: API_URL });\r\n        }\r\n      } catch (error) {\r\n        setApiStatus({ status: 'offline', message: 'Servidor indisponível', url: API_URL });\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  // Função para resetar o estado\r\n  const handleReset = useCallback(() => {\r\n    setSummaries([]);\r\n    setPatientName('');\r\n    setError(null);\r\n    setFiles([]);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n    setCurrentProcessingFile(null);\r\n    setProcessedFiles(0);\r\n    setTotalFiles(0);\r\n    \r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Handlers para drag and drop\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    const pdfFiles = droppedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && droppedFiles.length > 0) {\r\n      setError('Por favor, solte apenas arquivos PDF válidos.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\r\n    setError(null);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n  }, []);\r\n\r\n  const handleFileChange = useCallback((e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    setUploadStatus(null);\r\n    setProcessingStage(null);\r\n    \r\n    const pdfFiles = selectedFiles.filter(file => file.type === 'application/pdf');\r\n    \r\n    if (pdfFiles.length === 0 && selectedFiles.length > 0) {\r\n      setError('Por favor, selecione apenas arquivos PDF válidos.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setFiles(prevFiles => [...prevFiles, ...pdfFiles]);\r\n    setError(null);\r\n  }, []);\r\n\r\n  // Função para remover arquivo\r\n  const removeFile = useCallback((index) => {\r\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  // Função para limpar todos os arquivos\r\n  const clearAllFiles = useCallback(() => {\r\n    setFiles([]);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  }, []);\r\n\r\n  // Função principal de upload e processamento\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (files.length === 0) {\r\n      setError('Por favor, selecione pelo menos um arquivo PDF válido.');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setUploadStatus({ \r\n      stage: 'iniciando', \r\n      message: 'Iniciando processamento...',\r\n      timestamp: new Date().toLocaleTimeString()\r\n    });\r\n    setProcessingStage('upload');\r\n    setTotalFiles(files.length);\r\n    setProcessedFiles(0);\r\n\r\n    const allSummaries = [];\r\n    const fileErrors = [];\r\n    const patientNames = {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      const fileNumber = i + 1;\r\n      setCurrentProcessingFile(file.name);\r\n      \r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('pdf', file);\r\n        \r\n        setUploadStatus({ \r\n          stage: 'enviando', \r\n          message: `Enviando ${fileNumber}/${files.length}: ${file.name.substring(0, 30)}${file.name.length > 30 ? '...' : ''}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        const response = await fetch(`${API_URL}/api/upload`, {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        \r\n        setProcessingStage('processing');\r\n        setUploadStatus({ \r\n          stage: 'processando', \r\n          message: `Processando ${fileNumber}/${files.length}: Extraindo dados...`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          let errorMessage = `Erro ${response.status}: ${response.statusText}`;\r\n          try {\r\n            const errorData = await response.json();\r\n            if (errorData.message) {\r\n              errorMessage = errorData.message;\r\n            }\r\n          } catch (jsonError) {\r\n            // Continuar com mensagem padrão\r\n          }\r\n          throw new Error(`Erro no arquivo ${file.name}: ${errorMessage}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (!data.summaries || data.summaries.length === 0) {\r\n          throw new Error(`Não foi possível extrair informações do documento ${file.name}.`);\r\n        }\r\n        \r\n        if (data.patientName) {\r\n          patientNames[file.name] = data.patientName;\r\n        }\r\n        \r\n        const fileSummaries = data.summaries.map(summary => ({\r\n          ...summary,\r\n          fileName: file.name,\r\n          patientName: data.patientName,\r\n          processedAt: new Date().toLocaleTimeString()\r\n        }));\r\n        \r\n        allSummaries.push(...fileSummaries);\r\n        \r\n        if (i === 0 && data.patientName) {\r\n          setPatientName(data.patientName);\r\n        }\r\n        \r\n        setProcessedFiles(i + 1);\r\n        \r\n      } catch (error) {\r\n        console.error(`Erro ao processar ${file.name}:`, error);\r\n        fileErrors.push({ \r\n          fileName: file.name, \r\n          error: error.message,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n      }\r\n    }\r\n    \r\n    setProcessingStage('complete');\r\n    \r\n    if (allSummaries.length > 0) {\r\n      setSummaries(allSummaries);\r\n      \r\n      if (fileErrors.length > 0) {\r\n        setUploadStatus({ \r\n          stage: 'aviso', \r\n          message: `Processados ${allSummaries.length} resultados de ${files.length - fileErrors.length}/${files.length} arquivos.`,\r\n          details: `Concluído às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        \r\n        const errorMessage = fileErrors.map(err => \r\n          `${err.fileName}: ${err.error}`\r\n        ).join('\\n');\r\n        setError(`Alguns arquivos não puderam ser processados:\\n\\n${errorMessage}`);\r\n      } else {\r\n        setUploadStatus({ \r\n          stage: 'sucesso', \r\n          message: `Processamento concluído! ${allSummaries.length} resultados de ${files.length} arquivos.`,\r\n          details: `Finalizado às ${new Date().toLocaleTimeString()}`,\r\n          timestamp: new Date().toLocaleTimeString()\r\n        });\r\n        setError(null);\r\n      }\r\n    } else {\r\n      setUploadStatus({ \r\n        stage: 'erro', \r\n        message: 'Nenhum resultado foi extraído dos arquivos.',\r\n        details: `Falha às ${new Date().toLocaleTimeString()}`,\r\n        timestamp: new Date().toLocaleTimeString()\r\n      });\r\n      \r\n      const errorMessage = fileErrors.map(err => \r\n        `${err.fileName}: ${err.error}`\r\n      ).join('\\n');\r\n      setError(`Falha ao processar todos os arquivos:\\n\\n${errorMessage}`);\r\n    }\r\n    \r\n    setLoading(false);\r\n    setCurrentProcessingFile(null);\r\n  };\r\n\r\n  // Gerar texto formatado para cópia\r\n  const getSimplifiedTextForCopy = useCallback(() => {\r\n    if (summaries.length === 0) return '';\r\n    \r\n    const resultsByFile = {};\r\n    \r\n    summaries.forEach((summary) => {\r\n      const fileName = summary.fileName || 'arquivo_desconhecido';\r\n      \r\n      if (!resultsByFile[fileName]) {\r\n        resultsByFile[fileName] = {\r\n          patientName: summary.patientName || patientName || \"Paciente\",\r\n          results: [],\r\n          processedAt: summary.processedAt\r\n        };\r\n      }\r\n      \r\n      const lines = summary.content.split('\\n');\r\n      lines.forEach((line) => {\r\n        if (line.trim() && \r\n            !line.match(/^SÉRIE|^HEMOGRAMA|^EXAMES/i) && \r\n            !line.match(/^Paciente:/i)) {\r\n          resultsByFile[fileName].results.push(line.trim());\r\n        }\r\n      });\r\n    });\r\n    \r\n    let formattedText = '';\r\n    let isFirstFile = true;\r\n    \r\n    Object.keys(resultsByFile).forEach((fileName) => {\r\n      if (!isFirstFile) {\r\n        formattedText += '\\n\\n═══════════════════════════════════════\\n\\n';\r\n      } else {\r\n        isFirstFile = false;\r\n      }\r\n      \r\n      const fileData = resultsByFile[fileName];\r\n      if (fileData.patientName) {\r\n        formattedText += `PACIENTE: ${fileData.patientName}\\n`;\r\n        if (fileData.processedAt) {\r\n          formattedText += `Processado às: ${fileData.processedAt}\\n`;\r\n        }\r\n        formattedText += '\\n';\r\n      }\r\n      \r\n      const uniqueResults = [...new Set(fileData.results)];\r\n      uniqueResults.forEach(result => {\r\n        formattedText += `${result}\\n`;\r\n      });\r\n    });\r\n    \r\n    return formattedText;\r\n  }, [summaries, patientName]);\r\n\r\n  // Função para copiar texto\r\n  const copyToClipboard = useCallback(async () => {\r\n    if (textAreaRef.current) {\r\n      try {\r\n        if (navigator.clipboard && window.isSecureContext) {\r\n          await navigator.clipboard.writeText(textAreaRef.current.value);\r\n        } else {\r\n          textAreaRef.current.select();\r\n          document.execCommand('copy');\r\n        }\r\n        \r\n        const originalText = textAreaRef.current.value;\r\n        textAreaRef.current.value = 'Resultados copiados com sucesso!';\r\n        textAreaRef.current.style.background = '#f0fdf4';\r\n        textAreaRef.current.style.color = '#166534';\r\n        \r\n        setTimeout(() => {\r\n          textAreaRef.current.value = originalText;\r\n          textAreaRef.current.style.background = '';\r\n          textAreaRef.current.style.color = '';\r\n        }, 2000);\r\n        \r\n      } catch (err) {\r\n        console.error('Erro ao copiar:', err);\r\n        const originalText = textAreaRef.current.value;\r\n        textAreaRef.current.value = 'Erro ao copiar. Tente selecionar manualmente.';\r\n        textAreaRef.current.style.background = '#fef2f2';\r\n        textAreaRef.current.style.color = '#dc2626';\r\n        \r\n        setTimeout(() => {\r\n          textAreaRef.current.value = originalText;\r\n          textAreaRef.current.style.background = '';\r\n          textAreaRef.current.style.color = '';\r\n        }, 3000);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Calcular progresso\r\n  const calculateProgress = useCallback(() => {\r\n    if (totalFiles === 0) return 0;\r\n    return Math.round((processedFiles / totalFiles) * 100);\r\n  }, [processedFiles, totalFiles]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"institute-logo\">\r\n          <span className=\"logo-text\">Instituto Paulo Godoi</span>\r\n        </div>\r\n        <h1>Extrator de Resultados de Exames</h1>\r\n        <p className=\"subtitle\">Sistema interno para processamento de laudos laboratoriais</p>\r\n        \r\n        {/* Status da API */}\r\n        {apiStatus && (\r\n          <div className={`api-status ${apiStatus.status}`}>\r\n            <span className=\"status-indicator\"></span>\r\n            {apiStatus.status === 'online' ? (\r\n              <span>Conectado ({apiStatus.env})</span>\r\n            ) : apiStatus.status === 'checking' ? (\r\n              <span>Verificando...</span>\r\n            ) : (\r\n              <span>{apiStatus.message}\r\n                <button className=\"retry-button\" onClick={retryApiConnection}>\r\n                  Tentar novamente\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </header>\r\n      \r\n      <main>\r\n        {/* Error Handler para problemas de API */}\r\n        {(apiStatus?.status === 'offline' || apiStatus?.status === 'error') && (\r\n          <ErrorHandler \r\n            error={`Não foi possível conectar ao servidor. ${apiStatus.message}`}\r\n            onRetry={retryApiConnection}\r\n          />\r\n        )}\r\n        \r\n        <div \r\n          className={`uploader-container ${dragOver ? 'drag-over' : ''}`}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n        >\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"file-input-container\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"pdf-upload\"\r\n                ref={fileInputRef}\r\n                onChange={handleFileChange}\r\n                accept=\"application/pdf\"\r\n                multiple\r\n              />\r\n              <label htmlFor=\"pdf-upload\" className={`file-label ${dragOver ? 'drag-active' : ''}`}>\r\n                {dragOver ? (\r\n                  'Solte os arquivos PDF aqui'\r\n                ) : files.length > 0 ? (\r\n                  `${files.length} arquivo(s) selecionado(s)`\r\n                ) : (\r\n                  'Escolher arquivos PDF ou arrastar aqui'\r\n                )}\r\n              </label>\r\n            </div>\r\n            \r\n            {/* Lista de arquivos selecionados */}\r\n            {files.length > 0 && (\r\n              <div className=\"selected-files-container\">\r\n                <h3>Arquivos Selecionados</h3>\r\n                <div className=\"files-actions\">\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"clear-files-button\" \r\n                    onClick={clearAllFiles}\r\n                    disabled={loading}\r\n                  >\r\n                    Remover todos\r\n                  </button>\r\n                </div>\r\n                <ul className=\"selected-files-list\">\r\n                  {files.map((file, index) => (\r\n                    <li key={`${file.name}-${index}`} className=\"file-item\">\r\n                      <span className=\"file-name\">\r\n                        <span className=\"pdf-icon\">📄</span>\r\n                        {file.name}\r\n                        <span className=\"file-size\">({(file.size / 1024).toFixed(1)} KB)</span>\r\n                      </span>\r\n                      <button \r\n                        type=\"button\" \r\n                        className=\"remove-file-button\" \r\n                        onClick={() => removeFile(index)}\r\n                        disabled={loading}\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              className={`upload-button ${loading ? 'loading' : ''}`}\r\n              disabled={files.length === 0 || apiStatus?.status !== 'online' || loading}\r\n            >\r\n              {loading ? 'Processando...' : 'Extrair Resultados'}\r\n            </button>\r\n          </form>\r\n          \r\n          {/* Barra de progresso */}\r\n          {(processingStage === 'upload' || processingStage === 'processing') && (\r\n            <div className=\"progress-bar-container\">\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-indicator\" \r\n                  style={{ width: `${calculateProgress()}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"progress-status\">\r\n                {currentProcessingFile ? (\r\n                  `${processingStage === 'upload' ? 'Enviando' : 'Processando'}: ${\r\n                    currentProcessingFile.length > 30 ? \r\n                    currentProcessingFile.substring(0, 30) + '...' : \r\n                    currentProcessingFile\r\n                  } (${processedFiles + 1}/${totalFiles})`\r\n                ) : (\r\n                  processingStage === 'upload' ? 'Enviando arquivo...' : 'Processando documento...'\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Status de upload */}\r\n          {uploadStatus && (\r\n            <div className={`upload-status ${uploadStatus.stage}`}>\r\n              <span className=\"status-icon\">\r\n                {uploadStatus.stage === 'sucesso' ? '✓' : \r\n                uploadStatus.stage === 'erro' ? '✗' : \r\n                uploadStatus.stage === 'aviso' ? '!' : '⟳'}\r\n              </span>\r\n              <div className=\"status-content\">\r\n                <div className=\"status-message\">{uploadStatus.message}</div>\r\n                {uploadStatus.details && (\r\n                  <div className=\"status-details\">{uploadStatus.details}</div>\r\n                )}\r\n                {uploadStatus.timestamp && (\r\n                  <div className=\"status-timestamp\">{uploadStatus.timestamp}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Dicas para PDFs problemáticos */}\r\n          {uploadStatus && uploadStatus.stage === 'erro' && (\r\n            <div className=\"pdf-tips\">\r\n              <h4>Possíveis soluções:</h4>\r\n              <ul>\r\n                <li>Verifique se os PDFs não estão protegidos por senha</li>\r\n                <li>Tente salvar os PDFs novamente usando \"Salvar como\"</li>\r\n                <li>Se possível, imprima os documentos para novos PDFs</li>\r\n                <li>Entre em contato com o laboratório para versões alternativas</li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Aviso para processamento parcial */}\r\n          {uploadStatus && uploadStatus.stage === 'aviso' && (\r\n            <div className=\"processing-notice\">\r\n              <p>Os documentos foram processados, mas alguns podem conter imprecisões.</p>\r\n              <p>Verifique os resultados antes de usar.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {loading && !processingStage && (\r\n          <p className=\"loading\">Processando documentos, aguarde...</p>\r\n        )}\r\n        \r\n        {error && !uploadStatus && (\r\n          <p className=\"error\">{error}</p>\r\n        )}\r\n        \r\n        {/* Detalhes de erros */}\r\n        {error && uploadStatus && (\r\n          <div className=\"file-errors\">\r\n            <details>\r\n              <summary>Detalhes dos erros</summary>\r\n              <pre className=\"error-details\">{error}</pre>\r\n            </details>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Botão de reset */}\r\n        {summaries.length > 0 && (\r\n          <div className=\"reset-button-container\">\r\n            <button \r\n              className=\"reset-button\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Processar novos documentos\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"summary-container\">\r\n          {summaries.length === 0 ? (\r\n            <div className=\"empty-message\">\r\n              <p>Os resultados dos exames aparecerão aqui.</p>\r\n              <p>Selecione arquivos PDF para começar.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-view-container\">\r\n              <h2>Resultados Extraídos</h2>\r\n              {summaries.length > 0 && (\r\n                <div className=\"summary-info\">\r\n                  <span className=\"file-count\">{summaries.length} resultados extraídos</span>\r\n                  {files.length > 1 && (\r\n                    <span className=\"multi-file-notice\">de {files.length} arquivos</span>\r\n                  )}\r\n                  <span className=\"extraction-time\">às {new Date().toLocaleTimeString()}</span>\r\n                </div>\r\n              )}\r\n              <p className=\"copy-instructions\">Lista de resultados pronta para copiar:</p>\r\n              <div className=\"text-area-container\">\r\n                <textarea\r\n                  ref={textAreaRef}\r\n                  className=\"results-text-area\"\r\n                  value={getSimplifiedTextForCopy()}\r\n                  readOnly\r\n                  placeholder=\"Os resultados aparecerão aqui...\"\r\n                />\r\n                <button \r\n                  onClick={copyToClipboard} \r\n                  className=\"copy-button\"\r\n                  disabled={summaries.length === 0}\r\n                >\r\n                  Copiar para área de transferência\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n      \r\n      <footer>\r\n        <p>© 2025 - Instituto Paulo Godoi - Sistema de Processamento de Exames</p>\r\n        <p className=\"api-info\">\r\n          Ambiente: {apiStatus?.env || 'Desconectado'} | API: {API_URL}\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAAA,EAAG;EACnB,IAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,EAAE;IACxF,OAAO,uBAAuB;EAChC;EACA,OAAO,uCAAuC;AAChD;AAEA,MAAMC,OAAO,GAAGJ,SAAS,CAAC,CAAC;AAE3B,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC4B,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC8B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACoC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMsC,WAAW,GAAGrC,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMsC,YAAY,GAAGtC,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMsC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjCf,YAAY,CAAC;QAAEgB,MAAM,EAAE,UAAU;QAAEC,OAAO,EAAE,wBAAwB;QAAEC,GAAG,EAAEhC;MAAQ,CAAC,CAAC;MAErF,IAAI;QACF,MAAMiC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGlC,OAAO,aAAa,CAAC;QACrD,IAAIiC,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCvB,YAAY,CAAC;YACXgB,MAAM,EAAE,QAAQ;YAChBQ,GAAG,EAAEF,IAAI,CAACE,GAAG;YACbN,GAAG,EAAEhC;UACP,CAAC,CAAC;QACJ,CAAC,MAAM;UACLc,YAAY,CAAC;YACXgB,MAAM,EAAE,OAAO;YACfC,OAAO,EAAE,QAAQE,QAAQ,CAACH,MAAM,EAAE;YAClCE,GAAG,EAAEhC;UACP,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdG,YAAY,CAAC;UACXgB,MAAM,EAAE,SAAS;UACjBC,OAAO,EAAE,uBAAuB;UAChCpB,KAAK,EAAEA,KAAK,CAACoB,OAAO;UACpBC,GAAG,EAAEhC;QACP,CAAC,CAAC;MACJ;IACF,CAAC;IAED6B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,kBAAkB,GAAG/C,WAAW,CAAC,MAAM;IAC3CsB,YAAY,CAAC;MAAEgB,MAAM,EAAE,UAAU;MAAEC,OAAO,EAAE,iBAAiB;MAAEC,GAAG,EAAEhC;IAAQ,CAAC,CAAC;IAC9EwC,UAAU,CAAC,YAAY;MACrB,IAAI;QACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGlC,OAAO,aAAa,CAAC;QACrD,IAAIiC,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCvB,YAAY,CAAC;YAAEgB,MAAM,EAAE,QAAQ;YAAEQ,GAAG,EAAEF,IAAI,CAACE,GAAG;YAAEN,GAAG,EAAEhC;UAAQ,CAAC,CAAC;UAC/DY,QAAQ,CAAC,IAAI,CAAC;QAChB,CAAC,MAAM;UACLE,YAAY,CAAC;YAAEgB,MAAM,EAAE,OAAO;YAAEC,OAAO,EAAE,QAAQE,QAAQ,CAACH,MAAM,EAAE;YAAEE,GAAG,EAAEhC;UAAQ,CAAC,CAAC;QACrF;MACF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdG,YAAY,CAAC;UAAEgB,MAAM,EAAE,SAAS;UAAEC,OAAO,EAAE,uBAAuB;UAAEC,GAAG,EAAEhC;QAAQ,CAAC,CAAC;MACrF;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMyC,WAAW,GAAGjD,WAAW,CAAC,MAAM;IACpCc,YAAY,CAAC,EAAE,CAAC;IAChBE,cAAc,CAAC,EAAE,CAAC;IAClBI,QAAQ,CAAC,IAAI,CAAC;IACdR,QAAQ,CAAC,EAAE,CAAC;IACZY,eAAe,CAAC,IAAI,CAAC;IACrBE,kBAAkB,CAAC,IAAI,CAAC;IACxBE,wBAAwB,CAAC,IAAI,CAAC;IAC9BE,iBAAiB,CAAC,CAAC,CAAC;IACpBE,aAAa,CAAC,CAAC,CAAC;IAEhB,IAAII,YAAY,CAACc,OAAO,EAAE;MACxBd,YAAY,CAACc,OAAO,CAACC,KAAK,GAAG,EAAE;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,cAAc,GAAGpD,WAAW,CAAEqD,CAAC,IAAK;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBpB,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqB,eAAe,GAAGvD,WAAW,CAAEqD,CAAC,IAAK;IACzCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBpB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMsB,UAAU,GAAGxD,WAAW,CAAEqD,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBpB,WAAW,CAAC,KAAK,CAAC;IAElB,MAAMuB,YAAY,GAAGC,KAAK,CAACC,IAAI,CAACN,CAAC,CAACO,YAAY,CAACjD,KAAK,CAAC;IACrD,MAAMkD,QAAQ,GAAGJ,YAAY,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,iBAAiB,CAAC;IAE7E,IAAIH,QAAQ,CAACI,MAAM,KAAK,CAAC,IAAIR,YAAY,CAACQ,MAAM,GAAG,CAAC,EAAE;MACpD7C,QAAQ,CAAC,+CAA+C,CAAC;MACzD4B,UAAU,CAAC,MAAM5B,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;MACtC;IACF;IAEAR,QAAQ,CAACsD,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGL,QAAQ,CAAC,CAAC;IAClDzC,QAAQ,CAAC,IAAI,CAAC;IACdI,eAAe,CAAC,IAAI,CAAC;IACrBE,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMyC,gBAAgB,GAAGnE,WAAW,CAAEqD,CAAC,IAAK;IAC1C,MAAMe,aAAa,GAAGV,KAAK,CAACC,IAAI,CAACN,CAAC,CAACgB,MAAM,CAAC1D,KAAK,CAAC;IAChDa,eAAe,CAAC,IAAI,CAAC;IACrBE,kBAAkB,CAAC,IAAI,CAAC;IAExB,MAAMmC,QAAQ,GAAGO,aAAa,CAACN,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,iBAAiB,CAAC;IAE9E,IAAIH,QAAQ,CAACI,MAAM,KAAK,CAAC,IAAIG,aAAa,CAACH,MAAM,GAAG,CAAC,EAAE;MACrD7C,QAAQ,CAAC,mDAAmD,CAAC;MAC7D4B,UAAU,CAAC,MAAM5B,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;MACtC;IACF;IAEAR,QAAQ,CAACsD,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGL,QAAQ,CAAC,CAAC;IAClDzC,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMkD,UAAU,GAAGtE,WAAW,CAAEuE,KAAK,IAAK;IACxC3D,QAAQ,CAACsD,SAAS,IAAIA,SAAS,CAACJ,MAAM,CAAC,CAACU,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKF,KAAK,CAAC,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,aAAa,GAAG1E,WAAW,CAAC,MAAM;IACtCY,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAIwB,YAAY,CAACc,OAAO,EAAE;MACxBd,YAAY,CAACc,OAAO,CAACC,KAAK,GAAG,EAAE;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMwB,YAAY,GAAG,MAAOtB,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI3C,KAAK,CAACsD,MAAM,KAAK,CAAC,EAAE;MACtB7C,QAAQ,CAAC,wDAAwD,CAAC;MAClE4B,UAAU,CAAC,MAAM5B,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;MACtC;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdI,eAAe,CAAC;MACdoD,KAAK,EAAE,WAAW;MAClBrC,OAAO,EAAE,4BAA4B;MACrCsC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;IAC3C,CAAC,CAAC;IACFrD,kBAAkB,CAAC,QAAQ,CAAC;IAC5BM,aAAa,CAACrB,KAAK,CAACsD,MAAM,CAAC;IAC3BnC,iBAAiB,CAAC,CAAC,CAAC;IAEpB,MAAMkD,YAAY,GAAG,EAAE;IACvB,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,YAAY,GAAG,CAAC,CAAC;IAEvB,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9D,KAAK,CAACsD,MAAM,EAAEQ,CAAC,EAAE,EAAE;MACrC,MAAMV,IAAI,GAAGpD,KAAK,CAAC8D,CAAC,CAAC;MACrB,MAAMU,UAAU,GAAGV,CAAC,GAAG,CAAC;MACxB7C,wBAAwB,CAACmC,IAAI,CAACqB,IAAI,CAAC;MAEnC,IAAI;QACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAExB,IAAI,CAAC;QAE5BvC,eAAe,CAAC;UACdoD,KAAK,EAAE,UAAU;UACjBrC,OAAO,EAAE,YAAY4C,UAAU,IAAIxE,KAAK,CAACsD,MAAM,KAAKF,IAAI,CAACqB,IAAI,CAACI,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGzB,IAAI,CAACqB,IAAI,CAACnB,MAAM,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE;UACrHY,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAC3C,CAAC,CAAC;QAEF,MAAMtC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGlC,OAAO,aAAa,EAAE;UACpDiF,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEL;QACR,CAAC,CAAC;QAEF3D,kBAAkB,CAAC,YAAY,CAAC;QAChCF,eAAe,CAAC;UACdoD,KAAK,EAAE,aAAa;UACpBrC,OAAO,EAAE,eAAe4C,UAAU,IAAIxE,KAAK,CAACsD,MAAM,sBAAsB;UACxEY,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAC3C,CAAC,CAAC;QAEF,IAAI,CAACtC,QAAQ,CAACE,EAAE,EAAE;UAChB,IAAIgD,YAAY,GAAG,QAAQlD,QAAQ,CAACH,MAAM,KAAKG,QAAQ,CAACmD,UAAU,EAAE;UACpE,IAAI;YACF,MAAMC,SAAS,GAAG,MAAMpD,QAAQ,CAACI,IAAI,CAAC,CAAC;YACvC,IAAIgD,SAAS,CAACtD,OAAO,EAAE;cACrBoD,YAAY,GAAGE,SAAS,CAACtD,OAAO;YAClC;UACF,CAAC,CAAC,OAAOuD,SAAS,EAAE;YAClB;UAAA;UAEF,MAAM,IAAIC,KAAK,CAAC,mBAAmBhC,IAAI,CAACqB,IAAI,KAAKO,YAAY,EAAE,CAAC;QAClE;QAEA,MAAM/C,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElC,IAAI,CAACD,IAAI,CAAC/B,SAAS,IAAI+B,IAAI,CAAC/B,SAAS,CAACoD,MAAM,KAAK,CAAC,EAAE;UAClD,MAAM,IAAI8B,KAAK,CAAC,qDAAqDhC,IAAI,CAACqB,IAAI,GAAG,CAAC;QACpF;QAEA,IAAIxC,IAAI,CAAC7B,WAAW,EAAE;UACpBmE,YAAY,CAACnB,IAAI,CAACqB,IAAI,CAAC,GAAGxC,IAAI,CAAC7B,WAAW;QAC5C;QAEA,MAAMiF,aAAa,GAAGpD,IAAI,CAAC/B,SAAS,CAACoF,GAAG,CAACC,OAAO,KAAK;UACnD,GAAGA,OAAO;UACVC,QAAQ,EAAEpC,IAAI,CAACqB,IAAI;UACnBrE,WAAW,EAAE6B,IAAI,CAAC7B,WAAW;UAC7BqF,WAAW,EAAE,IAAItB,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEHC,YAAY,CAACqB,IAAI,CAAC,GAAGL,aAAa,CAAC;QAEnC,IAAIvB,CAAC,KAAK,CAAC,IAAI7B,IAAI,CAAC7B,WAAW,EAAE;UAC/BC,cAAc,CAAC4B,IAAI,CAAC7B,WAAW,CAAC;QAClC;QAEAe,iBAAiB,CAAC2C,CAAC,GAAG,CAAC,CAAC;MAE1B,CAAC,CAAC,OAAOtD,KAAK,EAAE;QACdmF,OAAO,CAACnF,KAAK,CAAC,qBAAqB4C,IAAI,CAACqB,IAAI,GAAG,EAAEjE,KAAK,CAAC;QACvD8D,UAAU,CAACoB,IAAI,CAAC;UACdF,QAAQ,EAAEpC,IAAI,CAACqB,IAAI;UACnBjE,KAAK,EAAEA,KAAK,CAACoB,OAAO;UACpBsC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAC3C,CAAC,CAAC;MACJ;IACF;IAEArD,kBAAkB,CAAC,UAAU,CAAC;IAE9B,IAAIsD,YAAY,CAACf,MAAM,GAAG,CAAC,EAAE;MAC3BnD,YAAY,CAACkE,YAAY,CAAC;MAE1B,IAAIC,UAAU,CAAChB,MAAM,GAAG,CAAC,EAAE;QACzBzC,eAAe,CAAC;UACdoD,KAAK,EAAE,OAAO;UACdrC,OAAO,EAAE,eAAeyC,YAAY,CAACf,MAAM,kBAAkBtD,KAAK,CAACsD,MAAM,GAAGgB,UAAU,CAAChB,MAAM,IAAItD,KAAK,CAACsD,MAAM,YAAY;UACzHsC,OAAO,EAAE,gBAAgB,IAAIzB,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAE;UAC1DF,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAC3C,CAAC,CAAC;QAEF,MAAMY,YAAY,GAAGV,UAAU,CAACgB,GAAG,CAACO,GAAG,IACrC,GAAGA,GAAG,CAACL,QAAQ,KAAKK,GAAG,CAACrF,KAAK,EAC/B,CAAC,CAACsF,IAAI,CAAC,IAAI,CAAC;QACZrF,QAAQ,CAAC,mDAAmDuE,YAAY,EAAE,CAAC;MAC7E,CAAC,MAAM;QACLnE,eAAe,CAAC;UACdoD,KAAK,EAAE,SAAS;UAChBrC,OAAO,EAAE,4BAA4ByC,YAAY,CAACf,MAAM,kBAAkBtD,KAAK,CAACsD,MAAM,YAAY;UAClGsC,OAAO,EAAE,iBAAiB,IAAIzB,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAE;UAC3DF,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAC3C,CAAC,CAAC;QACF3D,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC,MAAM;MACLI,eAAe,CAAC;QACdoD,KAAK,EAAE,MAAM;QACbrC,OAAO,EAAE,6CAA6C;QACtDgE,OAAO,EAAE,YAAY,IAAIzB,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAE;QACtDF,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAC3C,CAAC,CAAC;MAEF,MAAMY,YAAY,GAAGV,UAAU,CAACgB,GAAG,CAACO,GAAG,IACrC,GAAGA,GAAG,CAACL,QAAQ,KAAKK,GAAG,CAACrF,KAAK,EAC/B,CAAC,CAACsF,IAAI,CAAC,IAAI,CAAC;MACZrF,QAAQ,CAAC,4CAA4CuE,YAAY,EAAE,CAAC;IACtE;IAEAzE,UAAU,CAAC,KAAK,CAAC;IACjBU,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC;;EAED;EACA,MAAM8E,wBAAwB,GAAG1G,WAAW,CAAC,MAAM;IACjD,IAAIa,SAAS,CAACoD,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;IAErC,MAAM0C,aAAa,GAAG,CAAC,CAAC;IAExB9F,SAAS,CAAC+F,OAAO,CAAEV,OAAO,IAAK;MAC7B,MAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAQ,IAAI,sBAAsB;MAE3D,IAAI,CAACQ,aAAa,CAACR,QAAQ,CAAC,EAAE;QAC5BQ,aAAa,CAACR,QAAQ,CAAC,GAAG;UACxBpF,WAAW,EAAEmF,OAAO,CAACnF,WAAW,IAAIA,WAAW,IAAI,UAAU;UAC7D8F,OAAO,EAAE,EAAE;UACXT,WAAW,EAAEF,OAAO,CAACE;QACvB,CAAC;MACH;MAEA,MAAMU,KAAK,GAAGZ,OAAO,CAACa,OAAO,CAACC,KAAK,CAAC,IAAI,CAAC;MACzCF,KAAK,CAACF,OAAO,CAAEK,IAAI,IAAK;QACtB,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,IACX,CAACD,IAAI,CAACE,KAAK,CAAC,4BAA4B,CAAC,IACzC,CAACF,IAAI,CAACE,KAAK,CAAC,aAAa,CAAC,EAAE;UAC9BR,aAAa,CAACR,QAAQ,CAAC,CAACU,OAAO,CAACR,IAAI,CAACY,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;QACnD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAIE,aAAa,GAAG,EAAE;IACtB,IAAIC,WAAW,GAAG,IAAI;IAEtBC,MAAM,CAACC,IAAI,CAACZ,aAAa,CAAC,CAACC,OAAO,CAAET,QAAQ,IAAK;MAC/C,IAAI,CAACkB,WAAW,EAAE;QAChBD,aAAa,IAAI,iDAAiD;MACpE,CAAC,MAAM;QACLC,WAAW,GAAG,KAAK;MACrB;MAEA,MAAMG,QAAQ,GAAGb,aAAa,CAACR,QAAQ,CAAC;MACxC,IAAIqB,QAAQ,CAACzG,WAAW,EAAE;QACxBqG,aAAa,IAAI,aAAaI,QAAQ,CAACzG,WAAW,IAAI;QACtD,IAAIyG,QAAQ,CAACpB,WAAW,EAAE;UACxBgB,aAAa,IAAI,kBAAkBI,QAAQ,CAACpB,WAAW,IAAI;QAC7D;QACAgB,aAAa,IAAI,IAAI;MACvB;MAEA,MAAMK,aAAa,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACF,QAAQ,CAACX,OAAO,CAAC,CAAC;MACpDY,aAAa,CAACb,OAAO,CAACe,MAAM,IAAI;QAC9BP,aAAa,IAAI,GAAGO,MAAM,IAAI;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOP,aAAa;EACtB,CAAC,EAAE,CAACvG,SAAS,EAAEE,WAAW,CAAC,CAAC;;EAE5B;EACA,MAAM6G,eAAe,GAAG5H,WAAW,CAAC,YAAY;IAC9C,IAAImC,WAAW,CAACe,OAAO,EAAE;MACvB,IAAI;QACF,IAAI2E,SAAS,CAACC,SAAS,IAAIzH,MAAM,CAAC0H,eAAe,EAAE;UACjD,MAAMF,SAAS,CAACC,SAAS,CAACE,SAAS,CAAC7F,WAAW,CAACe,OAAO,CAACC,KAAK,CAAC;QAChE,CAAC,MAAM;UACLhB,WAAW,CAACe,OAAO,CAAC+E,MAAM,CAAC,CAAC;UAC5BC,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC;QAC9B;QAEA,MAAMC,YAAY,GAAGjG,WAAW,CAACe,OAAO,CAACC,KAAK;QAC9ChB,WAAW,CAACe,OAAO,CAACC,KAAK,GAAG,kCAAkC;QAC9DhB,WAAW,CAACe,OAAO,CAACmF,KAAK,CAACC,UAAU,GAAG,SAAS;QAChDnG,WAAW,CAACe,OAAO,CAACmF,KAAK,CAACE,KAAK,GAAG,SAAS;QAE3CvF,UAAU,CAAC,MAAM;UACfb,WAAW,CAACe,OAAO,CAACC,KAAK,GAAGiF,YAAY;UACxCjG,WAAW,CAACe,OAAO,CAACmF,KAAK,CAACC,UAAU,GAAG,EAAE;UACzCnG,WAAW,CAACe,OAAO,CAACmF,KAAK,CAACE,KAAK,GAAG,EAAE;QACtC,CAAC,EAAE,IAAI,CAAC;MAEV,CAAC,CAAC,OAAO/B,GAAG,EAAE;QACZF,OAAO,CAACnF,KAAK,CAAC,iBAAiB,EAAEqF,GAAG,CAAC;QACrC,MAAM4B,YAAY,GAAGjG,WAAW,CAACe,OAAO,CAACC,KAAK;QAC9ChB,WAAW,CAACe,OAAO,CAACC,KAAK,GAAG,+CAA+C;QAC3EhB,WAAW,CAACe,OAAO,CAACmF,KAAK,CAACC,UAAU,GAAG,SAAS;QAChDnG,WAAW,CAACe,OAAO,CAACmF,KAAK,CAACE,KAAK,GAAG,SAAS;QAE3CvF,UAAU,CAAC,MAAM;UACfb,WAAW,CAACe,OAAO,CAACC,KAAK,GAAGiF,YAAY;UACxCjG,WAAW,CAACe,OAAO,CAACmF,KAAK,CAACC,UAAU,GAAG,EAAE;UACzCnG,WAAW,CAACe,OAAO,CAACmF,KAAK,CAACE,KAAK,GAAG,EAAE;QACtC,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,iBAAiB,GAAGxI,WAAW,CAAC,MAAM;IAC1C,IAAI+B,UAAU,KAAK,CAAC,EAAE,OAAO,CAAC;IAC9B,OAAO0G,IAAI,CAACC,KAAK,CAAE7G,cAAc,GAAGE,UAAU,GAAI,GAAG,CAAC;EACxD,CAAC,EAAE,CAACF,cAAc,EAAEE,UAAU,CAAC,CAAC;EAEhC,oBACE5B,OAAA;IAAKwI,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzI,OAAA;MAAQwI,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BzI,OAAA;QAAKwI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BzI,OAAA;UAAMwI,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAqB;UAAAzC,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACN5I,OAAA;QAAAyI,QAAA,EAAI;MAAgC;QAAAzC,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzC5I,OAAA;QAAGwI,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAA0D;QAAAzC,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAGrF1H,SAAS,iBACRlB,OAAA;QAAKwI,SAAS,EAAE,cAActH,SAAS,CAACiB,MAAM,EAAG;QAAAsG,QAAA,gBAC/CzI,OAAA;UAAMwI,SAAS,EAAC;QAAkB;UAAAxC,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACzC1H,SAAS,CAACiB,MAAM,KAAK,QAAQ,gBAC5BnC,OAAA;UAAAyI,QAAA,GAAM,aAAW,EAACvH,SAAS,CAACyB,GAAG,EAAC,GAAC;QAAA;UAAAqD,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GACtC1H,SAAS,CAACiB,MAAM,KAAK,UAAU,gBACjCnC,OAAA;UAAAyI,QAAA,EAAM;QAAc;UAAAzC,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAE3B5I,OAAA;UAAAyI,QAAA,GAAOvH,SAAS,CAACkB,OAAO,eACtBpC,OAAA;YAAQwI,SAAS,EAAC,cAAc;YAACK,OAAO,EAAEjG,kBAAmB;YAAA6F,QAAA,EAAC;UAE9D;YAAAzC,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACP;MAAA;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAA5C,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAET5I,OAAA;MAAAyI,QAAA,GAEG,CAAC,CAAAvH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEiB,MAAM,MAAK,SAAS,IAAI,CAAAjB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEiB,MAAM,MAAK,OAAO,kBAChEnC,OAAA,CAACF,YAAY;QACXkB,KAAK,EAAE,0CAA0CE,SAAS,CAACkB,OAAO,EAAG;QACrE0G,OAAO,EAAElG;MAAmB;QAAAoD,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CACF,eAED5I,OAAA;QACEwI,SAAS,EAAE,sBAAsB1G,QAAQ,GAAG,WAAW,GAAG,EAAE,EAAG;QAC/DiH,UAAU,EAAE9F,cAAe;QAC3B+F,WAAW,EAAE5F,eAAgB;QAC7B6F,MAAM,EAAE5F,UAAW;QAAAoF,QAAA,gBAEnBzI,OAAA;UAAMkJ,QAAQ,EAAE1E,YAAa;UAAAiE,QAAA,gBAC3BzI,OAAA;YAAKwI,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnCzI,OAAA;cACE6D,IAAI,EAAC,MAAM;cACXsF,EAAE,EAAC,YAAY;cACfC,GAAG,EAAEnH,YAAa;cAClBoH,QAAQ,EAAErF,gBAAiB;cAC3BsF,MAAM,EAAC,iBAAiB;cACxBC,QAAQ;YAAA;cAAAvD,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACF5I,OAAA;cAAOwJ,OAAO,EAAC,YAAY;cAAChB,SAAS,EAAE,cAAc1G,QAAQ,GAAG,aAAa,GAAG,EAAE,EAAG;cAAA2G,QAAA,EAClF3G,QAAQ,GACP,4BAA4B,GAC1BtB,KAAK,CAACsD,MAAM,GAAG,CAAC,GAClB,GAAGtD,KAAK,CAACsD,MAAM,4BAA4B,GAE3C;YACD;cAAAkC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EAGLpI,KAAK,CAACsD,MAAM,GAAG,CAAC,iBACf9D,OAAA;YAAKwI,SAAS,EAAC,0BAA0B;YAAAC,QAAA,gBACvCzI,OAAA;cAAAyI,QAAA,EAAI;YAAqB;cAAAzC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9B5I,OAAA;cAAKwI,SAAS,EAAC,eAAe;cAAAC,QAAA,eAC5BzI,OAAA;gBACE6D,IAAI,EAAC,QAAQ;gBACb2E,SAAS,EAAC,oBAAoB;gBAC9BK,OAAO,EAAEtE,aAAc;gBACvBkF,QAAQ,EAAE3I,OAAQ;gBAAA2H,QAAA,EACnB;cAED;gBAAAzC,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAA5C,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACN5I,OAAA;cAAIwI,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAChCjI,KAAK,CAACsF,GAAG,CAAC,CAAClC,IAAI,EAAEQ,KAAK,kBACrBpE,OAAA;gBAAkCwI,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACrDzI,OAAA;kBAAMwI,SAAS,EAAC,WAAW;kBAAAC,QAAA,gBACzBzI,OAAA;oBAAMwI,SAAS,EAAC,UAAU;oBAAAC,QAAA,EAAC;kBAAE;oBAAAzC,QAAA,EAAA0C,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,EACnChF,IAAI,CAACqB,IAAI,eACVjF,OAAA;oBAAMwI,SAAS,EAAC,WAAW;oBAAAC,QAAA,GAAC,GAAC,EAAC,CAAC7E,IAAI,CAAC8F,IAAI,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI;kBAAA;oBAAA3D,QAAA,EAAA0C,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAA5C,QAAA,EAAA0C,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnE,CAAC,eACP5I,OAAA;kBACE6D,IAAI,EAAC,QAAQ;kBACb2E,SAAS,EAAC,oBAAoB;kBAC9BK,OAAO,EAAEA,CAAA,KAAM1E,UAAU,CAACC,KAAK,CAAE;kBACjCqF,QAAQ,EAAE3I,OAAQ;kBAAA2H,QAAA,EACnB;gBAED;kBAAAzC,QAAA,EAAA0C,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAbF,GAAGhF,IAAI,CAACqB,IAAI,IAAIb,KAAK,EAAE;gBAAA4B,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAc5B,CACL;YAAC;cAAA5C,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CACN,eAED5I,OAAA;YACE6D,IAAI,EAAC,QAAQ;YACb2E,SAAS,EAAE,iBAAiB1H,OAAO,GAAG,SAAS,GAAG,EAAE,EAAG;YACvD2I,QAAQ,EAAEjJ,KAAK,CAACsD,MAAM,KAAK,CAAC,IAAI,CAAA5C,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEiB,MAAM,MAAK,QAAQ,IAAIrB,OAAQ;YAAA2H,QAAA,EAEzE3H,OAAO,GAAG,gBAAgB,GAAG;UAAoB;YAAAkF,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EAGN,CAACtH,eAAe,KAAK,QAAQ,IAAIA,eAAe,KAAK,YAAY,kBAChEtB,OAAA;UAAKwI,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCzI,OAAA;YAAKwI,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC3BzI,OAAA;cACEwI,SAAS,EAAC,oBAAoB;cAC9BN,KAAK,EAAE;gBAAE0B,KAAK,EAAE,GAAGvB,iBAAiB,CAAC,CAAC;cAAI;YAAE;cAAArC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UAAC;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACN5I,OAAA;YAAKwI,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC7BjH,qBAAqB,GACpB,GAAGF,eAAe,KAAK,QAAQ,GAAG,UAAU,GAAG,aAAa,KAC1DE,qBAAqB,CAACsC,MAAM,GAAG,EAAE,GACjCtC,qBAAqB,CAAC6D,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAC9C7D,qBAAqB,KAClBE,cAAc,GAAG,CAAC,IAAIE,UAAU,GAAG,GAExCN,eAAe,KAAK,QAAQ,GAAG,qBAAqB,GAAG;UACxD;YAAA0E,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGAxH,YAAY,iBACXpB,OAAA;UAAKwI,SAAS,EAAE,iBAAiBpH,YAAY,CAACqD,KAAK,EAAG;UAAAgE,QAAA,gBACpDzI,OAAA;YAAMwI,SAAS,EAAC,aAAa;YAAAC,QAAA,EAC1BrH,YAAY,CAACqD,KAAK,KAAK,SAAS,GAAG,GAAG,GACvCrD,YAAY,CAACqD,KAAK,KAAK,MAAM,GAAG,GAAG,GACnCrD,YAAY,CAACqD,KAAK,KAAK,OAAO,GAAG,GAAG,GAAG;UAAG;YAAAuB,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACP5I,OAAA;YAAKwI,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BzI,OAAA;cAAKwI,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAErH,YAAY,CAACgB;YAAO;cAAA4D,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC3DxH,YAAY,CAACgF,OAAO,iBACnBpG,OAAA;cAAKwI,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAErH,YAAY,CAACgF;YAAO;cAAAJ,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAC5D,EACAxH,YAAY,CAACsD,SAAS,iBACrB1E,OAAA;cAAKwI,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAErH,YAAY,CAACsD;YAAS;cAAAsB,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAChE;UAAA;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGAxH,YAAY,IAAIA,YAAY,CAACqD,KAAK,KAAK,MAAM,iBAC5CzE,OAAA;UAAKwI,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBzI,OAAA;YAAAyI,QAAA,EAAI;UAAmB;YAAAzC,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5B5I,OAAA;YAAAyI,QAAA,gBACEzI,OAAA;cAAAyI,QAAA,EAAI;YAAmD;cAAAzC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5D5I,OAAA;cAAAyI,QAAA,EAAI;YAAmD;cAAAzC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5D5I,OAAA;cAAAyI,QAAA,EAAI;YAAkD;cAAAzC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3D5I,OAAA;cAAAyI,QAAA,EAAI;YAA4D;cAAAzC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACN,EAGAxH,YAAY,IAAIA,YAAY,CAACqD,KAAK,KAAK,OAAO,iBAC7CzE,OAAA;UAAKwI,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCzI,OAAA;YAAAyI,QAAA,EAAG;UAAqE;YAAAzC,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC5E5I,OAAA;YAAAyI,QAAA,EAAG;UAAsC;YAAAzC,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CACN;MAAA;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAEL9H,OAAO,IAAI,CAACQ,eAAe,iBAC1BtB,OAAA;QAAGwI,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAkC;QAAAzC,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC7D,EAEA5H,KAAK,IAAI,CAACI,YAAY,iBACrBpB,OAAA;QAAGwI,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEzH;MAAK;QAAAgF,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAChC,EAGA5H,KAAK,IAAII,YAAY,iBACpBpB,OAAA;QAAKwI,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BzI,OAAA;UAAAyI,QAAA,gBACEzI,OAAA;YAAAyI,QAAA,EAAS;UAAkB;YAAAzC,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eACrC5I,OAAA;YAAKwI,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEzH;UAAK;YAAAgF,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAAC;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACN,EAGAlI,SAAS,CAACoD,MAAM,GAAG,CAAC,iBACnB9D,OAAA;QAAKwI,SAAS,EAAC,wBAAwB;QAAAC,QAAA,eACrCzI,OAAA;UACEwI,SAAS,EAAC,cAAc;UACxBK,OAAO,EAAE/F,WAAY;UACrB2G,QAAQ,EAAE3I,OAAQ;UAAA2H,QAAA,EACnB;QAED;UAAAzC,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,eAED5I,OAAA;QAAKwI,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/B/H,SAAS,CAACoD,MAAM,KAAK,CAAC,gBACrB9D,OAAA;UAAKwI,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BzI,OAAA;YAAAyI,QAAA,EAAG;UAAyC;YAAAzC,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAChD5I,OAAA;YAAAyI,QAAA,EAAG;UAAoC;YAAAzC,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,gBAEN5I,OAAA;UAAKwI,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClCzI,OAAA;YAAAyI,QAAA,EAAI;UAAoB;YAAAzC,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC5BlI,SAAS,CAACoD,MAAM,GAAG,CAAC,iBACnB9D,OAAA;YAAKwI,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BzI,OAAA;cAAMwI,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAE/H,SAAS,CAACoD,MAAM,EAAC,0BAAqB;YAAA;cAAAkC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC1EpI,KAAK,CAACsD,MAAM,GAAG,CAAC,iBACf9D,OAAA;cAAMwI,SAAS,EAAC,mBAAmB;cAAAC,QAAA,GAAC,KAAG,EAACjI,KAAK,CAACsD,MAAM,EAAC,WAAS;YAAA;cAAAkC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACrE,eACD5I,OAAA;cAAMwI,SAAS,EAAC,iBAAiB;cAAAC,QAAA,GAAC,QAAG,EAAC,IAAI9D,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;YAAA;cAAAoB,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1E,CACN,eACD5I,OAAA;YAAGwI,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAuC;YAAAzC,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC5E5I,OAAA;YAAKwI,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClCzI,OAAA;cACEoJ,GAAG,EAAEpH,WAAY;cACjBwG,SAAS,EAAC,mBAAmB;cAC7BxF,KAAK,EAAEuD,wBAAwB,CAAC,CAAE;cAClCsD,QAAQ;cACRC,WAAW,EAAC;YAAkC;cAAA9D,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACF5I,OAAA;cACE6I,OAAO,EAAEpB,eAAgB;cACzBe,SAAS,EAAC,aAAa;cACvBiB,QAAQ,EAAE/I,SAAS,CAACoD,MAAM,KAAK,CAAE;cAAA2E,QAAA,EAClC;YAED;cAAAzC,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACN;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAA5C,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEP5I,OAAA;MAAAyI,QAAA,gBACEzI,OAAA;QAAAyI,QAAA,EAAG;MAAmE;QAAAzC,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1E5I,OAAA;QAAGwI,SAAS,EAAC,UAAU;QAAAC,QAAA,GAAC,YACZ,EAAC,CAAAvH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEyB,GAAG,KAAI,cAAc,EAAC,UAAQ,EAACtC,OAAO;MAAA;QAAA2F,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAA5C,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAA5C,QAAA,EAAA0C,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrI,EAAA,CAjoBQD,GAAG;AAAAyJ,EAAA,GAAHzJ,GAAG;AAmoBZ,eAAeA,GAAG;AAAC,IAAAyJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}